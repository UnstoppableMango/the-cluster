apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
    pod-security.kubernetes.io/enforce: privileged
  name: sidero-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: caps-leader-election-role
  namespace: sidero-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-leader-election-role
  namespace: sidero-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: caps-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metalclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metalclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metalmachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metalmachines/status
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - serverbindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - serverbindings/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - metal.sidero.dev
  resources:
  - serverclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metal.sidero.dev
  resources:
  - serverclasses/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metal.sidero.dev
  resources:
  - servers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metal.sidero.dev
  resources:
  - servers/status
  verbs:
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: caps-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-environment-editor-role
rules:
- apiGroups:
  - metal.sidero.dev
  resources:
  - environments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - metal.sidero.dev
  resources:
  - environments/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-server-editor-role
rules:
- apiGroups:
  - metal.sidero.dev
  resources:
  - servers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - metal.sidero.dev
  resources:
  - servers/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-serverclass-editor-role
rules:
- apiGroups:
  - metal.sidero.dev
  resources:
  - serverclasses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - metal.sidero.dev
  resources:
  - serverclasses/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: caps-leader-election-rolebinding
  namespace: sidero-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: caps-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: sidero-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-leader-election-rolebinding
  namespace: sidero-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sidero-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: sidero-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: caps-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: caps-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: sidero-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: caps-metalcluster-editor-role-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: caps-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: sidero-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: caps-metalmachine-editor-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: caps-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: sidero-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: caps-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: caps-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: sidero-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-manager-environment-editor-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sidero-environment-editor-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: sidero-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-manager-server-editor-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sidero-server-editor-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: sidero-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-manager-serverclass-editor-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sidero-serverclass-editor-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: sidero-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sidero-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: sidero-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
    control-plane: caps-controller-manager
  name: caps-controller-manager-metrics-service
  namespace: sidero-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app: sidero
    cluster.x-k8s.io/provider: sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    control-plane: caps-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: caps-webhook-service
  namespace: sidero-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app: sidero
    cluster.x-k8s.io/provider: sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    control-plane: caps-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
    control-plane: sidero-controller-manager
  name: sidero-controller-manager-metrics-service
  namespace: sidero-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app: sidero
    cluster.x-k8s.io/provider: sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    control-plane: sidero-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-dhcp
  namespace: sidero-system
spec:
  ports:
  - port: 67
    protocol: UDP
    targetPort: dhcp
  selector:
    app: sidero
    cluster.x-k8s.io/provider: sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    control-plane: sidero-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-http
  namespace: sidero-system
spec:
  ports:
  - port: 8081
    protocol: TCP
    targetPort: http
  selector:
    app: sidero
    cluster.x-k8s.io/provider: sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    control-plane: sidero-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-siderolink
  namespace: sidero-system
spec:
  ports:
  - port: 51821
    protocol: UDP
    targetPort: siderolink
  selector:
    app: sidero
    cluster.x-k8s.io/provider: sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    control-plane: sidero-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-tftp
  namespace: sidero-system
spec:
  ports:
  - port: 69
    protocol: UDP
    targetPort: tftp
  selector:
    app: sidero
    cluster.x-k8s.io/provider: sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    control-plane: sidero-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-webhook-service
  namespace: sidero-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app: sidero
    cluster.x-k8s.io/provider: sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    control-plane: sidero-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
    control-plane: caps-controller-manager
  name: caps-controller-manager
  namespace: sidero-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sidero
      cluster.x-k8s.io/provider: sidero
      cluster.x-k8s.io/v1alpha3: v1alpha3
      cluster.x-k8s.io/v1alpha4: v1alpha3
      cluster.x-k8s.io/v1beta1: v1alpha3
      control-plane: caps-controller-manager
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sidero
        cluster.x-k8s.io/provider: sidero
        cluster.x-k8s.io/v1alpha3: v1alpha3
        cluster.x-k8s.io/v1alpha4: v1alpha3
        cluster.x-k8s.io/v1beta1: v1alpha3
        control-plane: caps-controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-addr=127.0.0.1:8080
        command:
        - /manager
        image: ghcr.io/siderolabs/caps-controller-manager:v0.6.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        resources: {}
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: caps-webhook-service-cert
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
    control-plane: sidero-controller-manager
  name: sidero-controller-manager
  namespace: sidero-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sidero
      cluster.x-k8s.io/provider: sidero
      cluster.x-k8s.io/v1alpha3: v1alpha3
      cluster.x-k8s.io/v1alpha4: v1alpha3
      cluster.x-k8s.io/v1beta1: v1alpha3
      control-plane: sidero-controller-manager
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sidero
        cluster.x-k8s.io/provider: sidero
        cluster.x-k8s.io/v1alpha3: v1alpha3
        cluster.x-k8s.io/v1alpha4: v1alpha3
        cluster.x-k8s.io/v1beta1: v1alpha3
        control-plane: sidero-controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-addr=127.0.0.1:8080
        - --api-endpoint=man.thecluster.io
        - --api-port=8081
        - --http-port=8081
        - --extra-agent-kernel-args=-
        - --boot-from-disk-method=ipxe-exit
        - --auto-accept-servers=false
        - --insecure-wipe=true
        - --auto-bmc-setup=true
        - --server-reboot-timeout=20m
        - --ipmi-pxe-method=uefi
        - --test-power-simulated-explicit-failure-prob=0
        - --test-power-simulated-silent-failure-prob=0
        command:
        - /manager
        env:
        - name: API_ENDPOINT
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: ghcr.io/siderolabs/sidero-controller-manager:v0.6.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 67
          name: dhcp
          protocol: UDP
        - containerPort: 69
          name: tftp
          protocol: UDP
        - containerPort: 8081
          name: http
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        resources: {}
      - args:
        - --wireguard-endpoint=-
        - --wireguard-port=51821
        command:
        - /siderolink-manager
        env:
        - name: API_ENDPOINT
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: ghcr.io/siderolabs/sidero-controller-manager:v0.6.0
        imagePullPolicy: Always
        name: siderolink
        ports:
        - containerPort: 51821
          name: siderolink
          protocol: UDP
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
        volumeMounts:
        - mountPath: /dev/net/tun
          name: dev-tun
      - command:
        - /log-receiver
        image: ghcr.io/siderolabs/sidero-controller-manager:v0.6.0
        imagePullPolicy: Always
        name: serverlogs
        resources:
          limits:
            cpu: 256m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
      - command:
        - /events-manager
        image: ghcr.io/siderolabs/sidero-controller-manager:v0.6.0
        imagePullPolicy: Always
        name: serverevents
        resources:
          limits:
            cpu: 256m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
      hostNetwork: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: sidero-webhook-service-cert
      - hostPath:
          path: /dev/net/tun
          type: CharDevice
        name: dev-tun
status: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: caps-serving-cert
  namespace: sidero-system
spec:
  dnsNames:
  - caps-webhook-service.sidero-system.svc
  - caps-webhook-service.sidero-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: caps-selfsigned-issuer
  secretName: caps-webhook-service-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-serving-cert
  namespace: sidero-system
spec:
  dnsNames:
  - sidero-webhook-service.sidero-system.svc
  - sidero-webhook-service.sidero-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: sidero-selfsigned-issuer
  secretName: sidero-webhook-service-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: caps-selfsigned-issuer
  namespace: sidero-system
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-selfsigned-issuer
  namespace: sidero-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: sidero-system/caps-serving-cert
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: caps-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: caps-webhook-service
      namespace: sidero-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-metalmachinetemplate
  failurePolicy: Fail
  name: vmetalmachinetemplates.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - metalmachinetemplates
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: sidero-system/sidero-serving-cert
  creationTimestamp: null
  labels:
    app: sidero
    cluster.x-k8s.io/provider: infrastructure-sidero
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha3
    cluster.x-k8s.io/v1beta1: v1alpha3
    clusterctl.cluster.x-k8s.io: ""
  name: sidero-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: sidero-webhook-service
      namespace: sidero-system
      path: /validate-metal-sidero-dev-v1alpha1-server
  failurePolicy: Fail
  name: vservers.metal.sidero.dev
  rules:
  - apiGroups:
    - metal.sidero.dev
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - servers
  sideEffects: None
