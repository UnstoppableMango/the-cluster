// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Pulumi.V1
{

    /// <summary>
    /// (optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.
    /// </summary>
    public class StackSpecGitAuthArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.
        /// </summary>
        [Input("accessToken")]
        public Input<global::Pulumi.Kubernetes.Types.Inputs.Pulumi.V1.StackSpecGitAuthAccessTokenArgs>? AccessToken { get; set; }

        /// <summary>
        /// BasicAuth configures git authentication through basic auth â€” i.e. username and password. Both UserName and Password are required.
        /// </summary>
        [Input("basicAuth")]
        public Input<global::Pulumi.Kubernetes.Types.Inputs.Pulumi.V1.StackSpecGitAuthBasicAuthArgs>? BasicAuth { get; set; }

        /// <summary>
        /// SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.
        /// </summary>
        [Input("sshAuth")]
        public Input<global::Pulumi.Kubernetes.Types.Inputs.Pulumi.V1.StackSpecGitAuthSshAuthArgs>? SshAuth { get; set; }

        public StackSpecGitAuthArgs()
        {
        }
        public static new StackSpecGitAuthArgs Empty => new StackSpecGitAuthArgs();
    }
}
