// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { MetalClusterArgs } from "./metalCluster";
export type MetalCluster = import("./metalCluster").MetalCluster;
export const MetalCluster: typeof import("./metalCluster").MetalCluster = null as any;
utilities.lazyLoad(exports, ["MetalCluster"], () => require("./metalCluster"));

export { MetalMachineArgs } from "./metalMachine";
export type MetalMachine = import("./metalMachine").MetalMachine;
export const MetalMachine: typeof import("./metalMachine").MetalMachine = null as any;
utilities.lazyLoad(exports, ["MetalMachine"], () => require("./metalMachine"));

export { MetalMachineTemplateArgs } from "./metalMachineTemplate";
export type MetalMachineTemplate = import("./metalMachineTemplate").MetalMachineTemplate;
export const MetalMachineTemplate: typeof import("./metalMachineTemplate").MetalMachineTemplate = null as any;
utilities.lazyLoad(exports, ["MetalMachineTemplate"], () => require("./metalMachineTemplate"));

const _module = {
  version: utilities.getVersion(),
  construct: (name: string, type: string, urn: string): pulumi.Resource => {
    switch (type) {
      case "kubernetes:infrastructure.cluster.x-k8s.io/v1alpha2:MetalCluster":
        return new MetalCluster(name, <any> undefined, { urn });
      case "kubernetes:infrastructure.cluster.x-k8s.io/v1alpha2:MetalMachine":
        return new MetalMachine(name, <any> undefined, { urn });
      case "kubernetes:infrastructure.cluster.x-k8s.io/v1alpha2:MetalMachineTemplate":
        return new MetalMachineTemplate(name, <any> undefined, { urn });
      default:
        throw new Error(`unknown resource type ${type}`);
    }
  },
};
pulumi.runtime.registerResourceModule("thecluster-crds", "infrastructure.cluster.x-k8s.io/v1alpha2", _module);
