// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { TalosControlPlaneArgs } from "./talosControlPlane";
export type TalosControlPlane = import("./talosControlPlane").TalosControlPlane;
export const TalosControlPlane: typeof import("./talosControlPlane").TalosControlPlane = null as any;
utilities.lazyLoad(exports, ["TalosControlPlane"], () => require("./talosControlPlane"));

const _module = {
  version: utilities.getVersion(),
  construct: (name: string, type: string, urn: string): pulumi.Resource => {
    switch (type) {
      case "kubernetes:controlplane.cluster.x-k8s.io/v1alpha3:TalosControlPlane":
        return new TalosControlPlane(name, <any> undefined, { urn });
      default:
        throw new Error(`unknown resource type ${type}`);
    }
  },
};
pulumi.runtime.registerResourceModule("thecluster-crds", "controlplane.cluster.x-k8s.io/v1alpha3", _module);
