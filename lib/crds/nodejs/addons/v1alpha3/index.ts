// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ClusterResourceSetArgs } from "./clusterResourceSet";
export type ClusterResourceSet = import("./clusterResourceSet").ClusterResourceSet;
export const ClusterResourceSet: typeof import("./clusterResourceSet").ClusterResourceSet = null as any;
utilities.lazyLoad(exports, ["ClusterResourceSet"], () => require("./clusterResourceSet"));

export { ClusterResourceSetBindingArgs } from "./clusterResourceSetBinding";
export type ClusterResourceSetBinding = import("./clusterResourceSetBinding").ClusterResourceSetBinding;
export const ClusterResourceSetBinding: typeof import("./clusterResourceSetBinding").ClusterResourceSetBinding = null as any;
utilities.lazyLoad(exports, ["ClusterResourceSetBinding"], () => require("./clusterResourceSetBinding"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:addons.cluster.x-k8s.io/v1alpha3:ClusterResourceSet":
                return new ClusterResourceSet(name, <any>undefined, { urn })
            case "kubernetes:addons.cluster.x-k8s.io/v1alpha3:ClusterResourceSetBinding":
                return new ClusterResourceSetBinding(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("thecluster-crds", "addons.cluster.x-k8s.io/v1alpha3", _module)
