// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ControlPlaneArgs } from "./controlPlane";
export type ControlPlane = import("./controlPlane").ControlPlane;
export const ControlPlane: typeof import("./controlPlane").ControlPlane = null as any;
utilities.lazyLoad(exports, ["ControlPlane"], () => require("./controlPlane"));

export { GatewayConfigurationArgs } from "./gatewayConfiguration";
export type GatewayConfiguration = import("./gatewayConfiguration").GatewayConfiguration;
export const GatewayConfiguration: typeof import("./gatewayConfiguration").GatewayConfiguration = null as any;
utilities.lazyLoad(exports, ["GatewayConfiguration"], () => require("./gatewayConfiguration"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:gateway-operator.konghq.com/v1alpha1:ControlPlane":
                return new ControlPlane(name, <any>undefined, { urn })
            case "kubernetes:gateway-operator.konghq.com/v1alpha1:GatewayConfiguration":
                return new GatewayConfiguration(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("thecluster-crds", "gateway-operator.konghq.com/v1alpha1", _module)
