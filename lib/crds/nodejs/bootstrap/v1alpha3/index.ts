// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { TalosConfigArgs } from "./talosConfig";
export type TalosConfig = import("./talosConfig").TalosConfig;
export const TalosConfig: typeof import("./talosConfig").TalosConfig = null as any;
utilities.lazyLoad(exports, ["TalosConfig"], () => require("./talosConfig"));

export { TalosConfigTemplateArgs } from "./talosConfigTemplate";
export type TalosConfigTemplate = import("./talosConfigTemplate").TalosConfigTemplate;
export const TalosConfigTemplate: typeof import("./talosConfigTemplate").TalosConfigTemplate = null as any;
utilities.lazyLoad(exports, ["TalosConfigTemplate"], () => require("./talosConfigTemplate"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:bootstrap.cluster.x-k8s.io/v1alpha3:TalosConfig":
                return new TalosConfig(name, <any>undefined, { urn })
            case "kubernetes:bootstrap.cluster.x-k8s.io/v1alpha3:TalosConfigTemplate":
                return new TalosConfigTemplate(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("thecluster-crds", "bootstrap.cluster.x-k8s.io/v1alpha3", _module)
