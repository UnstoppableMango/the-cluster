// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ClusterTunnelArgs } from "./clusterTunnel";
export type ClusterTunnel = import("./clusterTunnel").ClusterTunnel;
export const ClusterTunnel: typeof import("./clusterTunnel").ClusterTunnel = null as any;
utilities.lazyLoad(exports, ["ClusterTunnel"], () => require("./clusterTunnel"));

export { TunnelArgs } from "./tunnel";
export type Tunnel = import("./tunnel").Tunnel;
export const Tunnel: typeof import("./tunnel").Tunnel = null as any;
utilities.lazyLoad(exports, ["Tunnel"], () => require("./tunnel"));

export { TunnelBindingArgs } from "./tunnelBinding";
export type TunnelBinding = import("./tunnelBinding").TunnelBinding;
export const TunnelBinding: typeof import("./tunnelBinding").TunnelBinding = null as any;
utilities.lazyLoad(exports, ["TunnelBinding"], () => require("./tunnelBinding"));

const _module = {
  version: utilities.getVersion(),
  construct: (name: string, type: string, urn: string): pulumi.Resource => {
    switch (type) {
      case "kubernetes:networking.cfargotunnel.com/v1alpha1:ClusterTunnel":
        return new ClusterTunnel(name, <any> undefined, { urn });
      case "kubernetes:networking.cfargotunnel.com/v1alpha1:Tunnel":
        return new Tunnel(name, <any> undefined, { urn });
      case "kubernetes:networking.cfargotunnel.com/v1alpha1:TunnelBinding":
        return new TunnelBinding(name, <any> undefined, { urn });
      default:
        throw new Error(`unknown resource type ${type}`);
    }
  },
};
pulumi.runtime.registerResourceModule("thecluster-crds", "networking.cfargotunnel.com/v1alpha1", _module);
