// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AutoscalingListenerArgs } from "./autoscalingListener";
export type AutoscalingListener = import("./autoscalingListener").AutoscalingListener;
export const AutoscalingListener: typeof import("./autoscalingListener").AutoscalingListener = null as any;
utilities.lazyLoad(exports, ["AutoscalingListener"], () => require("./autoscalingListener"));

export { AutoscalingRunnerSetArgs } from "./autoscalingRunnerSet";
export type AutoscalingRunnerSet = import("./autoscalingRunnerSet").AutoscalingRunnerSet;
export const AutoscalingRunnerSet: typeof import("./autoscalingRunnerSet").AutoscalingRunnerSet = null as any;
utilities.lazyLoad(exports, ["AutoscalingRunnerSet"], () => require("./autoscalingRunnerSet"));

export { EphemeralRunnerArgs } from "./ephemeralRunner";
export type EphemeralRunner = import("./ephemeralRunner").EphemeralRunner;
export const EphemeralRunner: typeof import("./ephemeralRunner").EphemeralRunner = null as any;
utilities.lazyLoad(exports, ["EphemeralRunner"], () => require("./ephemeralRunner"));

export { EphemeralRunnerSetArgs } from "./ephemeralRunnerSet";
export type EphemeralRunnerSet = import("./ephemeralRunnerSet").EphemeralRunnerSet;
export const EphemeralRunnerSet: typeof import("./ephemeralRunnerSet").EphemeralRunnerSet = null as any;
utilities.lazyLoad(exports, ["EphemeralRunnerSet"], () => require("./ephemeralRunnerSet"));

const _module = {
  version: utilities.getVersion(),
  construct: (name: string, type: string, urn: string): pulumi.Resource => {
    switch (type) {
      case "kubernetes:actions.github.com/v1alpha1:AutoscalingListener":
        return new AutoscalingListener(name, <any> undefined, { urn });
      case "kubernetes:actions.github.com/v1alpha1:AutoscalingRunnerSet":
        return new AutoscalingRunnerSet(name, <any> undefined, { urn });
      case "kubernetes:actions.github.com/v1alpha1:EphemeralRunner":
        return new EphemeralRunner(name, <any> undefined, { urn });
      case "kubernetes:actions.github.com/v1alpha1:EphemeralRunnerSet":
        return new EphemeralRunnerSet(name, <any> undefined, { urn });
      default:
        throw new Error(`unknown resource type ${type}`);
    }
  },
};
pulumi.runtime.registerResourceModule("thecluster-crds", "actions.github.com/v1alpha1", _module);
