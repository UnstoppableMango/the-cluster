// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { EnvironmentArgs } from "./environment";
export type Environment = import("./environment").Environment;
export const Environment: typeof import("./environment").Environment = null as any;
utilities.lazyLoad(exports, ["Environment"], () => require("./environment"));

export { ServerArgs } from "./server";
export type Server = import("./server").Server;
export const Server: typeof import("./server").Server = null as any;
utilities.lazyLoad(exports, ["Server"], () => require("./server"));

export { ServerClassArgs } from "./serverClass";
export type ServerClass = import("./serverClass").ServerClass;
export const ServerClass: typeof import("./serverClass").ServerClass = null as any;
utilities.lazyLoad(exports, ["ServerClass"], () => require("./serverClass"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:metal.sidero.dev/v1alpha2:Environment":
                return new Environment(name, <any>undefined, { urn })
            case "kubernetes:metal.sidero.dev/v1alpha2:Server":
                return new Server(name, <any>undefined, { urn })
            case "kubernetes:metal.sidero.dev/v1alpha2:ServerClass":
                return new ServerClass(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "metal.sidero.dev/v1alpha2", _module)
