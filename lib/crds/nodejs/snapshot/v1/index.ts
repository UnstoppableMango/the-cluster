// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { VolumeSnapshotArgs } from "./volumeSnapshot";
export type VolumeSnapshot = import("./volumeSnapshot").VolumeSnapshot;
export const VolumeSnapshot: typeof import("./volumeSnapshot").VolumeSnapshot = null as any;
utilities.lazyLoad(exports, ["VolumeSnapshot"], () => require("./volumeSnapshot"));

export { VolumeSnapshotClassArgs } from "./volumeSnapshotClass";
export type VolumeSnapshotClass = import("./volumeSnapshotClass").VolumeSnapshotClass;
export const VolumeSnapshotClass: typeof import("./volumeSnapshotClass").VolumeSnapshotClass = null as any;
utilities.lazyLoad(exports, ["VolumeSnapshotClass"], () => require("./volumeSnapshotClass"));

export { VolumeSnapshotContentArgs } from "./volumeSnapshotContent";
export type VolumeSnapshotContent = import("./volumeSnapshotContent").VolumeSnapshotContent;
export const VolumeSnapshotContent: typeof import("./volumeSnapshotContent").VolumeSnapshotContent = null as any;
utilities.lazyLoad(exports, ["VolumeSnapshotContent"], () => require("./volumeSnapshotContent"));

const _module = {
  version: utilities.getVersion(),
  construct: (name: string, type: string, urn: string): pulumi.Resource => {
    switch (type) {
      case "kubernetes:snapshot.storage.k8s.io/v1:VolumeSnapshot":
        return new VolumeSnapshot(name, <any> undefined, { urn });
      case "kubernetes:snapshot.storage.k8s.io/v1:VolumeSnapshotClass":
        return new VolumeSnapshotClass(name, <any> undefined, { urn });
      case "kubernetes:snapshot.storage.k8s.io/v1:VolumeSnapshotContent":
        return new VolumeSnapshotContent(name, <any> undefined, { urn });
      default:
        throw new Error(`unknown resource type ${type}`);
    }
  },
};
pulumi.runtime.registerResourceModule("thecluster-crds", "snapshot.storage.k8s.io/v1", _module);
