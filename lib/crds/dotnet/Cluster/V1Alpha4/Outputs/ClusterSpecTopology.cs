// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Cluster.V1Alpha4
{

    /// <summary>
    /// This encapsulates the topology for the cluster. NOTE: It is required to enable the ClusterTopology feature gate flag to activate managed topologies support; this feature is highly experimental, and parts of it might still be not implemented.
    /// </summary>
    [OutputType]
    public sealed class ClusterSpecTopology
    {
        /// <summary>
        /// The name of the ClusterClass object to create the topology.
        /// </summary>
        public readonly string Class;
        /// <summary>
        /// ControlPlane describes the cluster control plane.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Cluster.V1Alpha4.ClusterSpecTopologyControlPlane ControlPlane;
        /// <summary>
        /// RolloutAfter performs a rollout of the entire cluster one component at a time, control plane first and then machine deployments.
        /// </summary>
        public readonly string RolloutAfter;
        /// <summary>
        /// The Kubernetes version of the cluster.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// Workers encapsulates the different constructs that form the worker nodes for the cluster.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Cluster.V1Alpha4.ClusterSpecTopologyWorkers Workers;

        [OutputConstructor]
        private ClusterSpecTopology(
            string @class,

            Pulumi.Kubernetes.Types.Outputs.Cluster.V1Alpha4.ClusterSpecTopologyControlPlane controlPlane,

            string rolloutAfter,

            string version,

            Pulumi.Kubernetes.Types.Outputs.Cluster.V1Alpha4.ClusterSpecTopologyWorkers workers)
        {
            Class = @class;
            ControlPlane = controlPlane;
            RolloutAfter = rolloutAfter;
            Version = version;
            Workers = workers;
        }
    }
}
