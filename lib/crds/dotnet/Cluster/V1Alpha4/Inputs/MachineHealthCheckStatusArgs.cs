// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Cluster.V1Alpha4
{

    /// <summary>
    /// Most recently observed status of MachineHealthCheck resource
    /// </summary>
    public class MachineHealthCheckStatusArgs : global::Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Alpha4.MachineHealthCheckStatusConditionsArgs>? _conditions;

        /// <summary>
        /// Conditions defines current service state of the MachineHealthCheck.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Alpha4.MachineHealthCheckStatusConditionsArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Alpha4.MachineHealthCheckStatusConditionsArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// total number of healthy machines counted by this machine health check
        /// </summary>
        [Input("currentHealthy")]
        public Input<int>? CurrentHealthy { get; set; }

        /// <summary>
        /// total number of machines counted by this machine health check
        /// </summary>
        [Input("expectedMachines")]
        public Input<int>? ExpectedMachines { get; set; }

        /// <summary>
        /// ObservedGeneration is the latest generation observed by the controller.
        /// </summary>
        [Input("observedGeneration")]
        public Input<int>? ObservedGeneration { get; set; }

        /// <summary>
        /// RemediationsAllowed is the number of further remediations allowed by this machine health check before maxUnhealthy short circuiting will be applied
        /// </summary>
        [Input("remediationsAllowed")]
        public Input<int>? RemediationsAllowed { get; set; }

        [Input("targets")]
        private InputList<string>? _targets;

        /// <summary>
        /// Targets shows the current list of machines the machine health check is watching
        /// </summary>
        public InputList<string> Targets
        {
            get => _targets ?? (_targets = new InputList<string>());
            set => _targets = value;
        }

        public MachineHealthCheckStatusArgs()
        {
        }
        public static new MachineHealthCheckStatusArgs Empty => new MachineHealthCheckStatusArgs();
    }
}
