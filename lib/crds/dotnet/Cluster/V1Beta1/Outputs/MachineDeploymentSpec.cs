// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1
{

    /// <summary>
    /// MachineDeploymentSpec defines the desired state of MachineDeployment.
    /// </summary>
    [OutputType]
    public sealed class MachineDeploymentSpec
    {
        /// <summary>
        /// ClusterName is the name of the Cluster this object belongs to.
        /// </summary>
        public readonly string ClusterName;
        /// <summary>
        /// MinReadySeconds is the minimum number of seconds for which a Node for a newly created machine should be ready before considering the replica available. Defaults to 0 (machine will be considered available as soon as the Node is ready)
        /// </summary>
        public readonly int MinReadySeconds;
        /// <summary>
        /// Indicates that the deployment is paused.
        /// </summary>
        public readonly bool Paused;
        /// <summary>
        /// The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
        /// </summary>
        public readonly int ProgressDeadlineSeconds;
        /// <summary>
        /// Number of desired machines. This is a pointer to distinguish between explicit zero and not specified. 
        ///  Defaults to: * if the Kubernetes autoscaler min size and max size annotations are set: - if it's a new MachineDeployment, use min size - if the replicas field of the old MachineDeployment is &lt; min size, use min size - if the replicas field of the old MachineDeployment is &gt; max size, use max size - if the replicas field of the old MachineDeployment is in the (min size, max size) range, keep the value from the oldMD * otherwise use 1 Note: Defaulting will be run whenever the replicas field is not set: * A new MachineDeployment is created with replicas not set. * On an existing MachineDeployment the replicas field was first set and is now unset. Those cases are especially relevant for the following Kubernetes autoscaler use cases: * A new MachineDeployment is created and replicas should be managed by the autoscaler * An existing MachineDeployment which initially wasn't controlled by the autoscaler should be later controlled by the autoscaler
        /// </summary>
        public readonly int Replicas;
        /// <summary>
        /// The number of old MachineSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
        /// </summary>
        public readonly int RevisionHistoryLimit;
        /// <summary>
        /// RolloutAfter is a field to indicate a rollout should be performed after the specified time even if no changes have been made to the MachineDeployment. Example: In the YAML the time can be specified in the RFC3339 format. To specify the rolloutAfter target as March 9, 2023, at 9 am UTC use "2023-03-09T09:00:00Z".
        /// </summary>
        public readonly string RolloutAfter;
        /// <summary>
        /// Label selector for machines. Existing MachineSets whose machines are selected by this will be the ones affected by this deployment. It must match the machine template's labels.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineDeploymentSpecSelector Selector;
        /// <summary>
        /// The deployment strategy to use to replace existing machines with new ones.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineDeploymentSpecStrategy Strategy;
        /// <summary>
        /// Template describes the machines that will be created.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineDeploymentSpecTemplate Template;

        [OutputConstructor]
        private MachineDeploymentSpec(
            string clusterName,

            int minReadySeconds,

            bool paused,

            int progressDeadlineSeconds,

            int replicas,

            int revisionHistoryLimit,

            string rolloutAfter,

            Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineDeploymentSpecSelector selector,

            Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineDeploymentSpecStrategy strategy,

            Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineDeploymentSpecTemplate template)
        {
            ClusterName = clusterName;
            MinReadySeconds = minReadySeconds;
            Paused = paused;
            ProgressDeadlineSeconds = progressDeadlineSeconds;
            Replicas = replicas;
            RevisionHistoryLimit = revisionHistoryLimit;
            RolloutAfter = rolloutAfter;
            Selector = selector;
            Strategy = strategy;
            Template = template;
        }
    }
}
