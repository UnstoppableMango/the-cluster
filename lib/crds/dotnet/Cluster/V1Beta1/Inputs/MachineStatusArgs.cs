// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1
{

    /// <summary>
    /// MachineStatus defines the observed state of Machine.
    /// </summary>
    public class MachineStatusArgs : global::Pulumi.ResourceArgs
    {
        [Input("addresses")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.MachineStatusAddressesArgs>? _addresses;

        /// <summary>
        /// Addresses is a list of addresses assigned to the machine. This field is copied from the infrastructure provider reference.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.MachineStatusAddressesArgs> Addresses
        {
            get => _addresses ?? (_addresses = new InputList<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.MachineStatusAddressesArgs>());
            set => _addresses = value;
        }

        /// <summary>
        /// BootstrapReady is the state of the bootstrap provider.
        /// </summary>
        [Input("bootstrapReady")]
        public Input<bool>? BootstrapReady { get; set; }

        /// <summary>
        /// CertificatesExpiryDate is the expiry date of the machine certificates. This value is only set for control plane machines.
        /// </summary>
        [Input("certificatesExpiryDate")]
        public Input<string>? CertificatesExpiryDate { get; set; }

        [Input("conditions")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.MachineStatusConditionsArgs>? _conditions;

        /// <summary>
        /// Conditions defines current service state of the Machine.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.MachineStatusConditionsArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.MachineStatusConditionsArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// FailureMessage will be set in the event that there is a terminal problem reconciling the Machine and will contain a more verbose string suitable for logging and human consumption. 
        ///  This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. 
        ///  Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output.
        /// </summary>
        [Input("failureMessage")]
        public Input<string>? FailureMessage { get; set; }

        /// <summary>
        /// FailureReason will be set in the event that there is a terminal problem reconciling the Machine and will contain a succinct value suitable for machine interpretation. 
        ///  This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. 
        ///  Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output.
        /// </summary>
        [Input("failureReason")]
        public Input<string>? FailureReason { get; set; }

        /// <summary>
        /// InfrastructureReady is the state of the infrastructure provider.
        /// </summary>
        [Input("infrastructureReady")]
        public Input<bool>? InfrastructureReady { get; set; }

        /// <summary>
        /// LastUpdated identifies when the phase of the Machine last transitioned.
        /// </summary>
        [Input("lastUpdated")]
        public Input<string>? LastUpdated { get; set; }

        /// <summary>
        /// NodeInfo is a set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info
        /// </summary>
        [Input("nodeInfo")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.MachineStatusNodeInfoArgs>? NodeInfo { get; set; }

        /// <summary>
        /// NodeRef will point to the corresponding Node if it exists.
        /// </summary>
        [Input("nodeRef")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.MachineStatusNodeRefArgs>? NodeRef { get; set; }

        /// <summary>
        /// ObservedGeneration is the latest generation observed by the controller.
        /// </summary>
        [Input("observedGeneration")]
        public Input<int>? ObservedGeneration { get; set; }

        /// <summary>
        /// Phase represents the current phase of machine actuation. E.g. Pending, Running, Terminating, Failed etc.
        /// </summary>
        [Input("phase")]
        public Input<string>? Phase { get; set; }

        public MachineStatusArgs()
        {
        }
        public static new MachineStatusArgs Empty => new MachineStatusArgs();
    }
}
