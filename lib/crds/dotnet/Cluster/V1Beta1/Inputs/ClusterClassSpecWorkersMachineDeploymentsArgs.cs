// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1
{

    /// <summary>
    /// MachineDeploymentClass serves as a template to define a set of worker nodes of the cluster provisioned using the `ClusterClass`.
    /// </summary>
    public class ClusterClassSpecWorkersMachineDeploymentsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Class denotes a type of worker node present in the cluster, this name MUST be unique within a ClusterClass and can be referenced in the Cluster to create a managed MachineDeployment.
        /// </summary>
        [Input("class", required: true)]
        public Input<string> Class { get; set; } = null!;

        /// <summary>
        /// FailureDomain is the failure domain the machines will be created in. Must match a key in the FailureDomains map stored on the cluster object. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
        /// </summary>
        [Input("failureDomain")]
        public Input<string>? FailureDomain { get; set; }

        /// <summary>
        /// MachineHealthCheck defines a MachineHealthCheck for this MachineDeploymentClass.
        /// </summary>
        [Input("machineHealthCheck")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs>? MachineHealthCheck { get; set; }

        /// <summary>
        /// Minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready) NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
        /// </summary>
        [Input("minReadySeconds")]
        public Input<int>? MinReadySeconds { get; set; }

        /// <summary>
        /// NamingStrategy allows changing the naming pattern used when creating the MachineDeployment.
        /// </summary>
        [Input("namingStrategy")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs>? NamingStrategy { get; set; }

        /// <summary>
        /// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
        /// </summary>
        [Input("nodeDeletionTimeout")]
        public Input<string>? NodeDeletionTimeout { get; set; }

        /// <summary>
        /// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout` NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
        /// </summary>
        [Input("nodeDrainTimeout")]
        public Input<string>? NodeDrainTimeout { get; set; }

        /// <summary>
        /// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
        /// </summary>
        [Input("nodeVolumeDetachTimeout")]
        public Input<string>? NodeVolumeDetachTimeout { get; set; }

        /// <summary>
        /// The deployment strategy to use to replace existing machines with new ones. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
        /// </summary>
        [Input("strategy")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.ClusterClassSpecWorkersMachineDeploymentsStrategyArgs>? Strategy { get; set; }

        /// <summary>
        /// Template is a local struct containing a collection of templates for creation of MachineDeployment objects representing a set of worker nodes.
        /// </summary>
        [Input("template", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.ClusterClassSpecWorkersMachineDeploymentsTemplateArgs> Template { get; set; } = null!;

        public ClusterClassSpecWorkersMachineDeploymentsArgs()
        {
        }
        public static new ClusterClassSpecWorkersMachineDeploymentsArgs Empty => new ClusterClassSpecWorkersMachineDeploymentsArgs();
    }
}
