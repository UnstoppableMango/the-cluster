// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1
{

    /// <summary>
    /// MachinePoolTopology specifies the different parameters for a pool of worker nodes in the topology. This pool of nodes is managed by a MachinePool object whose lifecycle is managed by the Cluster controller.
    /// </summary>
    public class ClusterSpecTopologyWorkersMachinePoolsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Class is the name of the MachinePoolClass used to create the pool of worker nodes. This should match one of the deployment classes defined in the ClusterClass object mentioned in the `Cluster.Spec.Class` field.
        /// </summary>
        [Input("class", required: true)]
        public Input<string> Class { get; set; } = null!;

        [Input("failureDomains")]
        private InputList<string>? _failureDomains;

        /// <summary>
        /// FailureDomains is the list of failure domains the machine pool will be created in. Must match a key in the FailureDomains map stored on the cluster object.
        /// </summary>
        public InputList<string> FailureDomains
        {
            get => _failureDomains ?? (_failureDomains = new InputList<string>());
            set => _failureDomains = value;
        }

        /// <summary>
        /// Metadata is the metadata applied to the MachinePool. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
        /// </summary>
        [Input("metadata")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.ClusterSpecTopologyWorkersMachinePoolsMetadataArgs>? Metadata { get; set; }

        /// <summary>
        /// Minimum number of seconds for which a newly created machine pool should be ready. Defaults to 0 (machine will be considered available as soon as it is ready)
        /// </summary>
        [Input("minReadySeconds")]
        public Input<int>? MinReadySeconds { get; set; }

        /// <summary>
        /// Name is the unique identifier for this MachinePoolTopology. The value is used with other unique identifiers to create a MachinePool's Name (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length, the values are hashed together.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the MachinePool hosts after the MachinePool is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
        /// </summary>
        [Input("nodeDeletionTimeout")]
        public Input<string>? NodeDeletionTimeout { get; set; }

        /// <summary>
        /// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
        /// </summary>
        [Input("nodeDrainTimeout")]
        public Input<string>? NodeDrainTimeout { get; set; }

        /// <summary>
        /// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
        /// </summary>
        [Input("nodeVolumeDetachTimeout")]
        public Input<string>? NodeVolumeDetachTimeout { get; set; }

        /// <summary>
        /// Replicas is the number of nodes belonging to this pool. If the value is nil, the MachinePool is created without the number of Replicas (defaulting to 1) and it's assumed that an external entity (like cluster autoscaler) is responsible for the management of this value.
        /// </summary>
        [Input("replicas")]
        public Input<int>? Replicas { get; set; }

        /// <summary>
        /// Variables can be used to customize the MachinePool through patches.
        /// </summary>
        [Input("variables")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.ClusterSpecTopologyWorkersMachinePoolsVariablesArgs>? Variables { get; set; }

        public ClusterSpecTopologyWorkersMachinePoolsArgs()
        {
        }
        public static new ClusterSpecTopologyWorkersMachinePoolsArgs Empty => new ClusterSpecTopologyWorkersMachinePoolsArgs();
    }
}
