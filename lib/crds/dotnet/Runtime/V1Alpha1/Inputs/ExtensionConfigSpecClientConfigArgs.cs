// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Runtime.V1Alpha1
{

    /// <summary>
    /// ClientConfig defines how to communicate with the Extension server.
    /// </summary>
    public class ExtensionConfigSpecClientConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CABundle is a PEM encoded CA bundle which will be used to validate the Extension server's server certificate.
        /// </summary>
        [Input("caBundle")]
        public Input<string>? CaBundle { get; set; }

        /// <summary>
        /// Service is a reference to the Kubernetes service for the Extension server. Note: Exactly one of `url` or `service` must be specified. 
        ///  If the Extension server is running within a cluster, then you should use `service`.
        /// </summary>
        [Input("service")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Runtime.V1Alpha1.ExtensionConfigSpecClientConfigServiceArgs>? Service { get; set; }

        /// <summary>
        /// URL gives the location of the Extension server, in standard URL form (`scheme://host:port/path`). Note: Exactly one of `url` or `service` must be specified. 
        ///  The scheme must be "https". 
        ///  The `host` should not refer to a service running in the cluster; use the `service` field instead. 
        ///  A path is optional, and if present may be any string permissible in a URL. If a path is set it will be used as prefix to the hook-specific path. 
        ///  Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed either.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public ExtensionConfigSpecClientConfigArgs()
        {
        }
        public static new ExtensionConfigSpecClientConfigArgs Empty => new ExtensionConfigSpecClientConfigArgs();
    }
}
