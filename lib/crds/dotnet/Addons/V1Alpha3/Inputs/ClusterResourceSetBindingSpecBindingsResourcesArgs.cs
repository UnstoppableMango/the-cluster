// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Addons.V1Alpha3
{

    /// <summary>
    /// ResourceBinding shows the status of a resource that belongs to a ClusterResourceSet matched by the owner cluster of the ClusterResourceSetBinding object.
    /// </summary>
    public class ClusterResourceSetBindingSpecBindingsResourcesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Applied is to track if a resource is applied to the cluster or not.
        /// </summary>
        [Input("applied", required: true)]
        public Input<bool> Applied { get; set; } = null!;

        /// <summary>
        /// Hash is the hash of a resource's data. This can be used to decide if a resource is changed. For "ApplyOnce" ClusterResourceSet.spec.strategy, this is no-op as that strategy does not act on change.
        /// </summary>
        [Input("hash")]
        public Input<string>? Hash { get; set; }

        /// <summary>
        /// Kind of the resource. Supported kinds are: Secrets and ConfigMaps.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// LastAppliedTime identifies when this resource was last applied to the cluster.
        /// </summary>
        [Input("lastAppliedTime")]
        public Input<string>? LastAppliedTime { get; set; }

        /// <summary>
        /// Name of the resource that is in the same namespace with ClusterResourceSet object.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ClusterResourceSetBindingSpecBindingsResourcesArgs()
        {
        }
        public static new ClusterResourceSetBindingSpecBindingsResourcesArgs Empty => new ClusterResourceSetBindingSpecBindingsResourcesArgs();
    }
}
