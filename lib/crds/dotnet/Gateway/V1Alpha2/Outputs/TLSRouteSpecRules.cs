// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Gateway.V1Alpha2
{

    /// <summary>
    /// TLSRouteRule is the configuration for a given rule.
    /// </summary>
    [OutputType]
    public sealed class TLSRouteSpecRules
    {
        /// <summary>
        /// BackendRefs defines the backend(s) where matching requests should be sent. If unspecified or invalid (refers to a non-existent resource or a Service with no endpoints), the rule performs no forwarding; if no filters are specified that would result in a response being sent, the underlying implementation must actively reject request attempts to this backend, by rejecting the connection or returning a 500 status code. Request rejections must respect weight; if an invalid backend is requested to have 80% of requests, then 80% of requests must be rejected instead. 
        ///  Support: Core for Kubernetes Service 
        ///  Support: Extended for Kubernetes ServiceImport 
        ///  Support: Implementation-specific for any other resource 
        ///  Support for weight: Extended
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Gateway.V1Alpha2.TLSRouteSpecRulesBackendRefs> BackendRefs;

        [OutputConstructor]
        private TLSRouteSpecRules(ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Gateway.V1Alpha2.TLSRouteSpecRulesBackendRefs> backendRefs)
        {
            BackendRefs = backendRefs;
        }
    }
}
