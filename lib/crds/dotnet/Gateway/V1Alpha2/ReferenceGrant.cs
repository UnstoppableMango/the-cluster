// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.TheClusterCrds.Gateway.V1Alpha2
{
    /// <summary>
    /// ReferenceGrant identifies kinds of resources in other namespaces that are trusted to reference the specified kinds of resources in the same namespace as the policy.
    ///  Each ReferenceGrant can be used to represent a unique trust relationship. Additional Reference Grants can be used to add to the set of trusted sources of inbound references for the namespace they are defined within.
    ///  A ReferenceGrant is required for all cross-namespace references in Gateway API (with the exception of cross-namespace Route-Gateway attachment, which is governed by the AllowedRoutes configuration on the Gateway, and cross-namespace Service ParentRefs on a "consumer" mesh Route, which defines routing rules applicable only to workloads in the Route namespace). ReferenceGrants allowing a reference from a Route to a Service are only applicable to BackendRefs.
    ///  ReferenceGrant is a form of runtime verification allowing users to assert which cross-namespace object references are permitted. Implementations that support ReferenceGrant MUST NOT permit cross-namespace references which have no grant, and MUST respond to the removal of a grant by revoking the access that the grant allowed.
    /// </summary>
    [TheClusterCrdsResourceType("kubernetes:gateway.networking.k8s.io/v1alpha2:ReferenceGrant")]
    public partial class ReferenceGrant : KubernetesResource
    {
        [Output("apiVersion")]
        public Output<string> ApiVersion { get; private set; } = null!;

        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        [Output("metadata")]
        public Output<Pulumi.Kubernetes.Types.Outputs.Meta.V1.ObjectMeta> Metadata { get; private set; } = null!;

        /// <summary>
        /// Spec defines the desired state of ReferenceGrant.
        /// </summary>
        [Output("spec")]
        public Output<Pulumi.Kubernetes.Types.Outputs.Gateway.V1Alpha2.ReferenceGrantSpec> Spec { get; private set; } = null!;


        /// <summary>
        /// Create a ReferenceGrant resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ReferenceGrant(string name, Pulumi.Kubernetes.Types.Inputs.Gateway.V1Alpha2.ReferenceGrantArgs? args = null, CustomResourceOptions? options = null)
            : base("kubernetes:gateway.networking.k8s.io/v1alpha2:ReferenceGrant", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }
        internal ReferenceGrant(string name, ImmutableDictionary<string, object?> dictionary, CustomResourceOptions? options = null)
            : base("kubernetes:gateway.networking.k8s.io/v1alpha2:ReferenceGrant", name, new DictionaryResourceArgs(dictionary), MakeResourceOptions(options, ""))
        {
        }

        private ReferenceGrant(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("kubernetes:gateway.networking.k8s.io/v1alpha2:ReferenceGrant", name, null, MakeResourceOptions(options, id))
        {
        }

        private static Pulumi.Kubernetes.Types.Inputs.Gateway.V1Alpha2.ReferenceGrantArgs? MakeArgs(Pulumi.Kubernetes.Types.Inputs.Gateway.V1Alpha2.ReferenceGrantArgs? args)
        {
            args ??= new Pulumi.Kubernetes.Types.Inputs.Gateway.V1Alpha2.ReferenceGrantArgs();
            args.ApiVersion = "gateway.networking.k8s.io/v1alpha2";
            args.Kind = "ReferenceGrant";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ReferenceGrant resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ReferenceGrant Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ReferenceGrant(name, id, options);
        }
    }
}
namespace Pulumi.Kubernetes.Types.Inputs.Gateway.V1Alpha2
{

    public class ReferenceGrantArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiVersion")]
        public Input<string>? ApiVersion { get; set; }

        [Input("kind")]
        public Input<string>? Kind { get; set; }

        [Input("metadata")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Meta.V1.ObjectMetaArgs>? Metadata { get; set; }

        /// <summary>
        /// Spec defines the desired state of ReferenceGrant.
        /// </summary>
        [Input("spec")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Gateway.V1Alpha2.ReferenceGrantSpecArgs>? Spec { get; set; }

        public ReferenceGrantArgs()
        {
        }
        public static new ReferenceGrantArgs Empty => new ReferenceGrantArgs();
    }
}
