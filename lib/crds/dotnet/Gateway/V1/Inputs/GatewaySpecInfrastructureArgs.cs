// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Gateway.V1
{

    /// <summary>
    /// Infrastructure defines infrastructure level attributes about this Gateway instance. 
    ///  Support: Core 
    ///  
    /// </summary>
    public class GatewaySpecInfrastructureArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Annotations that SHOULD be applied to any resources created in response to this Gateway. 
        ///  For implementations creating other Kubernetes objects, this should be the `metadata.annotations` field on resources. For other implementations, this refers to any relevant (implementation specific) "annotations" concepts. 
        ///  An implementation may chose to add additional implementation-specific annotations as they see fit. 
        ///  Support: Extended
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels that SHOULD be applied to any resources created in response to this Gateway. 
        ///  For implementations creating other Kubernetes objects, this should be the `metadata.labels` field on resources. For other implementations, this refers to any relevant (implementation specific) "labels" concepts. 
        ///  An implementation may chose to add additional implementation-specific labels as they see fit. 
        ///  Support: Extended
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        public GatewaySpecInfrastructureArgs()
        {
        }
        public static new GatewaySpecInfrastructureArgs Empty => new GatewaySpecInfrastructureArgs();
    }
}
