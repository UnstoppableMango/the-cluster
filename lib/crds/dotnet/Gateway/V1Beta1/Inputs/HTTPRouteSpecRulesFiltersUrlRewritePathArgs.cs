// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Gateway.V1Beta1
{

    /// <summary>
    /// Path defines a path rewrite. 
    ///  Support: Extended
    /// </summary>
    public class HTTPRouteSpecRulesFiltersUrlRewritePathArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ReplaceFullPath specifies the value with which to replace the full path of a request during a rewrite or redirect.
        /// </summary>
        [Input("replaceFullPath")]
        public Input<string>? ReplaceFullPath { get; set; }

        /// <summary>
        /// ReplacePrefixMatch specifies the value with which to replace the prefix match of a request during a rewrite or redirect. For example, a request to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch of "/xyz" would be modified to "/xyz/bar". 
        ///  Note that this matches the behavior of the PathPrefix match type. This matches full path elements. A path element refers to the list of labels in the path split by the `/` separator. When specified, a trailing `/` is ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all match the prefix `/abc`, but the path `/abcd` would not. 
        ///  ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch. Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in the implementation setting the Accepted Condition for the Route to `status: False`. 
        ///  Request Path | Prefix Match | Replace Prefix | Modified Path -------------|--------------|----------------|---------- /foo/bar     | /foo         | /xyz           | /xyz/bar /foo/bar     | /foo         | /xyz/          | /xyz/bar /foo/bar     | /foo/        | /xyz           | /xyz/bar /foo/bar     | /foo/        | /xyz/          | /xyz/bar /foo         | /foo         | /xyz           | /xyz /foo/        | /foo         | /xyz           | /xyz/ /foo/bar     | /foo         | &lt;empty string&gt; | /bar /foo/        | /foo         | &lt;empty string&gt; | / /foo         | /foo         | &lt;empty string&gt; | / /foo/        | /foo         | /              | / /foo         | /foo         | /              | /
        /// </summary>
        [Input("replacePrefixMatch")]
        public Input<string>? ReplacePrefixMatch { get; set; }

        /// <summary>
        /// Type defines the type of path modifier. Additional types may be added in a future release of the API. 
        ///  Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. 
        ///  Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public HTTPRouteSpecRulesFiltersUrlRewritePathArgs()
        {
        }
        public static new HTTPRouteSpecRulesFiltersUrlRewritePathArgs Empty => new HTTPRouteSpecRulesFiltersUrlRewritePathArgs();
    }
}
