// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Gatewayoperator.V1Beta1
{

    /// <summary>
    /// Ingress is the Kubernetes Service that will be used to expose ingress traffic for the DataPlane. Here you can determine whether the DataPlane will be exposed outside the cluster (e.g. using a LoadBalancer type Services) or only internally (e.g. ClusterIP), and inject any additional annotations you need on the service (for instance, if you need to influence a cloud provider LoadBalancer configuration).
    /// </summary>
    public class DataPlaneSpecNetworkServicesIngressArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. 
        ///  More info: http://kubernetes.io/docs/user-guide/annotations
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Type determines how the Service is exposed. Defaults to `LoadBalancer`. 
        ///  Valid options are `LoadBalancer` and `ClusterIP`. 
        ///  `ClusterIP` allocates a cluster-internal IP address for load-balancing to endpoints. 
        ///  `LoadBalancer` builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the same endpoints as the clusterIP. 
        ///  More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public DataPlaneSpecNetworkServicesIngressArgs()
        {
            Type = "LoadBalancer";
        }
        public static new DataPlaneSpecNetworkServicesIngressArgs Empty => new DataPlaneSpecNetworkServicesIngressArgs();
    }
}
