// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Gatewayoperator.V1Beta1
{

    /// <summary>
    /// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
    /// </summary>
    public class DataPlaneSpecDeploymentPodTemplateSpecSpecEphemeralContainersLifecyclePostStartArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Exec specifies the action to take.
        /// </summary>
        [Input("exec")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Gatewayoperator.V1Beta1.DataPlaneSpecDeploymentPodTemplateSpecSpecEphemeralContainersLifecyclePostStartExecArgs>? Exec { get; set; }

        /// <summary>
        /// HTTPGet specifies the http request to perform.
        /// </summary>
        [Input("httpGet")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Gatewayoperator.V1Beta1.DataPlaneSpecDeploymentPodTemplateSpecSpecEphemeralContainersLifecyclePostStartHttpGetArgs>? HttpGet { get; set; }

        /// <summary>
        /// Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.
        /// </summary>
        [Input("tcpSocket")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Gatewayoperator.V1Beta1.DataPlaneSpecDeploymentPodTemplateSpecSpecEphemeralContainersLifecyclePostStartTcpSocketArgs>? TcpSocket { get; set; }

        public DataPlaneSpecDeploymentPodTemplateSpecSpecEphemeralContainersLifecyclePostStartArgs()
        {
        }
        public static new DataPlaneSpecDeploymentPodTemplateSpecSpecEphemeralContainersLifecyclePostStartArgs Empty => new DataPlaneSpecDeploymentPodTemplateSpecSpecEphemeralContainersLifecyclePostStartArgs();
    }
}
