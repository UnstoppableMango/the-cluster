// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.PulumiOperator.V1
{

    /// <summary>
    /// ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.
    /// </summary>
    public class StackSpecGitAuthSshAuthSshPrivateKeyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Env selects an environment variable set on the operator process
        /// </summary>
        [Input("env")]
        public Input<Pulumi.Kubernetes.Types.Inputs.PulumiOperator.V1.StackSpecGitAuthSshAuthSshPrivateKeyEnvArgs>? Env { get; set; }

        /// <summary>
        /// FileSystem selects a file on the operator's file system
        /// </summary>
        [Input("filesystem")]
        public Input<Pulumi.Kubernetes.Types.Inputs.PulumiOperator.V1.StackSpecGitAuthSshAuthSshPrivateKeyFilesystemArgs>? Filesystem { get; set; }

        /// <summary>
        /// LiteralRef refers to a literal value
        /// </summary>
        [Input("literal")]
        public Input<Pulumi.Kubernetes.Types.Inputs.PulumiOperator.V1.StackSpecGitAuthSshAuthSshPrivateKeyLiteralArgs>? Literal { get; set; }

        /// <summary>
        /// SecretRef refers to a Kubernetes Secret
        /// </summary>
        [Input("secret")]
        public Input<Pulumi.Kubernetes.Types.Inputs.PulumiOperator.V1.StackSpecGitAuthSshAuthSshPrivateKeySecretArgs>? Secret { get; set; }

        /// <summary>
        /// SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public StackSpecGitAuthSshAuthSshPrivateKeyArgs()
        {
        }
        public static new StackSpecGitAuthSshAuthSshPrivateKeyArgs Empty => new StackSpecGitAuthSshAuthSshPrivateKeyArgs();
    }
}
