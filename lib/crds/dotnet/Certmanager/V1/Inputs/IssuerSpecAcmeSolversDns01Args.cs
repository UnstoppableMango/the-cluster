// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Certmanager.V1
{

    /// <summary>
    /// Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.
    /// </summary>
    public class IssuerSpecAcmeSolversDns01Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.
        /// </summary>
        [Input("acmeDNS")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.IssuerSpecAcmeSolversDns01AcmeDnsArgs>? AcmeDNS { get; set; }

        /// <summary>
        /// Use the Akamai DNS zone management API to manage DNS01 challenge records.
        /// </summary>
        [Input("akamai")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.IssuerSpecAcmeSolversDns01AkamaiArgs>? Akamai { get; set; }

        /// <summary>
        /// Use the Microsoft Azure DNS API to manage DNS01 challenge records.
        /// </summary>
        [Input("azureDNS")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.IssuerSpecAcmeSolversDns01AzureDnsArgs>? AzureDNS { get; set; }

        /// <summary>
        /// Use the Google Cloud DNS API to manage DNS01 challenge records.
        /// </summary>
        [Input("cloudDNS")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.IssuerSpecAcmeSolversDns01CloudDnsArgs>? CloudDNS { get; set; }

        /// <summary>
        /// Use the Cloudflare API to manage DNS01 challenge records.
        /// </summary>
        [Input("cloudflare")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.IssuerSpecAcmeSolversDns01CloudflareArgs>? Cloudflare { get; set; }

        /// <summary>
        /// CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.
        /// </summary>
        [Input("cnameStrategy")]
        public Input<string>? CnameStrategy { get; set; }

        /// <summary>
        /// Use the DigitalOcean DNS API to manage DNS01 challenge records.
        /// </summary>
        [Input("digitalocean")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.IssuerSpecAcmeSolversDns01DigitaloceanArgs>? Digitalocean { get; set; }

        /// <summary>
        /// Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.
        /// </summary>
        [Input("rfc2136")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.IssuerSpecAcmeSolversDns01Rfc2136Args>? Rfc2136 { get; set; }

        /// <summary>
        /// Use the AWS Route53 API to manage DNS01 challenge records.
        /// </summary>
        [Input("route53")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.IssuerSpecAcmeSolversDns01Route53Args>? Route53 { get; set; }

        /// <summary>
        /// Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.
        /// </summary>
        [Input("webhook")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.IssuerSpecAcmeSolversDns01WebhookArgs>? Webhook { get; set; }

        public IssuerSpecAcmeSolversDns01Args()
        {
        }
        public static new IssuerSpecAcmeSolversDns01Args Empty => new IssuerSpecAcmeSolversDns01Args();
    }
}
