// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.K8s.V1
{

    /// <summary>
    /// Upstream defines an upstream.
    /// </summary>
    [OutputType]
    public sealed class VirtualServerRouteSpecUpstreams
    {
        public readonly string Backup;
        public readonly int BackupPort;
        public readonly string BufferSize;
        public readonly bool Buffering;
        /// <summary>
        /// UpstreamBuffers defines Buffer Configuration for an Upstream.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8s.V1.VirtualServerRouteSpecUpstreamsBuffers Buffers;
        public readonly string ClientMaxBodySize;
        public readonly string ConnectTimeout;
        public readonly string FailTimeout;
        /// <summary>
        /// HealthCheck defines the parameters for active Upstream HealthChecks.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8s.V1.VirtualServerRouteSpecUpstreamsHealthCheck HealthCheck;
        public readonly int Keepalive;
        public readonly string LbMethod;
        public readonly int MaxConns;
        public readonly int MaxFails;
        public readonly string Name;
        public readonly string NextUpstream;
        public readonly string NextUpstreamTimeout;
        public readonly int NextUpstreamTries;
        public readonly bool Ntlm;
        public readonly int Port;
        /// <summary>
        /// UpstreamQueue defines Queue Configuration for an Upstream.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8s.V1.VirtualServerRouteSpecUpstreamsQueue Queue;
        public readonly string ReadTimeout;
        public readonly string SendTimeout;
        public readonly string Service;
        /// <summary>
        /// SessionCookie defines the parameters for session persistence.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8s.V1.VirtualServerRouteSpecUpstreamsSessionCookie SessionCookie;
        public readonly string SlowStart;
        public readonly ImmutableDictionary<string, string> Subselector;
        /// <summary>
        /// UpstreamTLS defines a TLS configuration for an Upstream.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8s.V1.VirtualServerRouteSpecUpstreamsTls Tls;
        public readonly string Type;
        public readonly bool UseClusterIp;

        [OutputConstructor]
        private VirtualServerRouteSpecUpstreams(
            string backup,

            int backupPort,

            string bufferSize,

            bool buffering,

            Pulumi.Kubernetes.Types.Outputs.K8s.V1.VirtualServerRouteSpecUpstreamsBuffers buffers,

            string clientMaxBodySize,

            string connectTimeout,

            string failTimeout,

            Pulumi.Kubernetes.Types.Outputs.K8s.V1.VirtualServerRouteSpecUpstreamsHealthCheck healthCheck,

            int keepalive,

            string lbMethod,

            int maxConns,

            int maxFails,

            string name,

            string nextUpstream,

            string nextUpstreamTimeout,

            int nextUpstreamTries,

            bool ntlm,

            int port,

            Pulumi.Kubernetes.Types.Outputs.K8s.V1.VirtualServerRouteSpecUpstreamsQueue queue,

            string readTimeout,

            string sendTimeout,

            string service,

            Pulumi.Kubernetes.Types.Outputs.K8s.V1.VirtualServerRouteSpecUpstreamsSessionCookie sessionCookie,

            string slowStart,

            ImmutableDictionary<string, string> subselector,

            Pulumi.Kubernetes.Types.Outputs.K8s.V1.VirtualServerRouteSpecUpstreamsTls tls,

            string type,

            bool useClusterIp)
        {
            Backup = backup;
            BackupPort = backupPort;
            BufferSize = bufferSize;
            Buffering = buffering;
            Buffers = buffers;
            ClientMaxBodySize = clientMaxBodySize;
            ConnectTimeout = connectTimeout;
            FailTimeout = failTimeout;
            HealthCheck = healthCheck;
            Keepalive = keepalive;
            LbMethod = lbMethod;
            MaxConns = maxConns;
            MaxFails = maxFails;
            Name = name;
            NextUpstream = nextUpstream;
            NextUpstreamTimeout = nextUpstreamTimeout;
            NextUpstreamTries = nextUpstreamTries;
            Ntlm = ntlm;
            Port = port;
            Queue = queue;
            ReadTimeout = readTimeout;
            SendTimeout = sendTimeout;
            Service = service;
            SessionCookie = sessionCookie;
            SlowStart = slowStart;
            Subselector = subselector;
            Tls = tls;
            Type = type;
            UseClusterIp = useClusterIp;
        }
    }
}
