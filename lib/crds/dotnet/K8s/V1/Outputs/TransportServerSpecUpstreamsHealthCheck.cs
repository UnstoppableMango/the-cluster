// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.K8s.V1
{

    /// <summary>
    /// TransportServerHealthCheck defines the parameters for active Upstream HealthChecks.
    /// </summary>
    [OutputType]
    public sealed class TransportServerSpecUpstreamsHealthCheck
    {
        public readonly bool Enable;
        public readonly int Fails;
        public readonly string Interval;
        public readonly string Jitter;
        /// <summary>
        /// TransportServerMatch defines the parameters of a custom health check.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8s.V1.TransportServerSpecUpstreamsHealthCheckMatch Match;
        public readonly int Passes;
        public readonly int Port;
        public readonly string Timeout;

        [OutputConstructor]
        private TransportServerSpecUpstreamsHealthCheck(
            bool enable,

            int fails,

            string interval,

            string jitter,

            Pulumi.Kubernetes.Types.Outputs.K8s.V1.TransportServerSpecUpstreamsHealthCheckMatch match,

            int passes,

            int port,

            string timeout)
        {
            Enable = enable;
            Fails = fails;
            Interval = interval;
            Jitter = jitter;
            Match = match;
            Passes = passes;
            Port = port;
            Timeout = timeout;
        }
    }
}
