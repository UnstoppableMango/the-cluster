// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.K8s.V1
{

    /// <summary>
    /// VirtualServerSpec is the spec of the VirtualServer resource.
    /// </summary>
    public class VirtualServerSpecArgs : global::Pulumi.ResourceArgs
    {
        [Input("dos")]
        public Input<string>? Dos { get; set; }

        /// <summary>
        /// ExternalDNS defines externaldns sub-resource of a virtual server.
        /// </summary>
        [Input("externalDNS")]
        public Input<Pulumi.Kubernetes.Types.Inputs.K8s.V1.VirtualServerSpecExternalDnsArgs>? ExternalDNS { get; set; }

        [Input("gunzip")]
        public Input<bool>? Gunzip { get; set; }

        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("http-snippets")]
        public Input<string>? Http-snippets { get; set; }

        [Input("ingressClassName")]
        public Input<string>? IngressClassName { get; set; }

        /// <summary>
        /// InternalRoute allows for the configuration of internal routing.
        /// </summary>
        [Input("internalRoute")]
        public Input<bool>? InternalRoute { get; set; }

        /// <summary>
        /// VirtualServerListener references a custom http and/or https listener defined in GlobalConfiguration.
        /// </summary>
        [Input("listener")]
        public Input<Pulumi.Kubernetes.Types.Inputs.K8s.V1.VirtualServerSpecListenerArgs>? Listener { get; set; }

        [Input("policies")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.K8s.V1.VirtualServerSpecPoliciesArgs>? _policies;
        public InputList<Pulumi.Kubernetes.Types.Inputs.K8s.V1.VirtualServerSpecPoliciesArgs> Policies
        {
            get => _policies ?? (_policies = new InputList<Pulumi.Kubernetes.Types.Inputs.K8s.V1.VirtualServerSpecPoliciesArgs>());
            set => _policies = value;
        }

        [Input("routes")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.K8s.V1.VirtualServerSpecRoutesArgs>? _routes;
        public InputList<Pulumi.Kubernetes.Types.Inputs.K8s.V1.VirtualServerSpecRoutesArgs> Routes
        {
            get => _routes ?? (_routes = new InputList<Pulumi.Kubernetes.Types.Inputs.K8s.V1.VirtualServerSpecRoutesArgs>());
            set => _routes = value;
        }

        [Input("server-snippets")]
        public Input<string>? Server-snippets { get; set; }

        /// <summary>
        /// TLS defines TLS configuration for a VirtualServer.
        /// </summary>
        [Input("tls")]
        public Input<Pulumi.Kubernetes.Types.Inputs.K8s.V1.VirtualServerSpecTlsArgs>? Tls { get; set; }

        [Input("upstreams")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.K8s.V1.VirtualServerSpecUpstreamsArgs>? _upstreams;
        public InputList<Pulumi.Kubernetes.Types.Inputs.K8s.V1.VirtualServerSpecUpstreamsArgs> Upstreams
        {
            get => _upstreams ?? (_upstreams = new InputList<Pulumi.Kubernetes.Types.Inputs.K8s.V1.VirtualServerSpecUpstreamsArgs>());
            set => _upstreams = value;
        }

        public VirtualServerSpecArgs()
        {
        }
        public static new VirtualServerSpecArgs Empty => new VirtualServerSpecArgs();
    }
}
