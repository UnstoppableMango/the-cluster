// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.K8s.V1Alpha1
{

    /// <summary>
    /// PolicySpec is the spec of the Policy resource. The spec includes multiple fields, where each field represents a different policy. Only one policy (field) is allowed.
    /// </summary>
    public class PolicySpecArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AccessControl defines an access policy based on the source IP of a request.
        /// </summary>
        [Input("accessControl")]
        public Input<Pulumi.Kubernetes.Types.Inputs.K8s.V1Alpha1.PolicySpecAccessControlArgs>? AccessControl { get; set; }

        /// <summary>
        /// EgressMTLS defines an Egress MTLS policy.
        /// </summary>
        [Input("egressMTLS")]
        public Input<Pulumi.Kubernetes.Types.Inputs.K8s.V1Alpha1.PolicySpecEgressMtlsArgs>? EgressMTLS { get; set; }

        /// <summary>
        /// IngressMTLS defines an Ingress MTLS policy.
        /// </summary>
        [Input("ingressMTLS")]
        public Input<Pulumi.Kubernetes.Types.Inputs.K8s.V1Alpha1.PolicySpecIngressMtlsArgs>? IngressMTLS { get; set; }

        /// <summary>
        /// JWTAuth holds JWT authentication configuration.
        /// </summary>
        [Input("jwt")]
        public Input<Pulumi.Kubernetes.Types.Inputs.K8s.V1Alpha1.PolicySpecJwtArgs>? Jwt { get; set; }

        /// <summary>
        /// RateLimit defines a rate limit policy.
        /// </summary>
        [Input("rateLimit")]
        public Input<Pulumi.Kubernetes.Types.Inputs.K8s.V1Alpha1.PolicySpecRateLimitArgs>? RateLimit { get; set; }

        public PolicySpecArgs()
        {
        }
        public static new PolicySpecArgs Empty => new PolicySpecArgs();
    }
}
