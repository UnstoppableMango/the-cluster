// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Acme.V1
{

    public class ChallengeStatusArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// presented will be set to true if the challenge values for this challenge are currently 'presented'. This *does not* imply the self check is passing. Only that the values have been 'submitted' for the appropriate challenge mechanism (i.e. the DNS01 TXT record has been presented, or the HTTP01 configuration has been configured).
        /// </summary>
        [Input("presented")]
        public Input<bool>? Presented { get; set; }

        /// <summary>
        /// Used to denote whether this challenge should be processed or not. This field will only be set to true by the 'scheduling' component. It will only be set to false by the 'challenges' controller, after the challenge has reached a final state or timed out. If this field is set to false, the challenge controller will not take any more action.
        /// </summary>
        [Input("processing")]
        public Input<bool>? Processing { get; set; }

        /// <summary>
        /// Contains human readable information on why the Challenge is in the current state.
        /// </summary>
        [Input("reason")]
        public Input<string>? Reason { get; set; }

        /// <summary>
        /// Contains the current 'state' of the challenge. If not set, the state of the challenge is unknown.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public ChallengeStatusArgs()
        {
        }
        public static new ChallengeStatusArgs Empty => new ChallengeStatusArgs();
    }
}
