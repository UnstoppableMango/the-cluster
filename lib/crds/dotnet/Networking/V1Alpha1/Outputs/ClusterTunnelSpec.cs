// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Networking.V1Alpha1
{

    /// <summary>
    /// TunnelSpec defines the desired state of Tunnel
    /// </summary>
    [OutputType]
    public sealed class ClusterTunnelSpec
    {
        /// <summary>
        /// Cloudflare Credentials
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Networking.V1Alpha1.ClusterTunnelSpecCloudflare Cloudflare;
        /// <summary>
        /// Existing tunnel object. ExistingTunnel and NewTunnel cannot be both empty and are mutually exclusive.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Networking.V1Alpha1.ClusterTunnelSpecExistingTunnel ExistingTunnel;
        /// <summary>
        /// FallbackTarget speficies the target for requests that do not match an ingress. Defaults to http_status:404
        /// </summary>
        public readonly string FallbackTarget;
        /// <summary>
        /// Image sets the Cloudflared Image to use. Defaults to the image set during the release of the operator.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// New tunnel object. NewTunnel and ExistingTunnel cannot be both empty and are mutually exclusive.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Networking.V1Alpha1.ClusterTunnelSpecNewTunnel NewTunnel;
        /// <summary>
        /// NoTlsVerify disables origin TLS certificate checks when the endpoint is HTTPS.
        /// </summary>
        public readonly bool NoTlsVerify;
        /// <summary>
        /// OriginCaPool speficies the secret with tls.crt (and other certs as needed to be referred in the service annotation) of the Root CA to be trusted when sending traffic to HTTPS endpoints
        /// </summary>
        public readonly string OriginCaPool;
        /// <summary>
        /// Size defines the number of Daemon pods to run for this tunnel
        /// </summary>
        public readonly int Size;

        [OutputConstructor]
        private ClusterTunnelSpec(
            Pulumi.Kubernetes.Types.Outputs.Networking.V1Alpha1.ClusterTunnelSpecCloudflare cloudflare,

            Pulumi.Kubernetes.Types.Outputs.Networking.V1Alpha1.ClusterTunnelSpecExistingTunnel existingTunnel,

            string fallbackTarget,

            string image,

            Pulumi.Kubernetes.Types.Outputs.Networking.V1Alpha1.ClusterTunnelSpecNewTunnel newTunnel,

            bool noTlsVerify,

            string originCaPool,

            int size)
        {
            Cloudflare = cloudflare;
            ExistingTunnel = existingTunnel;
            FallbackTarget = fallbackTarget;
            Image = image;
            NewTunnel = newTunnel;
            NoTlsVerify = noTlsVerify;
            OriginCaPool = originCaPool;
            Size = size;
        }
    }
}
