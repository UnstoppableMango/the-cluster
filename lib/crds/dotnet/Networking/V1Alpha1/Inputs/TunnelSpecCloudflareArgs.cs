// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Networking.V1Alpha1
{

    /// <summary>
    /// Cloudflare Credentials
    /// </summary>
    public class TunnelSpecCloudflareArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Key in the secret to use for Cloudflare API Key, defaults to CLOUDFLARE_API_KEY. Needs Email also to be provided. For Delete operations for new tunnels only, or as an alternate to API Token
        /// </summary>
        [Input("CLOUDFLARE_API_KEY")]
        public Input<string>? CLOUDFLARE_API_KEY { get; set; }

        /// <summary>
        /// Key in the secret to use for Cloudflare API token, defaults to CLOUDFLARE_API_TOKEN
        /// </summary>
        [Input("CLOUDFLARE_API_TOKEN")]
        public Input<string>? CLOUDFLARE_API_TOKEN { get; set; }

        /// <summary>
        /// Key in the secret to use as credentials.json for an existing tunnel, defaults to CLOUDFLARE_TUNNEL_CREDENTIAL_FILE
        /// </summary>
        [Input("CLOUDFLARE_TUNNEL_CREDENTIAL_FILE")]
        public Input<string>? CLOUDFLARE_TUNNEL_CREDENTIAL_FILE { get; set; }

        /// <summary>
        /// Key in the secret to use as tunnel secret for an existing tunnel, defaults to CLOUDFLARE_TUNNEL_CREDENTIAL_SECRET
        /// </summary>
        [Input("CLOUDFLARE_TUNNEL_CREDENTIAL_SECRET")]
        public Input<string>? CLOUDFLARE_TUNNEL_CREDENTIAL_SECRET { get; set; }

        /// <summary>
        /// Account ID in Cloudflare. AccountId and AccountName cannot be both empty. If both are provided, Account ID is used if valid, else falls back to Account Name.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Account Name in Cloudflare. AccountName and AccountId cannot be both empty. If both are provided, Account ID is used if valid, else falls back to Account Name.
        /// </summary>
        [Input("accountName")]
        public Input<string>? AccountName { get; set; }

        /// <summary>
        /// Cloudflare Domain to which this tunnel belongs to
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Email to use along with API Key for Delete operations for new tunnels only, or as an alternate to API Token
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// Secret containing Cloudflare API key/token
        /// </summary>
        [Input("secret")]
        public Input<string>? Secret { get; set; }

        public TunnelSpecCloudflareArgs()
        {
            CLOUDFLARE_API_KEY = "CLOUDFLARE_API_KEY";
            CLOUDFLARE_API_TOKEN = "CLOUDFLARE_API_TOKEN";
            CLOUDFLARE_TUNNEL_CREDENTIAL_FILE = "CLOUDFLARE_TUNNEL_CREDENTIAL_FILE";
            CLOUDFLARE_TUNNEL_CREDENTIAL_SECRET = "CLOUDFLARE_TUNNEL_CREDENTIAL_SECRET";
        }
        public static new TunnelSpecCloudflareArgs Empty => new TunnelSpecCloudflareArgs();
    }
}
