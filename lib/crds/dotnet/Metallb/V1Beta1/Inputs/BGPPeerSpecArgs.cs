// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Metallb.V1Beta1
{

    /// <summary>
    /// BGPPeerSpec defines the desired state of Peer.
    /// </summary>
    public class BGPPeerSpecArgs : global::Pulumi.ResourceArgs
    {
        [Input("bfdProfile")]
        public Input<string>? BfdProfile { get; set; }

        /// <summary>
        /// EBGP peer is multi-hops away
        /// </summary>
        [Input("ebgpMultiHop")]
        public Input<bool>? EbgpMultiHop { get; set; }

        /// <summary>
        /// Requested BGP hold time, per RFC4271.
        /// </summary>
        [Input("holdTime")]
        public Input<string>? HoldTime { get; set; }

        /// <summary>
        /// Requested BGP keepalive time, per RFC4271.
        /// </summary>
        [Input("keepaliveTime")]
        public Input<string>? KeepaliveTime { get; set; }

        /// <summary>
        /// AS number to use for the local end of the session.
        /// </summary>
        [Input("myASN", required: true)]
        public Input<int> MyASN { get; set; } = null!;

        [Input("nodeSelectors")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Metallb.V1Beta1.BGPPeerSpecNodeSelectorsArgs>? _nodeSelectors;

        /// <summary>
        /// Only connect to this peer on nodes that match one of these selectors.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Metallb.V1Beta1.BGPPeerSpecNodeSelectorsArgs> NodeSelectors
        {
            get => _nodeSelectors ?? (_nodeSelectors = new InputList<Pulumi.Kubernetes.Types.Inputs.Metallb.V1Beta1.BGPPeerSpecNodeSelectorsArgs>());
            set => _nodeSelectors = value;
        }

        /// <summary>
        /// Authentication password for routers enforcing TCP MD5 authenticated sessions
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// AS number to expect from the remote end of the session.
        /// </summary>
        [Input("peerASN", required: true)]
        public Input<int> PeerASN { get; set; } = null!;

        /// <summary>
        /// Address to dial when establishing the session.
        /// </summary>
        [Input("peerAddress", required: true)]
        public Input<string> PeerAddress { get; set; } = null!;

        /// <summary>
        /// Port to dial when establishing the session.
        /// </summary>
        [Input("peerPort")]
        public Input<int>? PeerPort { get; set; }

        /// <summary>
        /// BGP router ID to advertise to the peer
        /// </summary>
        [Input("routerID")]
        public Input<string>? RouterID { get; set; }

        /// <summary>
        /// Source address to use when establishing the session.
        /// </summary>
        [Input("sourceAddress")]
        public Input<string>? SourceAddress { get; set; }

        public BGPPeerSpecArgs()
        {
        }
        public static new BGPPeerSpecArgs Empty => new BGPPeerSpecArgs();
    }
}
