// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Infrastructure.V1Beta1
{

    /// <summary>
    /// ProxmoxMachineStatus defines the observed state of ProxmoxMachine
    /// </summary>
    public class ProxmoxMachineStatusArgs : global::Pulumi.ResourceArgs
    {
        [Input("addresses")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Infrastructure.V1Beta1.ProxmoxMachineStatusAddressesArgs>? _addresses;

        /// <summary>
        /// Addresses
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Infrastructure.V1Beta1.ProxmoxMachineStatusAddressesArgs> Addresses
        {
            get => _addresses ?? (_addresses = new InputList<Pulumi.Kubernetes.Types.Inputs.Infrastructure.V1Beta1.ProxmoxMachineStatusAddressesArgs>());
            set => _addresses = value;
        }

        [Input("conditions")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Infrastructure.V1Beta1.ProxmoxMachineStatusConditionsArgs>? _conditions;

        /// <summary>
        /// Conditions
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Infrastructure.V1Beta1.ProxmoxMachineStatusConditionsArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Pulumi.Kubernetes.Types.Inputs.Infrastructure.V1Beta1.ProxmoxMachineStatusConditionsArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// Configuration
        /// </summary>
        [Input("config")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Infrastructure.V1Beta1.ProxmoxMachineStatusConfigArgs>? Config { get; set; }

        /// <summary>
        /// FailureMessage
        /// </summary>
        [Input("failureMessage")]
        public Input<string>? FailureMessage { get; set; }

        /// <summary>
        /// FailureReason
        /// </summary>
        [Input("failureReason")]
        public Input<string>? FailureReason { get; set; }

        /// <summary>
        /// InstanceStatus is the status of the proxmox instance for this machine.
        /// </summary>
        [Input("instanceStatus")]
        public Input<string>? InstanceStatus { get; set; }

        /// <summary>
        /// Ready is true when the provider resource is ready.
        /// </summary>
        [Input("ready")]
        public Input<bool>? Ready { get; set; }

        public ProxmoxMachineStatusArgs()
        {
        }
        public static new ProxmoxMachineStatusArgs Empty => new ProxmoxMachineStatusArgs();
    }
}
