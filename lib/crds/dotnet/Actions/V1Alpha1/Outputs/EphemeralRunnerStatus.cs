// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Actions.V1Alpha1
{

    /// <summary>
    /// EphemeralRunnerStatus defines the observed state of EphemeralRunner
    /// </summary>
    [OutputType]
    public sealed class EphemeralRunnerStatus
    {
        public readonly ImmutableDictionary<string, bool> Failures;
        public readonly string JobDisplayName;
        public readonly string JobRepositoryName;
        public readonly int JobRequestId;
        public readonly string JobWorkflowRef;
        public readonly string Message;
        /// <summary>
        /// Phase describes phases where EphemeralRunner can be in. The underlying type is a PodPhase, but the meaning is more restrictive 
        ///  The PodFailed phase should be set only when EphemeralRunner fails to start after multiple retries. That signals that this EphemeralRunner won't work, and manual inspection is required 
        ///  The PodSucceded phase should be set only when confirmed that EphemeralRunner actually executed the job and has been removed from the service.
        /// </summary>
        public readonly string Phase;
        /// <summary>
        /// Turns true only if the runner is online.
        /// </summary>
        public readonly bool Ready;
        public readonly string Reason;
        public readonly int RunnerId;
        public readonly string RunnerJITConfig;
        public readonly string RunnerName;
        public readonly int WorkflowRunId;

        [OutputConstructor]
        private EphemeralRunnerStatus(
            ImmutableDictionary<string, bool> failures,

            string jobDisplayName,

            string jobRepositoryName,

            int jobRequestId,

            string jobWorkflowRef,

            string message,

            string phase,

            bool ready,

            string reason,

            int runnerId,

            string runnerJITConfig,

            string runnerName,

            int workflowRunId)
        {
            Failures = failures;
            JobDisplayName = jobDisplayName;
            JobRepositoryName = jobRepositoryName;
            JobRequestId = jobRequestId;
            JobWorkflowRef = jobWorkflowRef;
            Message = message;
            Phase = phase;
            Ready = ready;
            Reason = reason;
            RunnerId = runnerId;
            RunnerJITConfig = runnerJITConfig;
            RunnerName = runnerName;
            WorkflowRunId = workflowRunId;
        }
    }
}
