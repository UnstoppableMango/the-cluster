// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Snapshot.V1Beta1
{

    /// <summary>
    /// spec defines properties of a VolumeSnapshotContent created by the underlying storage system. Required.
    /// </summary>
    public class VolumeSnapshotContentSpecArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// deletionPolicy determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted. Supported values are "Retain" and "Delete". "Retain" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. "Delete" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. For dynamically provisioned snapshots, this field will automatically be filled in by the CSI snapshotter sidecar with the "DeletionPolicy" field defined in the corresponding VolumeSnapshotClass. For pre-existing snapshots, users MUST specify this field when creating the  VolumeSnapshotContent object. Required.
        /// </summary>
        [Input("deletionPolicy", required: true)]
        public Input<string> DeletionPolicy { get; set; } = null!;

        /// <summary>
        /// driver is the name of the CSI driver used to create the physical snapshot on the underlying storage system. This MUST be the same as the name returned by the CSI GetPluginName() call for that driver. Required.
        /// </summary>
        [Input("driver", required: true)]
        public Input<string> Driver { get; set; } = null!;

        /// <summary>
        /// source specifies whether the snapshot is (or should be) dynamically provisioned or already exists, and just requires a Kubernetes object representation. This field is immutable after creation. Required.
        /// </summary>
        [Input("source", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Snapshot.V1Beta1.VolumeSnapshotContentSpecSourceArgs> Source { get; set; } = null!;

        /// <summary>
        /// name of the VolumeSnapshotClass from which this snapshot was (or will be) created. Note that after provisioning, the VolumeSnapshotClass may be deleted or recreated with different set of values, and as such, should not be referenced post-snapshot creation.
        /// </summary>
        [Input("volumeSnapshotClassName")]
        public Input<string>? VolumeSnapshotClassName { get; set; }

        /// <summary>
        /// volumeSnapshotRef specifies the VolumeSnapshot object to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName field must reference to this VolumeSnapshotContent's name for the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent object, name and namespace of the VolumeSnapshot object MUST be provided for binding to happen. This field is immutable after creation. Required.
        /// </summary>
        [Input("volumeSnapshotRef", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Snapshot.V1Beta1.VolumeSnapshotContentSpecVolumeSnapshotRefArgs> VolumeSnapshotRef { get; set; } = null!;

        public VolumeSnapshotContentSpecArgs()
        {
        }
        public static new VolumeSnapshotContentSpecArgs Empty => new VolumeSnapshotContentSpecArgs();
    }
}
