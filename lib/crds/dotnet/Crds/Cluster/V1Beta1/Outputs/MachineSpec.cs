// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1
{

    /// <summary>
    /// MachineSpec defines the desired state of Machine.
    /// </summary>
    [OutputType]
    public sealed class MachineSpec
    {
        /// <summary>
        /// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machineâ€™s bootstrapping mechanism.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineSpecBootstrap Bootstrap;
        /// <summary>
        /// ClusterName is the name of the Cluster this object belongs to.
        /// </summary>
        public readonly string ClusterName;
        /// <summary>
        /// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
        /// </summary>
        public readonly string FailureDomain;
        /// <summary>
        /// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineSpecInfrastructureRef InfrastructureRef;
        /// <summary>
        /// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
        /// </summary>
        public readonly string NodeDeletionTimeout;
        /// <summary>
        /// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
        /// </summary>
        public readonly string NodeDrainTimeout;
        /// <summary>
        /// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
        /// </summary>
        public readonly string NodeVolumeDetachTimeout;
        /// <summary>
        /// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
        /// </summary>
        public readonly string ProviderID;
        /// <summary>
        /// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private MachineSpec(
            Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineSpecBootstrap bootstrap,

            string clusterName,

            string failureDomain,

            Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineSpecInfrastructureRef infrastructureRef,

            string nodeDeletionTimeout,

            string nodeDrainTimeout,

            string nodeVolumeDetachTimeout,

            string providerID,

            string version)
        {
            Bootstrap = bootstrap;
            ClusterName = clusterName;
            FailureDomain = failureDomain;
            InfrastructureRef = infrastructureRef;
            NodeDeletionTimeout = nodeDeletionTimeout;
            NodeDrainTimeout = nodeDrainTimeout;
            NodeVolumeDetachTimeout = nodeVolumeDetachTimeout;
            ProviderID = providerID;
            Version = version;
        }
    }
}
