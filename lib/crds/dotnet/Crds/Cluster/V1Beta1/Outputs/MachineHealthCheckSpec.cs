// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1
{

    /// <summary>
    /// Specification of machine health check policy
    /// </summary>
    [OutputType]
    public sealed class MachineHealthCheckSpec
    {
        /// <summary>
        /// ClusterName is the name of the Cluster this object belongs to.
        /// </summary>
        public readonly string ClusterName;
        /// <summary>
        /// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
        /// </summary>
        public readonly Union<int, string> MaxUnhealthy;
        /// <summary>
        /// Machines older than this duration without a node will be considered to have failed and will be remediated. If not set, this value is defaulted to 10 minutes. If you wish to disable this feature, set the value explicitly to 0.
        /// </summary>
        public readonly string NodeStartupTimeout;
        /// <summary>
        /// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider. 
        ///  This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineHealthCheckSpecRemediationTemplate RemediationTemplate;
        /// <summary>
        /// Label selector to match machines whose health will be exercised
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineHealthCheckSpecSelector Selector;
        /// <summary>
        /// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineHealthCheckSpecUnhealthyConditions> UnhealthyConditions;
        /// <summary>
        /// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
        /// </summary>
        public readonly string UnhealthyRange;

        [OutputConstructor]
        private MachineHealthCheckSpec(
            string clusterName,

            Union<int, string> maxUnhealthy,

            string nodeStartupTimeout,

            Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineHealthCheckSpecRemediationTemplate remediationTemplate,

            Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineHealthCheckSpecSelector selector,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Cluster.V1Beta1.MachineHealthCheckSpecUnhealthyConditions> unhealthyConditions,

            string unhealthyRange)
        {
            ClusterName = clusterName;
            MaxUnhealthy = maxUnhealthy;
            NodeStartupTimeout = nodeStartupTimeout;
            RemediationTemplate = remediationTemplate;
            Selector = selector;
            UnhealthyConditions = unhealthyConditions;
            UnhealthyRange = unhealthyRange;
        }
    }
}
