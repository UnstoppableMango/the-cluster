// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1
{

    /// <summary>
    /// MachineDeploymentTopology specifies the different parameters for a set of worker nodes in the topology. This set of nodes is managed by a MachineDeployment object whose lifecycle is managed by the Cluster controller.
    /// </summary>
    public class ClusterSpecTopologyWorkersMachineDeploymentsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Class is the name of the MachineDeploymentClass used to create the set of worker nodes. This should match one of the deployment classes defined in the ClusterClass object mentioned in the `Cluster.Spec.Class` field.
        /// </summary>
        [Input("class", required: true)]
        public Input<string> Class { get; set; } = null!;

        /// <summary>
        /// FailureDomain is the failure domain the machines will be created in. Must match a key in the FailureDomains map stored on the cluster object.
        /// </summary>
        [Input("failureDomain")]
        public Input<string>? FailureDomain { get; set; }

        /// <summary>
        /// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this MachineDeployment.
        /// </summary>
        [Input("machineHealthCheck")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs>? MachineHealthCheck { get; set; }

        /// <summary>
        /// Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
        /// </summary>
        [Input("metadata")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs>? Metadata { get; set; }

        /// <summary>
        /// Minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready)
        /// </summary>
        [Input("minReadySeconds")]
        public Input<int>? MinReadySeconds { get; set; }

        /// <summary>
        /// Name is the unique identifier for this MachineDeploymentTopology. The value is used with other unique identifiers to create a MachineDeployment's Name (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length, the values are hashed together.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
        /// </summary>
        [Input("nodeDeletionTimeout")]
        public Input<string>? NodeDeletionTimeout { get; set; }

        /// <summary>
        /// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
        /// </summary>
        [Input("nodeDrainTimeout")]
        public Input<string>? NodeDrainTimeout { get; set; }

        /// <summary>
        /// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
        /// </summary>
        [Input("nodeVolumeDetachTimeout")]
        public Input<string>? NodeVolumeDetachTimeout { get; set; }

        /// <summary>
        /// Replicas is the number of worker nodes belonging to this set. If the value is nil, the MachineDeployment is created without the number of Replicas (defaulting to 1) and it's assumed that an external entity (like cluster autoscaler) is responsible for the management of this value.
        /// </summary>
        [Input("replicas")]
        public Input<int>? Replicas { get; set; }

        /// <summary>
        /// The deployment strategy to use to replace existing machines with new ones.
        /// </summary>
        [Input("strategy")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs>? Strategy { get; set; }

        /// <summary>
        /// Variables can be used to customize the MachineDeployment through patches.
        /// </summary>
        [Input("variables")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Beta1.ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs>? Variables { get; set; }

        public ClusterSpecTopologyWorkersMachineDeploymentsArgs()
        {
        }
        public static new ClusterSpecTopologyWorkersMachineDeploymentsArgs Empty => new ClusterSpecTopologyWorkersMachineDeploymentsArgs();
    }
}
