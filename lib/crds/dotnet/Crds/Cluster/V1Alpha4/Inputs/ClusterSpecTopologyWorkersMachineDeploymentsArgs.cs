// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Cluster.V1Alpha4
{

    /// <summary>
    /// MachineDeploymentTopology specifies the different parameters for a set of worker nodes in the topology. This set of nodes is managed by a MachineDeployment object whose lifecycle is managed by the Cluster controller.
    /// </summary>
    public class ClusterSpecTopologyWorkersMachineDeploymentsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Class is the name of the MachineDeploymentClass used to create the set of worker nodes. This should match one of the deployment classes defined in the ClusterClass object mentioned in the `Cluster.Spec.Class` field.
        /// </summary>
        [Input("class", required: true)]
        public Input<string> Class { get; set; } = null!;

        /// <summary>
        /// Metadata is the metadata applied to the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
        /// </summary>
        [Input("metadata")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Cluster.V1Alpha4.ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs>? Metadata { get; set; }

        /// <summary>
        /// Name is the unique identifier for this MachineDeploymentTopology. The value is used with other unique identifiers to create a MachineDeployment's Name (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length, the values are hashed together.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Replicas is the number of worker nodes belonging to this set. If the value is nil, the MachineDeployment is created without the number of Replicas (defaulting to zero) and it's assumed that an external entity (like cluster autoscaler) is responsible for the management of this value.
        /// </summary>
        [Input("replicas")]
        public Input<int>? Replicas { get; set; }

        public ClusterSpecTopologyWorkersMachineDeploymentsArgs()
        {
        }
        public static new ClusterSpecTopologyWorkersMachineDeploymentsArgs Empty => new ClusterSpecTopologyWorkersMachineDeploymentsArgs();
    }
}
