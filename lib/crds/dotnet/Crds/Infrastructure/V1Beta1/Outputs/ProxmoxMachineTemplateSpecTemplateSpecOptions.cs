// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Infrastructure.V1Beta1
{

    /// <summary>
    /// Options for QEMU instance
    /// </summary>
    [OutputType]
    public sealed class ProxmoxMachineTemplateSpecTemplateSpecOptions
    {
        /// <summary>
        /// Enable/Disable ACPI. Defaults to true.
        /// </summary>
        public readonly bool Acpi;
        /// <summary>
        /// Virtual processor architecture. Defaults to the host. x86_64 or aarch64.
        /// </summary>
        public readonly string Arch;
        /// <summary>
        /// Amount of target RAM for the VM in MiB. Using zero disables the ballon driver.
        /// </summary>
        public readonly int Balloon;
        /// <summary>
        /// Description for the VM. Shown in the web-interface VM's summary. This is saved as comment inside the configuration file.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// enable/disable hugepages memory. 0 or 2 or 1024. 0 indicated 'any'
        /// </summary>
        public readonly int HugePages;
        /// <summary>
        /// Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts. Defaults to false.
        /// </summary>
        public readonly bool KeepHugePages;
        /// <summary>
        /// Enable/disable KVM hardware virtualization. Defaults to true.
        /// </summary>
        public readonly bool Kvm;
        /// <summary>
        /// Set the real time clock (RTC) to local time. This is enabled by default if the `ostype` indicates a Microsoft Windows OS.
        /// </summary>
        public readonly bool LocalTime;
        /// <summary>
        /// Lock/unlock the VM.
        /// </summary>
        public readonly string Lock;
        /// <summary>
        /// Enable/disable NUMA.
        /// </summary>
        public readonly bool Numa;
        /// <summary>
        /// Specifies whether a VM will be started during system bootup.
        /// </summary>
        public readonly bool OnBoot;
        /// <summary>
        /// Specify guest operating system. This is used to enable special optimization/features for specific operating systems.
        /// </summary>
        public readonly string OsType;
        /// <summary>
        /// Sets the protection flag of the VM. This will disable the remove VM and remove disk operations. Defaults to false.
        /// </summary>
        public readonly bool Protection;
        /// <summary>
        /// Allow reboot. If set to 'false' the VM exit on reboot. Defaults to true.
        /// </summary>
        public readonly bool Reboot;
        /// <summary>
        /// Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd. 0 ~ 5000. Defaults to 1000.
        /// </summary>
        public readonly int Shares;
        /// <summary>
        /// Enable/disable the USB tablet device. This device is usually needed to allow absolute mouse positioning with VNC. Else the mouse runs out of sync with normal VNC clients. If you're running lots of console-only guests on one host, you may consider disabling this to save some context switches. This is turned off by default if you use spice (`qm set &lt;vmid&gt; --vga qxl`). Defaults to true.
        /// </summary>
        public readonly bool Tablet;
        /// <summary>
        /// Tags of the VM. This is only meta information.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// Enable/disable Template. Defaults to false.
        /// </summary>
        public readonly bool Template;
        /// <summary>
        /// Enable/disable time drift fix. Defaults to false.
        /// </summary>
        public readonly bool TimeDriftFix;
        /// <summary>
        /// Number of hotplugged vcpus. Defaults to 0.
        /// </summary>
        public readonly int Vcpus;
        /// <summary>
        /// The VM generation ID (vmgenid) device exposes a 128-bit integer value identifier to the guest OS. This allows to notify the guest operating system when the virtual machine is executed with a different configuration (e.g. snapshot execution or creation from a template). The guest operating system notices the change, and is then able to react as appropriate by marking its copies of distributed databases as dirty, re-initializing its random number generator, etc. Note that auto-creation only works when done through API/CLI create or update methods, but not when manually editing the config file. regex: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01]). Defaults to 1 (autogenerated)
        /// </summary>
        public readonly string VmGenerationID;

        [OutputConstructor]
        private ProxmoxMachineTemplateSpecTemplateSpecOptions(
            bool acpi,

            string arch,

            int balloon,

            string description,

            int hugePages,

            bool keepHugePages,

            bool kvm,

            bool localTime,

            string @lock,

            bool numa,

            bool onBoot,

            string osType,

            bool protection,

            bool reboot,

            int shares,

            bool tablet,

            ImmutableArray<string> tags,

            bool template,

            bool timeDriftFix,

            int vcpus,

            string vmGenerationID)
        {
            Acpi = acpi;
            Arch = arch;
            Balloon = balloon;
            Description = description;
            HugePages = hugePages;
            KeepHugePages = keepHugePages;
            Kvm = kvm;
            LocalTime = localTime;
            Lock = @lock;
            Numa = numa;
            OnBoot = onBoot;
            OsType = osType;
            Protection = protection;
            Reboot = reboot;
            Shares = shares;
            Tablet = tablet;
            Tags = tags;
            Template = template;
            TimeDriftFix = timeDriftFix;
            Vcpus = vcpus;
            VmGenerationID = vmGenerationID;
        }
    }
}
