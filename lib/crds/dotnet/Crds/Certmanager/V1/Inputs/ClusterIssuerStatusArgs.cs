// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Certmanager.V1
{

    /// <summary>
    /// Status of the ClusterIssuer. This is set and managed automatically.
    /// </summary>
    public class ClusterIssuerStatusArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
        /// </summary>
        [Input("acme")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.ClusterIssuerStatusAcmeArgs>? Acme { get; set; }

        [Input("conditions")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.ClusterIssuerStatusConditionsArgs>? _conditions;

        /// <summary>
        /// List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.ClusterIssuerStatusConditionsArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.ClusterIssuerStatusConditionsArgs>());
            set => _conditions = value;
        }

        public ClusterIssuerStatusArgs()
        {
        }
        public static new ClusterIssuerStatusArgs Empty => new ClusterIssuerStatusArgs();
    }
}
