// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Certmanager.V1
{

    /// <summary>
    /// Specification of the desired state of the CertificateRequest resource. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
    /// </summary>
    public class CertificateRequestSpecArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Requested 'duration' (i.e. lifetime) of the Certificate. Note that the issuer may choose to ignore the requested duration, just like any other requested attribute.
        /// </summary>
        [Input("duration")]
        public Input<string>? Duration { get; set; }

        [Input("extra")]
        private InputMap<ImmutableArray<string>>? _extra;

        /// <summary>
        /// Extra contains extra attributes of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
        /// </summary>
        public InputMap<ImmutableArray<string>> Extra
        {
            get => _extra ?? (_extra = new InputMap<ImmutableArray<string>>());
            set => _extra = value;
        }

        [Input("groups")]
        private InputList<string>? _groups;

        /// <summary>
        /// Groups contains group membership of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
        /// </summary>
        public InputList<string> Groups
        {
            get => _groups ?? (_groups = new InputList<string>());
            set => _groups = value;
        }

        /// <summary>
        /// Requested basic constraints isCA value. Note that the issuer may choose to ignore the requested isCA value, just like any other requested attribute. 
        ///  NOTE: If the CSR in the `Request` field has a BasicConstraints extension, it must have the same isCA value as specified here. 
        ///  If true, this will automatically add the `cert sign` usage to the list of requested `usages`.
        /// </summary>
        [Input("isCA")]
        public Input<bool>? IsCA { get; set; }

        /// <summary>
        /// Reference to the issuer responsible for issuing the certificate. If the issuer is namespace-scoped, it must be in the same namespace as the Certificate. If the issuer is cluster-scoped, it can be used from any namespace. 
        ///  The `name` field of the reference must always be specified.
        /// </summary>
        [Input("issuerRef", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.CertificateRequestSpecIssuerRefArgs> IssuerRef { get; set; } = null!;

        /// <summary>
        /// The PEM-encoded X.509 certificate signing request to be submitted to the issuer for signing. 
        ///  If the CSR has a BasicConstraints extension, its isCA attribute must match the `isCA` value of this CertificateRequest. If the CSR has a KeyUsage extension, its key usages must match the key usages in the `usages` field of this CertificateRequest. If the CSR has a ExtKeyUsage extension, its extended key usages must match the extended key usages in the `usages` field of this CertificateRequest.
        /// </summary>
        [Input("request", required: true)]
        public Input<string> Request { get; set; } = null!;

        /// <summary>
        /// UID contains the uid of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        [Input("usages")]
        private InputList<string>? _usages;

        /// <summary>
        /// Requested key usages and extended key usages. 
        ///  NOTE: If the CSR in the `Request` field has uses the KeyUsage or ExtKeyUsage extension, these extensions must have the same values as specified here without any additional values. 
        ///  If unset, defaults to `digital signature` and `key encipherment`.
        /// </summary>
        public InputList<string> Usages
        {
            get => _usages ?? (_usages = new InputList<string>());
            set => _usages = value;
        }

        /// <summary>
        /// Username contains the name of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public CertificateRequestSpecArgs()
        {
        }
        public static new CertificateRequestSpecArgs Empty => new CertificateRequestSpecArgs();
    }
}
