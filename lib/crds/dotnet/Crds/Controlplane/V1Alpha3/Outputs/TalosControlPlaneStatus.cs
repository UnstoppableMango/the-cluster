// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Controlplane.V1Alpha3
{

    /// <summary>
    /// TalosControlPlaneStatus defines the observed state of TalosControlPlane
    /// </summary>
    [OutputType]
    public sealed class TalosControlPlaneStatus
    {
        /// <summary>
        /// Bootstrapped denotes whether any nodes received bootstrap request which is required to start etcd and Kubernetes components in Talos.
        /// </summary>
        public readonly bool Bootstrapped;
        /// <summary>
        /// Conditions defines current service state of the KubeadmControlPlane.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Controlplane.V1Alpha3.TalosControlPlaneStatusConditions> Conditions;
        /// <summary>
        /// ErrorMessage indicates that there is a terminal problem reconciling the state, and will be set to a descriptive error message.
        /// </summary>
        public readonly string FailureMessage;
        /// <summary>
        /// FailureReason indicates that there is a terminal problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.
        /// </summary>
        public readonly string FailureReason;
        /// <summary>
        /// Initialized denotes whether or not the control plane has the uploaded talos-config configmap.
        /// </summary>
        public readonly bool Initialized;
        /// <summary>
        /// ObservedGeneration is the latest generation observed by the controller.
        /// </summary>
        public readonly int ObservedGeneration;
        /// <summary>
        /// Ready denotes that the TalosControlPlane API Server is ready to receive requests.
        /// </summary>
        public readonly bool Ready;
        /// <summary>
        /// Total number of fully running and ready control plane machines.
        /// </summary>
        public readonly int ReadyReplicas;
        /// <summary>
        /// Total number of non-terminated machines targeted by this control plane (their labels match the selector).
        /// </summary>
        public readonly int Replicas;
        /// <summary>
        /// Selector is the label selector in string format to avoid introspection by clients, and is used to provide the CRD-based integration for the scale subresource and additional integrations for things like kubectl describe.. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
        /// </summary>
        public readonly string Selector;
        /// <summary>
        /// Total number of unavailable machines targeted by this control plane. This is the total number of machines that are still required for the deployment to have 100% available capacity. They may either be machines that are running but not yet ready or machines that still have not been created.
        /// </summary>
        public readonly int UnavailableReplicas;

        [OutputConstructor]
        private TalosControlPlaneStatus(
            bool bootstrapped,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Controlplane.V1Alpha3.TalosControlPlaneStatusConditions> conditions,

            string failureMessage,

            string failureReason,

            bool initialized,

            int observedGeneration,

            bool ready,

            int readyReplicas,

            int replicas,

            string selector,

            int unavailableReplicas)
        {
            Bootstrapped = bootstrapped;
            Conditions = conditions;
            FailureMessage = failureMessage;
            FailureReason = failureReason;
            Initialized = initialized;
            ObservedGeneration = observedGeneration;
            Ready = ready;
            ReadyReplicas = readyReplicas;
            Replicas = replicas;
            Selector = selector;
            UnavailableReplicas = unavailableReplicas;
        }
    }
}
