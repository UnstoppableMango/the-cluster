// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Addons.V1Beta1
{

    /// <summary>
    /// Condition defines an observation of a Cluster API resource operational state.
    /// </summary>
    [OutputType]
    public sealed class ClusterResourceSetStatusConditions
    {
        /// <summary>
        /// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
        /// </summary>
        public readonly string LastTransitionTime;
        /// <summary>
        /// A human readable message indicating details about the transition. This field may be empty.
        /// </summary>
        public readonly string Message;
        /// <summary>
        /// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
        /// </summary>
        public readonly string Reason;
        /// <summary>
        /// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// Status of the condition, one of True, False, Unknown.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ClusterResourceSetStatusConditions(
            string lastTransitionTime,

            string message,

            string reason,

            string severity,

            string status,

            string type)
        {
            LastTransitionTime = lastTransitionTime;
            Message = message;
            Reason = reason;
            Severity = severity;
            Status = status;
            Type = type;
        }
    }
}
