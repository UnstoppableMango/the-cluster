// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.K8s.V1Alpha1
{

    /// <summary>
    /// TransportServerUpstream defines an upstream.
    /// </summary>
    [OutputType]
    public sealed class TransportServerSpecUpstreams
    {
        public readonly string Backup;
        public readonly int BackupPort;
        public readonly string FailTimeout;
        /// <summary>
        /// TransportServerHealthCheck defines the parameters for active Upstream HealthChecks.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.K8s.V1Alpha1.TransportServerSpecUpstreamsHealthCheck HealthCheck;
        public readonly string LoadBalancingMethod;
        public readonly int MaxConns;
        public readonly int MaxFails;
        public readonly string Name;
        public readonly int Port;
        public readonly string Service;

        [OutputConstructor]
        private TransportServerSpecUpstreams(
            string backup,

            int backupPort,

            string failTimeout,

            Pulumi.Kubernetes.Types.Outputs.K8s.V1Alpha1.TransportServerSpecUpstreamsHealthCheck healthCheck,

            string loadBalancingMethod,

            int maxConns,

            int maxFails,

            string name,

            int port,

            string service)
        {
            Backup = backup;
            BackupPort = backupPort;
            FailTimeout = failTimeout;
            HealthCheck = healthCheck;
            LoadBalancingMethod = loadBalancingMethod;
            MaxConns = maxConns;
            MaxFails = maxFails;
            Name = name;
            Port = port;
            Service = service;
        }
    }
}
