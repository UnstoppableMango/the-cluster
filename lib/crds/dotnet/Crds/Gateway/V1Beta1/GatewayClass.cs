// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.TheCluster.Crds.Gateway.V1Beta1
{
    /// <summary>
    /// GatewayClass describes a class of Gateways available to the user for creating Gateway resources.
    ///  It is recommended that this resource be used as a template for Gateways. This means that a Gateway is based on the state of the GatewayClass at the time it was created and changes to the GatewayClass or associated parameters are not propagated down to existing Gateways. This recommendation is intended to limit the blast radius of changes to GatewayClass or associated parameters. If implementations choose to propagate GatewayClass changes to existing Gateways, that MUST be clearly documented by the implementation.
    ///  Whenever one or more Gateways are using a GatewayClass, implementations SHOULD add the `gateway-exists-finalizer.gateway.networking.k8s.io` finalizer on the associated GatewayClass. This ensures that a GatewayClass associated with a Gateway is not deleted while in use.
    ///  GatewayClass is a Cluster level resource.
    /// </summary>
    [TheCluster.CrdsResourceType("kubernetes:gateway.networking.k8s.io/v1beta1:GatewayClass")]
    public partial class GatewayClass : KubernetesResource
    {
        [Output("apiVersion")]
        public Output<string> ApiVersion { get; private set; } = null!;

        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        [Output("metadata")]
        public Output<Pulumi.Kubernetes.Types.Outputs.Meta.V1.ObjectMeta> Metadata { get; private set; } = null!;

        /// <summary>
        /// Spec defines the desired state of GatewayClass.
        /// </summary>
        [Output("spec")]
        public Output<Pulumi.Kubernetes.Types.Outputs.Gateway.V1Beta1.GatewayClassSpec> Spec { get; private set; } = null!;

        /// <summary>
        /// Status defines the current state of GatewayClass. 
        ///  Implementations MUST populate status on all GatewayClass resources which specify their controller name.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.Kubernetes.Types.Outputs.Gateway.V1Beta1.GatewayClassStatus> Status { get; private set; } = null!;


        /// <summary>
        /// Create a GatewayClass resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GatewayClass(string name, Pulumi.Kubernetes.Types.Inputs.Gateway.V1Beta1.GatewayClassArgs? args = null, CustomResourceOptions? options = null)
            : base("kubernetes:gateway.networking.k8s.io/v1beta1:GatewayClass", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }
        internal GatewayClass(string name, ImmutableDictionary<string, object?> dictionary, CustomResourceOptions? options = null)
            : base("kubernetes:gateway.networking.k8s.io/v1beta1:GatewayClass", name, new DictionaryResourceArgs(dictionary), MakeResourceOptions(options, ""))
        {
        }

        private GatewayClass(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("kubernetes:gateway.networking.k8s.io/v1beta1:GatewayClass", name, null, MakeResourceOptions(options, id))
        {
        }

        private static Pulumi.Kubernetes.Types.Inputs.Gateway.V1Beta1.GatewayClassArgs? MakeArgs(Pulumi.Kubernetes.Types.Inputs.Gateway.V1Beta1.GatewayClassArgs? args)
        {
            args ??= new Pulumi.Kubernetes.Types.Inputs.Gateway.V1Beta1.GatewayClassArgs();
            args.ApiVersion = "gateway.networking.k8s.io/v1beta1";
            args.Kind = "GatewayClass";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GatewayClass resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GatewayClass Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GatewayClass(name, id, options);
        }
    }
}
namespace Pulumi.Kubernetes.Types.Inputs.Gateway.V1Beta1
{

    public class GatewayClassArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiVersion")]
        public Input<string>? ApiVersion { get; set; }

        [Input("kind")]
        public Input<string>? Kind { get; set; }

        [Input("metadata")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Meta.V1.ObjectMetaArgs>? Metadata { get; set; }

        /// <summary>
        /// Spec defines the desired state of GatewayClass.
        /// </summary>
        [Input("spec")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Gateway.V1Beta1.GatewayClassSpecArgs>? Spec { get; set; }

        /// <summary>
        /// Status defines the current state of GatewayClass. 
        ///  Implementations MUST populate status on all GatewayClass resources which specify their controller name.
        /// </summary>
        [Input("status")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Gateway.V1Beta1.GatewayClassStatusArgs>? Status { get; set; }

        public GatewayClassArgs()
        {
        }
        public static new GatewayClassArgs Empty => new GatewayClassArgs();
    }
}
