// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Actions.V1Alpha1
{

    /// <summary>
    /// EphemeralRunnerStatus defines the observed state of EphemeralRunner
    /// </summary>
    public class EphemeralRunnerStatusArgs : global::Pulumi.ResourceArgs
    {
        [Input("failures")]
        private InputMap<bool>? _failures;
        public InputMap<bool> Failures
        {
            get => _failures ?? (_failures = new InputMap<bool>());
            set => _failures = value;
        }

        [Input("jobDisplayName")]
        public Input<string>? JobDisplayName { get; set; }

        [Input("jobRepositoryName")]
        public Input<string>? JobRepositoryName { get; set; }

        [Input("jobRequestId")]
        public Input<int>? JobRequestId { get; set; }

        [Input("jobWorkflowRef")]
        public Input<string>? JobWorkflowRef { get; set; }

        [Input("message")]
        public Input<string>? Message { get; set; }

        /// <summary>
        /// Phase describes phases where EphemeralRunner can be in. The underlying type is a PodPhase, but the meaning is more restrictive 
        ///  The PodFailed phase should be set only when EphemeralRunner fails to start after multiple retries. That signals that this EphemeralRunner won't work, and manual inspection is required 
        ///  The PodSucceded phase should be set only when confirmed that EphemeralRunner actually executed the job and has been removed from the service.
        /// </summary>
        [Input("phase")]
        public Input<string>? Phase { get; set; }

        /// <summary>
        /// Turns true only if the runner is online.
        /// </summary>
        [Input("ready")]
        public Input<bool>? Ready { get; set; }

        [Input("reason")]
        public Input<string>? Reason { get; set; }

        [Input("runnerId")]
        public Input<int>? RunnerId { get; set; }

        [Input("runnerJITConfig")]
        public Input<string>? RunnerJITConfig { get; set; }

        [Input("runnerName")]
        public Input<string>? RunnerName { get; set; }

        [Input("workflowRunId")]
        public Input<int>? WorkflowRunId { get; set; }

        public EphemeralRunnerStatusArgs()
        {
        }
        public static new EphemeralRunnerStatusArgs Empty => new EphemeralRunnerStatusArgs();
    }
}
