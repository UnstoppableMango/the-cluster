# coding=utf-8
# *** WARNING: this file was generated by crd2pulumi. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .provider import *

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi_crds.addons as __addons
    addons = __addons
    import pulumi_crds.bootstrap as __bootstrap
    bootstrap = __bootstrap
    import pulumi_crds.cluster as __cluster
    cluster = __cluster
    import pulumi_crds.gateway as __gateway
    gateway = __gateway
    import pulumi_crds.ipam as __ipam
    ipam = __ipam
    import pulumi_crds.meta as __meta
    meta = __meta
    import pulumi_crds.runtime as __runtime
    runtime = __runtime
else:
    addons = _utilities.lazy_import('pulumi_crds.addons')
    bootstrap = _utilities.lazy_import('pulumi_crds.bootstrap')
    cluster = _utilities.lazy_import('pulumi_crds.cluster')
    gateway = _utilities.lazy_import('pulumi_crds.gateway')
    ipam = _utilities.lazy_import('pulumi_crds.ipam')
    meta = _utilities.lazy_import('pulumi_crds.meta')
    runtime = _utilities.lazy_import('pulumi_crds.runtime')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "crds",
  "mod": "addons.cluster.x-k8s.io/v1alpha3",
  "fqn": "pulumi_crds.addons.v1alpha3",
  "classes": {
   "kubernetes:addons.cluster.x-k8s.io/v1alpha3:ClusterResourceSet": "ClusterResourceSet",
   "kubernetes:addons.cluster.x-k8s.io/v1alpha3:ClusterResourceSetBinding": "ClusterResourceSetBinding"
  }
 },
 {
  "pkg": "crds",
  "mod": "addons.cluster.x-k8s.io/v1alpha4",
  "fqn": "pulumi_crds.addons.v1alpha4",
  "classes": {
   "kubernetes:addons.cluster.x-k8s.io/v1alpha4:ClusterResourceSet": "ClusterResourceSet",
   "kubernetes:addons.cluster.x-k8s.io/v1alpha4:ClusterResourceSetBinding": "ClusterResourceSetBinding"
  }
 },
 {
  "pkg": "crds",
  "mod": "addons.cluster.x-k8s.io/v1beta1",
  "fqn": "pulumi_crds.addons.v1beta1",
  "classes": {
   "kubernetes:addons.cluster.x-k8s.io/v1beta1:ClusterResourceSet": "ClusterResourceSet",
   "kubernetes:addons.cluster.x-k8s.io/v1beta1:ClusterResourceSetBinding": "ClusterResourceSetBinding"
  }
 },
 {
  "pkg": "crds",
  "mod": "bootstrap.cluster.x-k8s.io/v1alpha2",
  "fqn": "pulumi_crds.bootstrap.v1alpha2",
  "classes": {
   "kubernetes:bootstrap.cluster.x-k8s.io/v1alpha2:TalosConfig": "TalosConfig",
   "kubernetes:bootstrap.cluster.x-k8s.io/v1alpha2:TalosConfigTemplate": "TalosConfigTemplate"
  }
 },
 {
  "pkg": "crds",
  "mod": "bootstrap.cluster.x-k8s.io/v1alpha3",
  "fqn": "pulumi_crds.bootstrap.v1alpha3",
  "classes": {
   "kubernetes:bootstrap.cluster.x-k8s.io/v1alpha3:TalosConfig": "TalosConfig",
   "kubernetes:bootstrap.cluster.x-k8s.io/v1alpha3:TalosConfigTemplate": "TalosConfigTemplate"
  }
 },
 {
  "pkg": "crds",
  "mod": "cluster.x-k8s.io/v1alpha3",
  "fqn": "pulumi_crds.cluster.v1alpha3",
  "classes": {
   "kubernetes:cluster.x-k8s.io/v1alpha3:Cluster": "Cluster",
   "kubernetes:cluster.x-k8s.io/v1alpha3:Machine": "Machine",
   "kubernetes:cluster.x-k8s.io/v1alpha3:MachineDeployment": "MachineDeployment",
   "kubernetes:cluster.x-k8s.io/v1alpha3:MachineHealthCheck": "MachineHealthCheck",
   "kubernetes:cluster.x-k8s.io/v1alpha3:MachinePool": "MachinePool",
   "kubernetes:cluster.x-k8s.io/v1alpha3:MachineSet": "MachineSet"
  }
 },
 {
  "pkg": "crds",
  "mod": "cluster.x-k8s.io/v1alpha4",
  "fqn": "pulumi_crds.cluster.v1alpha4",
  "classes": {
   "kubernetes:cluster.x-k8s.io/v1alpha4:Cluster": "Cluster",
   "kubernetes:cluster.x-k8s.io/v1alpha4:ClusterClass": "ClusterClass",
   "kubernetes:cluster.x-k8s.io/v1alpha4:Machine": "Machine",
   "kubernetes:cluster.x-k8s.io/v1alpha4:MachineDeployment": "MachineDeployment",
   "kubernetes:cluster.x-k8s.io/v1alpha4:MachineHealthCheck": "MachineHealthCheck",
   "kubernetes:cluster.x-k8s.io/v1alpha4:MachinePool": "MachinePool",
   "kubernetes:cluster.x-k8s.io/v1alpha4:MachineSet": "MachineSet"
  }
 },
 {
  "pkg": "crds",
  "mod": "cluster.x-k8s.io/v1beta1",
  "fqn": "pulumi_crds.cluster.v1beta1",
  "classes": {
   "kubernetes:cluster.x-k8s.io/v1beta1:Cluster": "Cluster",
   "kubernetes:cluster.x-k8s.io/v1beta1:ClusterClass": "ClusterClass",
   "kubernetes:cluster.x-k8s.io/v1beta1:Machine": "Machine",
   "kubernetes:cluster.x-k8s.io/v1beta1:MachineDeployment": "MachineDeployment",
   "kubernetes:cluster.x-k8s.io/v1beta1:MachineHealthCheck": "MachineHealthCheck",
   "kubernetes:cluster.x-k8s.io/v1beta1:MachinePool": "MachinePool",
   "kubernetes:cluster.x-k8s.io/v1beta1:MachineSet": "MachineSet"
  }
 },
 {
  "pkg": "crds",
  "mod": "gateway.networking.k8s.io/v1alpha2",
  "fqn": "pulumi_crds.gateway.v1alpha2",
  "classes": {
   "kubernetes:gateway.networking.k8s.io/v1alpha2:BackendTLSPolicy": "BackendTLSPolicy",
   "kubernetes:gateway.networking.k8s.io/v1alpha2:GRPCRoute": "GRPCRoute",
   "kubernetes:gateway.networking.k8s.io/v1alpha2:ReferenceGrant": "ReferenceGrant",
   "kubernetes:gateway.networking.k8s.io/v1alpha2:TCPRoute": "TCPRoute",
   "kubernetes:gateway.networking.k8s.io/v1alpha2:TLSRoute": "TLSRoute",
   "kubernetes:gateway.networking.k8s.io/v1alpha2:UDPRoute": "UDPRoute"
  }
 },
 {
  "pkg": "crds",
  "mod": "gateway.networking.k8s.io/v1beta1",
  "fqn": "pulumi_crds.gateway.v1beta1",
  "classes": {
   "kubernetes:gateway.networking.k8s.io/v1beta1:ReferenceGrant": "ReferenceGrant"
  }
 },
 {
  "pkg": "crds",
  "mod": "ipam.cluster.x-k8s.io/v1alpha1",
  "fqn": "pulumi_crds.ipam.v1alpha1",
  "classes": {
   "kubernetes:ipam.cluster.x-k8s.io/v1alpha1:IPAddress": "IPAddress",
   "kubernetes:ipam.cluster.x-k8s.io/v1alpha1:IPAddressClaim": "IPAddressClaim"
  }
 },
 {
  "pkg": "crds",
  "mod": "runtime.cluster.x-k8s.io/v1alpha1",
  "fqn": "pulumi_crds.runtime.v1alpha1",
  "classes": {
   "kubernetes:runtime.cluster.x-k8s.io/v1alpha1:ExtensionConfig": "ExtensionConfig"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "crds",
  "token": "pulumi:providers:crds",
  "fqn": "pulumi_crds",
  "class": "Provider"
 }
]
"""
)
