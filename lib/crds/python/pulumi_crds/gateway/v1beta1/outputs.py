# coding=utf-8
# *** WARNING: this file was generated by crd2pulumi. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs

__all__ = [
    'ReferenceGrantSpec',
    'ReferenceGrantSpecFrom',
    'ReferenceGrantSpecTo',
]

@pulumi.output_type
class ReferenceGrantSpec(dict):
    """
    Spec defines the desired state of ReferenceGrant.
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "from":
            suggest = "from_"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ReferenceGrantSpec. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ReferenceGrantSpec.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ReferenceGrantSpec.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 from_: Sequence['outputs.ReferenceGrantSpecFrom'],
                 to: Sequence['outputs.ReferenceGrantSpecTo']):
        """
        Spec defines the desired state of ReferenceGrant.
        :param Sequence['ReferenceGrantSpecFromArgs'] from_: From describes the trusted namespaces and kinds that can reference the resources described in "To". Each entry in this list MUST be considered to be an additional place that references can be valid from, or to put this another way, entries MUST be combined using OR. 
                Support: Core
        :param Sequence['ReferenceGrantSpecToArgs'] to: To describes the resources that may be referenced by the resources described in "From". Each entry in this list MUST be considered to be an additional place that references can be valid to, or to put this another way, entries MUST be combined using OR. 
                Support: Core
        """
        pulumi.set(__self__, "from_", from_)
        pulumi.set(__self__, "to", to)

    @property
    @pulumi.getter(name="from")
    def from_(self) -> Sequence['outputs.ReferenceGrantSpecFrom']:
        """
        From describes the trusted namespaces and kinds that can reference the resources described in "To". Each entry in this list MUST be considered to be an additional place that references can be valid from, or to put this another way, entries MUST be combined using OR. 
         Support: Core
        """
        return pulumi.get(self, "from_")

    @property
    @pulumi.getter
    def to(self) -> Sequence['outputs.ReferenceGrantSpecTo']:
        """
        To describes the resources that may be referenced by the resources described in "From". Each entry in this list MUST be considered to be an additional place that references can be valid to, or to put this another way, entries MUST be combined using OR. 
         Support: Core
        """
        return pulumi.get(self, "to")


@pulumi.output_type
class ReferenceGrantSpecFrom(dict):
    """
    ReferenceGrantFrom describes trusted namespaces and kinds.
    """
    def __init__(__self__, *,
                 group: str,
                 kind: str,
                 namespace: str):
        """
        ReferenceGrantFrom describes trusted namespaces and kinds.
        :param str group: Group is the group of the referent. When empty, the Kubernetes core API group is inferred. 
                Support: Core
        :param str kind: Kind is the kind of the referent. Although implementations may support additional resources, the following types are part of the "Core" support level for this field. 
                When used to permit a SecretObjectReference: 
                * Gateway 
                When used to permit a BackendObjectReference: 
                * GRPCRoute * HTTPRoute * TCPRoute * TLSRoute * UDPRoute
        :param str namespace: Namespace is the namespace of the referent. 
                Support: Core
        """
        pulumi.set(__self__, "group", group)
        pulumi.set(__self__, "kind", kind)
        pulumi.set(__self__, "namespace", namespace)

    @property
    @pulumi.getter
    def group(self) -> str:
        """
        Group is the group of the referent. When empty, the Kubernetes core API group is inferred. 
         Support: Core
        """
        return pulumi.get(self, "group")

    @property
    @pulumi.getter
    def kind(self) -> str:
        """
        Kind is the kind of the referent. Although implementations may support additional resources, the following types are part of the "Core" support level for this field. 
         When used to permit a SecretObjectReference: 
         * Gateway 
         When used to permit a BackendObjectReference: 
         * GRPCRoute * HTTPRoute * TCPRoute * TLSRoute * UDPRoute
        """
        return pulumi.get(self, "kind")

    @property
    @pulumi.getter
    def namespace(self) -> str:
        """
        Namespace is the namespace of the referent. 
         Support: Core
        """
        return pulumi.get(self, "namespace")


@pulumi.output_type
class ReferenceGrantSpecTo(dict):
    """
    ReferenceGrantTo describes what Kinds are allowed as targets of the references.
    """
    def __init__(__self__, *,
                 group: str,
                 kind: str,
                 name: Optional[str] = None):
        """
        ReferenceGrantTo describes what Kinds are allowed as targets of the references.
        :param str group: Group is the group of the referent. When empty, the Kubernetes core API group is inferred. 
                Support: Core
        :param str kind: Kind is the kind of the referent. Although implementations may support additional resources, the following types are part of the "Core" support level for this field: 
                * Secret when used to permit a SecretObjectReference * Service when used to permit a BackendObjectReference
        :param str name: Name is the name of the referent. When unspecified, this policy refers to all resources of the specified Group and Kind in the local namespace.
        """
        pulumi.set(__self__, "group", group)
        pulumi.set(__self__, "kind", kind)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def group(self) -> str:
        """
        Group is the group of the referent. When empty, the Kubernetes core API group is inferred. 
         Support: Core
        """
        return pulumi.get(self, "group")

    @property
    @pulumi.getter
    def kind(self) -> str:
        """
        Kind is the kind of the referent. Although implementations may support additional resources, the following types are part of the "Core" support level for this field: 
         * Secret when used to permit a SecretObjectReference * Service when used to permit a BackendObjectReference
        """
        return pulumi.get(self, "kind")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Name is the name of the referent. When unspecified, this policy refers to all resources of the specified Group and Kind in the local namespace.
        """
        return pulumi.get(self, "name")


