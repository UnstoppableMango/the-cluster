# coding=utf-8
# *** WARNING: this file was generated by crd2pulumi. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'ReferenceGrantSpecFromArgs',
    'ReferenceGrantSpecToArgs',
    'ReferenceGrantSpecArgs',
]

@pulumi.input_type
class ReferenceGrantSpecFromArgs:
    def __init__(__self__, *,
                 group: pulumi.Input[str],
                 kind: pulumi.Input[str],
                 namespace: pulumi.Input[str]):
        """
        ReferenceGrantFrom describes trusted namespaces and kinds.
        :param pulumi.Input[str] group: Group is the group of the referent. When empty, the Kubernetes core API group is inferred. 
                Support: Core
        :param pulumi.Input[str] kind: Kind is the kind of the referent. Although implementations may support additional resources, the following types are part of the "Core" support level for this field. 
                When used to permit a SecretObjectReference: 
                * Gateway 
                When used to permit a BackendObjectReference: 
                * GRPCRoute * HTTPRoute * TCPRoute * TLSRoute * UDPRoute
        :param pulumi.Input[str] namespace: Namespace is the namespace of the referent. 
                Support: Core
        """
        pulumi.set(__self__, "group", group)
        pulumi.set(__self__, "kind", kind)
        pulumi.set(__self__, "namespace", namespace)

    @property
    @pulumi.getter
    def group(self) -> pulumi.Input[str]:
        """
        Group is the group of the referent. When empty, the Kubernetes core API group is inferred. 
         Support: Core
        """
        return pulumi.get(self, "group")

    @group.setter
    def group(self, value: pulumi.Input[str]):
        pulumi.set(self, "group", value)

    @property
    @pulumi.getter
    def kind(self) -> pulumi.Input[str]:
        """
        Kind is the kind of the referent. Although implementations may support additional resources, the following types are part of the "Core" support level for this field. 
         When used to permit a SecretObjectReference: 
         * Gateway 
         When used to permit a BackendObjectReference: 
         * GRPCRoute * HTTPRoute * TCPRoute * TLSRoute * UDPRoute
        """
        return pulumi.get(self, "kind")

    @kind.setter
    def kind(self, value: pulumi.Input[str]):
        pulumi.set(self, "kind", value)

    @property
    @pulumi.getter
    def namespace(self) -> pulumi.Input[str]:
        """
        Namespace is the namespace of the referent. 
         Support: Core
        """
        return pulumi.get(self, "namespace")

    @namespace.setter
    def namespace(self, value: pulumi.Input[str]):
        pulumi.set(self, "namespace", value)


@pulumi.input_type
class ReferenceGrantSpecToArgs:
    def __init__(__self__, *,
                 group: pulumi.Input[str],
                 kind: pulumi.Input[str],
                 name: Optional[pulumi.Input[str]] = None):
        """
        ReferenceGrantTo describes what Kinds are allowed as targets of the references.
        :param pulumi.Input[str] group: Group is the group of the referent. When empty, the Kubernetes core API group is inferred. 
                Support: Core
        :param pulumi.Input[str] kind: Kind is the kind of the referent. Although implementations may support additional resources, the following types are part of the "Core" support level for this field: 
                * Secret when used to permit a SecretObjectReference * Service when used to permit a BackendObjectReference
        :param pulumi.Input[str] name: Name is the name of the referent. When unspecified, this policy refers to all resources of the specified Group and Kind in the local namespace.
        """
        pulumi.set(__self__, "group", group)
        pulumi.set(__self__, "kind", kind)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def group(self) -> pulumi.Input[str]:
        """
        Group is the group of the referent. When empty, the Kubernetes core API group is inferred. 
         Support: Core
        """
        return pulumi.get(self, "group")

    @group.setter
    def group(self, value: pulumi.Input[str]):
        pulumi.set(self, "group", value)

    @property
    @pulumi.getter
    def kind(self) -> pulumi.Input[str]:
        """
        Kind is the kind of the referent. Although implementations may support additional resources, the following types are part of the "Core" support level for this field: 
         * Secret when used to permit a SecretObjectReference * Service when used to permit a BackendObjectReference
        """
        return pulumi.get(self, "kind")

    @kind.setter
    def kind(self, value: pulumi.Input[str]):
        pulumi.set(self, "kind", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Name is the name of the referent. When unspecified, this policy refers to all resources of the specified Group and Kind in the local namespace.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class ReferenceGrantSpecArgs:
    def __init__(__self__, *,
                 from_: pulumi.Input[Sequence[pulumi.Input['ReferenceGrantSpecFromArgs']]],
                 to: pulumi.Input[Sequence[pulumi.Input['ReferenceGrantSpecToArgs']]]):
        """
        Spec defines the desired state of ReferenceGrant.
        :param pulumi.Input[Sequence[pulumi.Input['ReferenceGrantSpecFromArgs']]] from_: From describes the trusted namespaces and kinds that can reference the resources described in "To". Each entry in this list MUST be considered to be an additional place that references can be valid from, or to put this another way, entries MUST be combined using OR. 
                Support: Core
        :param pulumi.Input[Sequence[pulumi.Input['ReferenceGrantSpecToArgs']]] to: To describes the resources that may be referenced by the resources described in "From". Each entry in this list MUST be considered to be an additional place that references can be valid to, or to put this another way, entries MUST be combined using OR. 
                Support: Core
        """
        pulumi.set(__self__, "from_", from_)
        pulumi.set(__self__, "to", to)

    @property
    @pulumi.getter(name="from")
    def from_(self) -> pulumi.Input[Sequence[pulumi.Input['ReferenceGrantSpecFromArgs']]]:
        """
        From describes the trusted namespaces and kinds that can reference the resources described in "To". Each entry in this list MUST be considered to be an additional place that references can be valid from, or to put this another way, entries MUST be combined using OR. 
         Support: Core
        """
        return pulumi.get(self, "from_")

    @from_.setter
    def from_(self, value: pulumi.Input[Sequence[pulumi.Input['ReferenceGrantSpecFromArgs']]]):
        pulumi.set(self, "from_", value)

    @property
    @pulumi.getter
    def to(self) -> pulumi.Input[Sequence[pulumi.Input['ReferenceGrantSpecToArgs']]]:
        """
        To describes the resources that may be referenced by the resources described in "From". Each entry in this list MUST be considered to be an additional place that references can be valid to, or to put this another way, entries MUST be combined using OR. 
         Support: Core
        """
        return pulumi.get(self, "to")

    @to.setter
    def to(self, value: pulumi.Input[Sequence[pulumi.Input['ReferenceGrantSpecToArgs']]]):
        pulumi.set(self, "to", value)


