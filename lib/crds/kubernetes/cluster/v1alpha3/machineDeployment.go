// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha3

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// MachineDeployment is the Schema for the machinedeployments API.
//
//	Deprecated: This type will be removed in one of the next releases.
type MachineDeployment struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// MachineDeploymentSpec defines the desired state of MachineDeployment.
	Spec MachineDeploymentSpecPtrOutput `pulumi:"spec"`
	// MachineDeploymentStatus defines the observed state of MachineDeployment.
	Status MachineDeploymentStatusPtrOutput `pulumi:"status"`
}

// NewMachineDeployment registers a new resource with the given unique name, arguments, and options.
func NewMachineDeployment(ctx *pulumi.Context,
	name string, args *MachineDeploymentArgs, opts ...pulumi.ResourceOption) (*MachineDeployment, error) {
	if args == nil {
		args = &MachineDeploymentArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("cluster.x-k8s.io/v1alpha3")
	args.Kind = pulumi.StringPtr("MachineDeployment")
	var resource MachineDeployment
	err := ctx.RegisterResource("kubernetes:cluster.x-k8s.io/v1alpha3:MachineDeployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMachineDeployment gets an existing MachineDeployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMachineDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MachineDeploymentState, opts ...pulumi.ResourceOption) (*MachineDeployment, error) {
	var resource MachineDeployment
	err := ctx.ReadResource("kubernetes:cluster.x-k8s.io/v1alpha3:MachineDeployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MachineDeployment resources.
type machineDeploymentState struct {
}

type MachineDeploymentState struct {
}

func (MachineDeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*machineDeploymentState)(nil)).Elem()
}

type machineDeploymentArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// MachineDeploymentSpec defines the desired state of MachineDeployment.
	Spec *MachineDeploymentSpec `pulumi:"spec"`
	// MachineDeploymentStatus defines the observed state of MachineDeployment.
	Status *MachineDeploymentStatus `pulumi:"status"`
}

// The set of arguments for constructing a MachineDeployment resource.
type MachineDeploymentArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// MachineDeploymentSpec defines the desired state of MachineDeployment.
	Spec MachineDeploymentSpecPtrInput
	// MachineDeploymentStatus defines the observed state of MachineDeployment.
	Status MachineDeploymentStatusPtrInput
}

func (MachineDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*machineDeploymentArgs)(nil)).Elem()
}

type MachineDeploymentInput interface {
	pulumi.Input

	ToMachineDeploymentOutput() MachineDeploymentOutput
	ToMachineDeploymentOutputWithContext(ctx context.Context) MachineDeploymentOutput
}

func (*MachineDeployment) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeployment)(nil)).Elem()
}

func (i *MachineDeployment) ToMachineDeploymentOutput() MachineDeploymentOutput {
	return i.ToMachineDeploymentOutputWithContext(context.Background())
}

func (i *MachineDeployment) ToMachineDeploymentOutputWithContext(ctx context.Context) MachineDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentOutput)
}

type MachineDeploymentOutput struct{ *pulumi.OutputState }

func (MachineDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeployment)(nil)).Elem()
}

func (o MachineDeploymentOutput) ToMachineDeploymentOutput() MachineDeploymentOutput {
	return o
}

func (o MachineDeploymentOutput) ToMachineDeploymentOutputWithContext(ctx context.Context) MachineDeploymentOutput {
	return o
}

func (o MachineDeploymentOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeployment) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o MachineDeploymentOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeployment) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o MachineDeploymentOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *MachineDeployment) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// MachineDeploymentSpec defines the desired state of MachineDeployment.
func (o MachineDeploymentOutput) Spec() MachineDeploymentSpecPtrOutput {
	return o.ApplyT(func(v *MachineDeployment) MachineDeploymentSpecPtrOutput { return v.Spec }).(MachineDeploymentSpecPtrOutput)
}

// MachineDeploymentStatus defines the observed state of MachineDeployment.
func (o MachineDeploymentOutput) Status() MachineDeploymentStatusPtrOutput {
	return o.ApplyT(func(v *MachineDeployment) MachineDeploymentStatusPtrOutput { return v.Status }).(MachineDeploymentStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentInput)(nil)).Elem(), &MachineDeployment{})
	pulumi.RegisterOutputType(MachineDeploymentOutput{})
}
