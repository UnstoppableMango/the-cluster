// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Cluster is the Schema for the clusters API.
type ClusterType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ClusterSpec defines the desired state of Cluster.
	Spec *ClusterSpec `pulumi:"spec"`
	// ClusterStatus defines the observed state of Cluster.
	Status *ClusterStatus `pulumi:"status"`
}

// ClusterClass is a template which can be used to create managed topologies.
type ClusterClassType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ClusterClassSpec describes the desired state of the ClusterClass.
	Spec *ClusterClassSpec `pulumi:"spec"`
	// ClusterClassStatus defines the observed state of the ClusterClass.
	Status *ClusterClassStatus `pulumi:"status"`
}

type ClusterClassMetadata struct {
}

// ClusterClassSpec describes the desired state of the ClusterClass.
type ClusterClassSpec struct {
	// ControlPlane is a reference to a local struct that holds the details for provisioning the Control Plane for the Cluster.
	ControlPlane *ClusterClassSpecControlPlane `pulumi:"controlPlane"`
	// Infrastructure is a reference to a provider-specific template that holds the details for provisioning infrastructure specific cluster for the underlying provider. The underlying provider is responsible for the implementation of the template to an infrastructure cluster.
	Infrastructure *ClusterClassSpecInfrastructure `pulumi:"infrastructure"`
	// Patches defines the patches which are applied to customize referenced templates of a ClusterClass. Note: Patches will be applied in the order of the array.
	Patches []ClusterClassSpecPatches `pulumi:"patches"`
	// Variables defines the variables which can be configured in the Cluster topology and are then used in patches.
	Variables []ClusterClassSpecVariables `pulumi:"variables"`
	// Workers describes the worker nodes for the cluster. It is a collection of node types which can be used to create the worker nodes of the cluster.
	Workers *ClusterClassSpecWorkers `pulumi:"workers"`
}

// ClusterClassSpecInput is an input type that accepts ClusterClassSpecArgs and ClusterClassSpecOutput values.
// You can construct a concrete instance of `ClusterClassSpecInput` via:
//
//	ClusterClassSpecArgs{...}
type ClusterClassSpecInput interface {
	pulumi.Input

	ToClusterClassSpecOutput() ClusterClassSpecOutput
	ToClusterClassSpecOutputWithContext(context.Context) ClusterClassSpecOutput
}

// ClusterClassSpec describes the desired state of the ClusterClass.
type ClusterClassSpecArgs struct {
	// ControlPlane is a reference to a local struct that holds the details for provisioning the Control Plane for the Cluster.
	ControlPlane ClusterClassSpecControlPlanePtrInput `pulumi:"controlPlane"`
	// Infrastructure is a reference to a provider-specific template that holds the details for provisioning infrastructure specific cluster for the underlying provider. The underlying provider is responsible for the implementation of the template to an infrastructure cluster.
	Infrastructure ClusterClassSpecInfrastructurePtrInput `pulumi:"infrastructure"`
	// Patches defines the patches which are applied to customize referenced templates of a ClusterClass. Note: Patches will be applied in the order of the array.
	Patches ClusterClassSpecPatchesArrayInput `pulumi:"patches"`
	// Variables defines the variables which can be configured in the Cluster topology and are then used in patches.
	Variables ClusterClassSpecVariablesArrayInput `pulumi:"variables"`
	// Workers describes the worker nodes for the cluster. It is a collection of node types which can be used to create the worker nodes of the cluster.
	Workers ClusterClassSpecWorkersPtrInput `pulumi:"workers"`
}

func (ClusterClassSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpec)(nil)).Elem()
}

func (i ClusterClassSpecArgs) ToClusterClassSpecOutput() ClusterClassSpecOutput {
	return i.ToClusterClassSpecOutputWithContext(context.Background())
}

func (i ClusterClassSpecArgs) ToClusterClassSpecOutputWithContext(ctx context.Context) ClusterClassSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecOutput)
}

func (i ClusterClassSpecArgs) ToClusterClassSpecPtrOutput() ClusterClassSpecPtrOutput {
	return i.ToClusterClassSpecPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecArgs) ToClusterClassSpecPtrOutputWithContext(ctx context.Context) ClusterClassSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecOutput).ToClusterClassSpecPtrOutputWithContext(ctx)
}

// ClusterClassSpecPtrInput is an input type that accepts ClusterClassSpecArgs, ClusterClassSpecPtr and ClusterClassSpecPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecPtrInput` via:
//
//	        ClusterClassSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecPtrInput interface {
	pulumi.Input

	ToClusterClassSpecPtrOutput() ClusterClassSpecPtrOutput
	ToClusterClassSpecPtrOutputWithContext(context.Context) ClusterClassSpecPtrOutput
}

type clusterClassSpecPtrType ClusterClassSpecArgs

func ClusterClassSpecPtr(v *ClusterClassSpecArgs) ClusterClassSpecPtrInput {
	return (*clusterClassSpecPtrType)(v)
}

func (*clusterClassSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpec)(nil)).Elem()
}

func (i *clusterClassSpecPtrType) ToClusterClassSpecPtrOutput() ClusterClassSpecPtrOutput {
	return i.ToClusterClassSpecPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecPtrType) ToClusterClassSpecPtrOutputWithContext(ctx context.Context) ClusterClassSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPtrOutput)
}

// ClusterClassSpec describes the desired state of the ClusterClass.
type ClusterClassSpecOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpec)(nil)).Elem()
}

func (o ClusterClassSpecOutput) ToClusterClassSpecOutput() ClusterClassSpecOutput {
	return o
}

func (o ClusterClassSpecOutput) ToClusterClassSpecOutputWithContext(ctx context.Context) ClusterClassSpecOutput {
	return o
}

func (o ClusterClassSpecOutput) ToClusterClassSpecPtrOutput() ClusterClassSpecPtrOutput {
	return o.ToClusterClassSpecPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecOutput) ToClusterClassSpecPtrOutputWithContext(ctx context.Context) ClusterClassSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpec) *ClusterClassSpec {
		return &v
	}).(ClusterClassSpecPtrOutput)
}

// ControlPlane is a reference to a local struct that holds the details for provisioning the Control Plane for the Cluster.
func (o ClusterClassSpecOutput) ControlPlane() ClusterClassSpecControlPlanePtrOutput {
	return o.ApplyT(func(v ClusterClassSpec) *ClusterClassSpecControlPlane { return v.ControlPlane }).(ClusterClassSpecControlPlanePtrOutput)
}

// Infrastructure is a reference to a provider-specific template that holds the details for provisioning infrastructure specific cluster for the underlying provider. The underlying provider is responsible for the implementation of the template to an infrastructure cluster.
func (o ClusterClassSpecOutput) Infrastructure() ClusterClassSpecInfrastructurePtrOutput {
	return o.ApplyT(func(v ClusterClassSpec) *ClusterClassSpecInfrastructure { return v.Infrastructure }).(ClusterClassSpecInfrastructurePtrOutput)
}

// Patches defines the patches which are applied to customize referenced templates of a ClusterClass. Note: Patches will be applied in the order of the array.
func (o ClusterClassSpecOutput) Patches() ClusterClassSpecPatchesArrayOutput {
	return o.ApplyT(func(v ClusterClassSpec) []ClusterClassSpecPatches { return v.Patches }).(ClusterClassSpecPatchesArrayOutput)
}

// Variables defines the variables which can be configured in the Cluster topology and are then used in patches.
func (o ClusterClassSpecOutput) Variables() ClusterClassSpecVariablesArrayOutput {
	return o.ApplyT(func(v ClusterClassSpec) []ClusterClassSpecVariables { return v.Variables }).(ClusterClassSpecVariablesArrayOutput)
}

// Workers describes the worker nodes for the cluster. It is a collection of node types which can be used to create the worker nodes of the cluster.
func (o ClusterClassSpecOutput) Workers() ClusterClassSpecWorkersPtrOutput {
	return o.ApplyT(func(v ClusterClassSpec) *ClusterClassSpecWorkers { return v.Workers }).(ClusterClassSpecWorkersPtrOutput)
}

type ClusterClassSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpec)(nil)).Elem()
}

func (o ClusterClassSpecPtrOutput) ToClusterClassSpecPtrOutput() ClusterClassSpecPtrOutput {
	return o
}

func (o ClusterClassSpecPtrOutput) ToClusterClassSpecPtrOutputWithContext(ctx context.Context) ClusterClassSpecPtrOutput {
	return o
}

func (o ClusterClassSpecPtrOutput) Elem() ClusterClassSpecOutput {
	return o.ApplyT(func(v *ClusterClassSpec) ClusterClassSpec {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpec
		return ret
	}).(ClusterClassSpecOutput)
}

// ControlPlane is a reference to a local struct that holds the details for provisioning the Control Plane for the Cluster.
func (o ClusterClassSpecPtrOutput) ControlPlane() ClusterClassSpecControlPlanePtrOutput {
	return o.ApplyT(func(v *ClusterClassSpec) *ClusterClassSpecControlPlane {
		if v == nil {
			return nil
		}
		return v.ControlPlane
	}).(ClusterClassSpecControlPlanePtrOutput)
}

// Infrastructure is a reference to a provider-specific template that holds the details for provisioning infrastructure specific cluster for the underlying provider. The underlying provider is responsible for the implementation of the template to an infrastructure cluster.
func (o ClusterClassSpecPtrOutput) Infrastructure() ClusterClassSpecInfrastructurePtrOutput {
	return o.ApplyT(func(v *ClusterClassSpec) *ClusterClassSpecInfrastructure {
		if v == nil {
			return nil
		}
		return v.Infrastructure
	}).(ClusterClassSpecInfrastructurePtrOutput)
}

// Patches defines the patches which are applied to customize referenced templates of a ClusterClass. Note: Patches will be applied in the order of the array.
func (o ClusterClassSpecPtrOutput) Patches() ClusterClassSpecPatchesArrayOutput {
	return o.ApplyT(func(v *ClusterClassSpec) []ClusterClassSpecPatches {
		if v == nil {
			return nil
		}
		return v.Patches
	}).(ClusterClassSpecPatchesArrayOutput)
}

// Variables defines the variables which can be configured in the Cluster topology and are then used in patches.
func (o ClusterClassSpecPtrOutput) Variables() ClusterClassSpecVariablesArrayOutput {
	return o.ApplyT(func(v *ClusterClassSpec) []ClusterClassSpecVariables {
		if v == nil {
			return nil
		}
		return v.Variables
	}).(ClusterClassSpecVariablesArrayOutput)
}

// Workers describes the worker nodes for the cluster. It is a collection of node types which can be used to create the worker nodes of the cluster.
func (o ClusterClassSpecPtrOutput) Workers() ClusterClassSpecWorkersPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpec) *ClusterClassSpecWorkers {
		if v == nil {
			return nil
		}
		return v.Workers
	}).(ClusterClassSpecWorkersPtrOutput)
}

// ControlPlane is a reference to a local struct that holds the details for provisioning the Control Plane for the Cluster.
type ClusterClassSpecControlPlane struct {
	// MachineHealthCheck defines a MachineHealthCheck for this ControlPlaneClass. This field is supported if and only if the ControlPlane provider template referenced above is Machine based and supports setting replicas.
	MachineHealthCheck *ClusterClassSpecControlPlaneMachineHealthCheck `pulumi:"machineHealthCheck"`
	// MachineInfrastructure defines the metadata and infrastructure information for control plane machines.
	//  This field is supported if and only if the control plane provider template referenced above is Machine based and supports setting replicas.
	MachineInfrastructure *ClusterClassSpecControlPlaneMachineInfrastructure `pulumi:"machineInfrastructure"`
	// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the topology.
	//  This field is supported if and only if the control plane provider template referenced is Machine based.
	Metadata *ClusterClassSpecControlPlaneMetadata `pulumi:"metadata"`
	// NamingStrategy allows changing the naming pattern used when creating the control plane provider object.
	NamingStrategy *ClusterClassSpecControlPlaneNamingStrategy `pulumi:"namingStrategy"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds. NOTE: This value can be overridden while defining a Cluster.Topology.
	NodeDeletionTimeout *string `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout` NOTE: This value can be overridden while defining a Cluster.Topology.
	NodeDrainTimeout *string `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations. NOTE: This value can be overridden while defining a Cluster.Topology.
	NodeVolumeDetachTimeout *string `pulumi:"nodeVolumeDetachTimeout"`
	// Ref is a required reference to a custom resource offered by a provider.
	Ref ClusterClassSpecControlPlaneRef `pulumi:"ref"`
}

// ClusterClassSpecControlPlaneInput is an input type that accepts ClusterClassSpecControlPlaneArgs and ClusterClassSpecControlPlaneOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneInput` via:
//
//	ClusterClassSpecControlPlaneArgs{...}
type ClusterClassSpecControlPlaneInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneOutput() ClusterClassSpecControlPlaneOutput
	ToClusterClassSpecControlPlaneOutputWithContext(context.Context) ClusterClassSpecControlPlaneOutput
}

// ControlPlane is a reference to a local struct that holds the details for provisioning the Control Plane for the Cluster.
type ClusterClassSpecControlPlaneArgs struct {
	// MachineHealthCheck defines a MachineHealthCheck for this ControlPlaneClass. This field is supported if and only if the ControlPlane provider template referenced above is Machine based and supports setting replicas.
	MachineHealthCheck ClusterClassSpecControlPlaneMachineHealthCheckPtrInput `pulumi:"machineHealthCheck"`
	// MachineInfrastructure defines the metadata and infrastructure information for control plane machines.
	//  This field is supported if and only if the control plane provider template referenced above is Machine based and supports setting replicas.
	MachineInfrastructure ClusterClassSpecControlPlaneMachineInfrastructurePtrInput `pulumi:"machineInfrastructure"`
	// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the topology.
	//  This field is supported if and only if the control plane provider template referenced is Machine based.
	Metadata ClusterClassSpecControlPlaneMetadataPtrInput `pulumi:"metadata"`
	// NamingStrategy allows changing the naming pattern used when creating the control plane provider object.
	NamingStrategy ClusterClassSpecControlPlaneNamingStrategyPtrInput `pulumi:"namingStrategy"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds. NOTE: This value can be overridden while defining a Cluster.Topology.
	NodeDeletionTimeout pulumi.StringPtrInput `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout` NOTE: This value can be overridden while defining a Cluster.Topology.
	NodeDrainTimeout pulumi.StringPtrInput `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations. NOTE: This value can be overridden while defining a Cluster.Topology.
	NodeVolumeDetachTimeout pulumi.StringPtrInput `pulumi:"nodeVolumeDetachTimeout"`
	// Ref is a required reference to a custom resource offered by a provider.
	Ref ClusterClassSpecControlPlaneRefInput `pulumi:"ref"`
}

func (ClusterClassSpecControlPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlane)(nil)).Elem()
}

func (i ClusterClassSpecControlPlaneArgs) ToClusterClassSpecControlPlaneOutput() ClusterClassSpecControlPlaneOutput {
	return i.ToClusterClassSpecControlPlaneOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneArgs) ToClusterClassSpecControlPlaneOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneOutput)
}

func (i ClusterClassSpecControlPlaneArgs) ToClusterClassSpecControlPlanePtrOutput() ClusterClassSpecControlPlanePtrOutput {
	return i.ToClusterClassSpecControlPlanePtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneArgs) ToClusterClassSpecControlPlanePtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneOutput).ToClusterClassSpecControlPlanePtrOutputWithContext(ctx)
}

// ClusterClassSpecControlPlanePtrInput is an input type that accepts ClusterClassSpecControlPlaneArgs, ClusterClassSpecControlPlanePtr and ClusterClassSpecControlPlanePtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlanePtrInput` via:
//
//	        ClusterClassSpecControlPlaneArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecControlPlanePtrInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlanePtrOutput() ClusterClassSpecControlPlanePtrOutput
	ToClusterClassSpecControlPlanePtrOutputWithContext(context.Context) ClusterClassSpecControlPlanePtrOutput
}

type clusterClassSpecControlPlanePtrType ClusterClassSpecControlPlaneArgs

func ClusterClassSpecControlPlanePtr(v *ClusterClassSpecControlPlaneArgs) ClusterClassSpecControlPlanePtrInput {
	return (*clusterClassSpecControlPlanePtrType)(v)
}

func (*clusterClassSpecControlPlanePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlane)(nil)).Elem()
}

func (i *clusterClassSpecControlPlanePtrType) ToClusterClassSpecControlPlanePtrOutput() ClusterClassSpecControlPlanePtrOutput {
	return i.ToClusterClassSpecControlPlanePtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecControlPlanePtrType) ToClusterClassSpecControlPlanePtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlanePtrOutput)
}

// ControlPlane is a reference to a local struct that holds the details for provisioning the Control Plane for the Cluster.
type ClusterClassSpecControlPlaneOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlane)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneOutput) ToClusterClassSpecControlPlaneOutput() ClusterClassSpecControlPlaneOutput {
	return o
}

func (o ClusterClassSpecControlPlaneOutput) ToClusterClassSpecControlPlaneOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneOutput {
	return o
}

func (o ClusterClassSpecControlPlaneOutput) ToClusterClassSpecControlPlanePtrOutput() ClusterClassSpecControlPlanePtrOutput {
	return o.ToClusterClassSpecControlPlanePtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecControlPlaneOutput) ToClusterClassSpecControlPlanePtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlanePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecControlPlane) *ClusterClassSpecControlPlane {
		return &v
	}).(ClusterClassSpecControlPlanePtrOutput)
}

// MachineHealthCheck defines a MachineHealthCheck for this ControlPlaneClass. This field is supported if and only if the ControlPlane provider template referenced above is Machine based and supports setting replicas.
func (o ClusterClassSpecControlPlaneOutput) MachineHealthCheck() ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlane) *ClusterClassSpecControlPlaneMachineHealthCheck {
		return v.MachineHealthCheck
	}).(ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput)
}

// MachineInfrastructure defines the metadata and infrastructure information for control plane machines.
//
//	This field is supported if and only if the control plane provider template referenced above is Machine based and supports setting replicas.
func (o ClusterClassSpecControlPlaneOutput) MachineInfrastructure() ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlane) *ClusterClassSpecControlPlaneMachineInfrastructure {
		return v.MachineInfrastructure
	}).(ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput)
}

// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the topology.
//
//	This field is supported if and only if the control plane provider template referenced is Machine based.
func (o ClusterClassSpecControlPlaneOutput) Metadata() ClusterClassSpecControlPlaneMetadataPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlane) *ClusterClassSpecControlPlaneMetadata { return v.Metadata }).(ClusterClassSpecControlPlaneMetadataPtrOutput)
}

// NamingStrategy allows changing the naming pattern used when creating the control plane provider object.
func (o ClusterClassSpecControlPlaneOutput) NamingStrategy() ClusterClassSpecControlPlaneNamingStrategyPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlane) *ClusterClassSpecControlPlaneNamingStrategy {
		return v.NamingStrategy
	}).(ClusterClassSpecControlPlaneNamingStrategyPtrOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds. NOTE: This value can be overridden while defining a Cluster.Topology.
func (o ClusterClassSpecControlPlaneOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlane) *string { return v.NodeDeletionTimeout }).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout` NOTE: This value can be overridden while defining a Cluster.Topology.
func (o ClusterClassSpecControlPlaneOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlane) *string { return v.NodeDrainTimeout }).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations. NOTE: This value can be overridden while defining a Cluster.Topology.
func (o ClusterClassSpecControlPlaneOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlane) *string { return v.NodeVolumeDetachTimeout }).(pulumi.StringPtrOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
func (o ClusterClassSpecControlPlaneOutput) Ref() ClusterClassSpecControlPlaneRefOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlane) ClusterClassSpecControlPlaneRef { return v.Ref }).(ClusterClassSpecControlPlaneRefOutput)
}

type ClusterClassSpecControlPlanePtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlanePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlane)(nil)).Elem()
}

func (o ClusterClassSpecControlPlanePtrOutput) ToClusterClassSpecControlPlanePtrOutput() ClusterClassSpecControlPlanePtrOutput {
	return o
}

func (o ClusterClassSpecControlPlanePtrOutput) ToClusterClassSpecControlPlanePtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlanePtrOutput {
	return o
}

func (o ClusterClassSpecControlPlanePtrOutput) Elem() ClusterClassSpecControlPlaneOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlane) ClusterClassSpecControlPlane {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecControlPlane
		return ret
	}).(ClusterClassSpecControlPlaneOutput)
}

// MachineHealthCheck defines a MachineHealthCheck for this ControlPlaneClass. This field is supported if and only if the ControlPlane provider template referenced above is Machine based and supports setting replicas.
func (o ClusterClassSpecControlPlanePtrOutput) MachineHealthCheck() ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlane) *ClusterClassSpecControlPlaneMachineHealthCheck {
		if v == nil {
			return nil
		}
		return v.MachineHealthCheck
	}).(ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput)
}

// MachineInfrastructure defines the metadata and infrastructure information for control plane machines.
//
//	This field is supported if and only if the control plane provider template referenced above is Machine based and supports setting replicas.
func (o ClusterClassSpecControlPlanePtrOutput) MachineInfrastructure() ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlane) *ClusterClassSpecControlPlaneMachineInfrastructure {
		if v == nil {
			return nil
		}
		return v.MachineInfrastructure
	}).(ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput)
}

// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the topology.
//
//	This field is supported if and only if the control plane provider template referenced is Machine based.
func (o ClusterClassSpecControlPlanePtrOutput) Metadata() ClusterClassSpecControlPlaneMetadataPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlane) *ClusterClassSpecControlPlaneMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(ClusterClassSpecControlPlaneMetadataPtrOutput)
}

// NamingStrategy allows changing the naming pattern used when creating the control plane provider object.
func (o ClusterClassSpecControlPlanePtrOutput) NamingStrategy() ClusterClassSpecControlPlaneNamingStrategyPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlane) *ClusterClassSpecControlPlaneNamingStrategy {
		if v == nil {
			return nil
		}
		return v.NamingStrategy
	}).(ClusterClassSpecControlPlaneNamingStrategyPtrOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds. NOTE: This value can be overridden while defining a Cluster.Topology.
func (o ClusterClassSpecControlPlanePtrOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlane) *string {
		if v == nil {
			return nil
		}
		return v.NodeDeletionTimeout
	}).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout` NOTE: This value can be overridden while defining a Cluster.Topology.
func (o ClusterClassSpecControlPlanePtrOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlane) *string {
		if v == nil {
			return nil
		}
		return v.NodeDrainTimeout
	}).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations. NOTE: This value can be overridden while defining a Cluster.Topology.
func (o ClusterClassSpecControlPlanePtrOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlane) *string {
		if v == nil {
			return nil
		}
		return v.NodeVolumeDetachTimeout
	}).(pulumi.StringPtrOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
func (o ClusterClassSpecControlPlanePtrOutput) Ref() ClusterClassSpecControlPlaneRefPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlane) *ClusterClassSpecControlPlaneRef {
		if v == nil {
			return nil
		}
		return &v.Ref
	}).(ClusterClassSpecControlPlaneRefPtrOutput)
}

// MachineHealthCheck defines a MachineHealthCheck for this ControlPlaneClass. This field is supported if and only if the ControlPlane provider template referenced above is Machine based and supports setting replicas.
type ClusterClassSpecControlPlaneMachineHealthCheck struct {
	// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
	MaxUnhealthy interface{} `pulumi:"maxUnhealthy"`
	// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
	NodeStartupTimeout *string `pulumi:"nodeStartupTimeout"`
	// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
	//  This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
	RemediationTemplate *ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate `pulumi:"remediationTemplate"`
	// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
	UnhealthyConditions []ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditions `pulumi:"unhealthyConditions"`
	// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
	UnhealthyRange *string `pulumi:"unhealthyRange"`
}

// ClusterClassSpecControlPlaneMachineHealthCheckInput is an input type that accepts ClusterClassSpecControlPlaneMachineHealthCheckArgs and ClusterClassSpecControlPlaneMachineHealthCheckOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneMachineHealthCheckInput` via:
//
//	ClusterClassSpecControlPlaneMachineHealthCheckArgs{...}
type ClusterClassSpecControlPlaneMachineHealthCheckInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneMachineHealthCheckOutput() ClusterClassSpecControlPlaneMachineHealthCheckOutput
	ToClusterClassSpecControlPlaneMachineHealthCheckOutputWithContext(context.Context) ClusterClassSpecControlPlaneMachineHealthCheckOutput
}

// MachineHealthCheck defines a MachineHealthCheck for this ControlPlaneClass. This field is supported if and only if the ControlPlane provider template referenced above is Machine based and supports setting replicas.
type ClusterClassSpecControlPlaneMachineHealthCheckArgs struct {
	// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
	MaxUnhealthy pulumi.Input `pulumi:"maxUnhealthy"`
	// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
	NodeStartupTimeout pulumi.StringPtrInput `pulumi:"nodeStartupTimeout"`
	// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
	//  This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
	RemediationTemplate ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrInput `pulumi:"remediationTemplate"`
	// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
	UnhealthyConditions ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayInput `pulumi:"unhealthyConditions"`
	// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
	UnhealthyRange pulumi.StringPtrInput `pulumi:"unhealthyRange"`
}

func (ClusterClassSpecControlPlaneMachineHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneMachineHealthCheck)(nil)).Elem()
}

func (i ClusterClassSpecControlPlaneMachineHealthCheckArgs) ToClusterClassSpecControlPlaneMachineHealthCheckOutput() ClusterClassSpecControlPlaneMachineHealthCheckOutput {
	return i.ToClusterClassSpecControlPlaneMachineHealthCheckOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneMachineHealthCheckArgs) ToClusterClassSpecControlPlaneMachineHealthCheckOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineHealthCheckOutput)
}

func (i ClusterClassSpecControlPlaneMachineHealthCheckArgs) ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutput() ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput {
	return i.ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneMachineHealthCheckArgs) ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineHealthCheckOutput).ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutputWithContext(ctx)
}

// ClusterClassSpecControlPlaneMachineHealthCheckPtrInput is an input type that accepts ClusterClassSpecControlPlaneMachineHealthCheckArgs, ClusterClassSpecControlPlaneMachineHealthCheckPtr and ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneMachineHealthCheckPtrInput` via:
//
//	        ClusterClassSpecControlPlaneMachineHealthCheckArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecControlPlaneMachineHealthCheckPtrInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutput() ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput
	ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutputWithContext(context.Context) ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput
}

type clusterClassSpecControlPlaneMachineHealthCheckPtrType ClusterClassSpecControlPlaneMachineHealthCheckArgs

func ClusterClassSpecControlPlaneMachineHealthCheckPtr(v *ClusterClassSpecControlPlaneMachineHealthCheckArgs) ClusterClassSpecControlPlaneMachineHealthCheckPtrInput {
	return (*clusterClassSpecControlPlaneMachineHealthCheckPtrType)(v)
}

func (*clusterClassSpecControlPlaneMachineHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneMachineHealthCheck)(nil)).Elem()
}

func (i *clusterClassSpecControlPlaneMachineHealthCheckPtrType) ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutput() ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput {
	return i.ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecControlPlaneMachineHealthCheckPtrType) ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput)
}

// MachineHealthCheck defines a MachineHealthCheck for this ControlPlaneClass. This field is supported if and only if the ControlPlane provider template referenced above is Machine based and supports setting replicas.
type ClusterClassSpecControlPlaneMachineHealthCheckOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneMachineHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneMachineHealthCheck)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckOutput) ToClusterClassSpecControlPlaneMachineHealthCheckOutput() ClusterClassSpecControlPlaneMachineHealthCheckOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckOutput) ToClusterClassSpecControlPlaneMachineHealthCheckOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckOutput) ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutput() ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput {
	return o.ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckOutput) ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecControlPlaneMachineHealthCheck) *ClusterClassSpecControlPlaneMachineHealthCheck {
		return &v
	}).(ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput)
}

// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
func (o ClusterClassSpecControlPlaneMachineHealthCheckOutput) MaxUnhealthy() pulumi.AnyOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheck) interface{} { return v.MaxUnhealthy }).(pulumi.AnyOutput)
}

// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
func (o ClusterClassSpecControlPlaneMachineHealthCheckOutput) NodeStartupTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheck) *string { return v.NodeStartupTimeout }).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
func (o ClusterClassSpecControlPlaneMachineHealthCheckOutput) RemediationTemplate() ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheck) *ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate {
		return v.RemediationTemplate
	}).(ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput)
}

// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
func (o ClusterClassSpecControlPlaneMachineHealthCheckOutput) UnhealthyConditions() ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheck) []ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditions {
		return v.UnhealthyConditions
	}).(ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput)
}

// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
func (o ClusterClassSpecControlPlaneMachineHealthCheckOutput) UnhealthyRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheck) *string { return v.UnhealthyRange }).(pulumi.StringPtrOutput)
}

type ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneMachineHealthCheck)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput) ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutput() ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput) ToClusterClassSpecControlPlaneMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput) Elem() ClusterClassSpecControlPlaneMachineHealthCheckOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheck) ClusterClassSpecControlPlaneMachineHealthCheck {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecControlPlaneMachineHealthCheck
		return ret
	}).(ClusterClassSpecControlPlaneMachineHealthCheckOutput)
}

// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
func (o ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput) MaxUnhealthy() pulumi.AnyOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheck) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnhealthy
	}).(pulumi.AnyOutput)
}

// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
func (o ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput) NodeStartupTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.NodeStartupTimeout
	}).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
func (o ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput) RemediationTemplate() ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheck) *ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate {
		if v == nil {
			return nil
		}
		return v.RemediationTemplate
	}).(ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput)
}

// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
func (o ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput) UnhealthyConditions() ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheck) []ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditions {
		if v == nil {
			return nil
		}
		return v.UnhealthyConditions
	}).(ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput)
}

// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
func (o ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput) UnhealthyRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.UnhealthyRange
	}).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateInput is an input type that accepts ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs and ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateInput` via:
//
//	ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs{...}
type ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput() ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput
	ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutputWithContext(context.Context) ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (i ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs) ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput() ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput {
	return i.ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs) ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput)
}

func (i ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs) ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput() ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return i.ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs) ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput).ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx)
}

// ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrInput is an input type that accepts ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs, ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtr and ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrInput` via:
//
//	        ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput() ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput
	ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Context) ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput
}

type clusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrType ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs

func ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtr(v *ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs) ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrInput {
	return (*clusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrType)(v)
}

func (*clusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (i *clusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrType) ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput() ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return i.ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrType) ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput) ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput() ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput) ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput) ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput() ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput) ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate {
		return &v
	}).(ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput)
}

// API version of the referent.
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string {
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput() ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) ToClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) Elem() ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate
		return ret
	}).(ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput)
}

// API version of the referent.
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditions struct {
	Status  string `pulumi:"status"`
	Timeout string `pulumi:"timeout"`
	Type    string `pulumi:"type"`
}

// ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsInput is an input type that accepts ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArgs and ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsInput` via:
//
//	ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArgs{...}
type ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput() ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput
	ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutputWithContext(context.Context) ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArgs struct {
	Status  pulumi.StringInput `pulumi:"status"`
	Timeout pulumi.StringInput `pulumi:"timeout"`
	Type    pulumi.StringInput `pulumi:"type"`
}

func (ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (i ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArgs) ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput() ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput {
	return i.ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArgs) ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput)
}

// ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayInput is an input type that accepts ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArray and ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayInput` via:
//
//	ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArray{ ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArgs{...} }
type ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput() ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput
	ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(context.Context) ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput
}

type ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArray []ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsInput

func (ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (i ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArray) ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput() ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput {
	return i.ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArray) ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput)
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput) ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput() ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput) ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditions) string { return v.Status }).(pulumi.StringOutput)
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditions) string { return v.Timeout }).(pulumi.StringOutput)
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput) ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput() ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput) ToClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput) Index(i pulumi.IntInput) ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditions {
		return vs[0].([]ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditions)[vs[1].(int)]
	}).(ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput)
}

// MachineInfrastructure defines the metadata and infrastructure information for control plane machines.
//
//	This field is supported if and only if the control plane provider template referenced above is Machine based and supports setting replicas.
type ClusterClassSpecControlPlaneMachineInfrastructure struct {
	// Ref is a required reference to a custom resource offered by a provider.
	Ref ClusterClassSpecControlPlaneMachineInfrastructureRef `pulumi:"ref"`
}

// ClusterClassSpecControlPlaneMachineInfrastructureInput is an input type that accepts ClusterClassSpecControlPlaneMachineInfrastructureArgs and ClusterClassSpecControlPlaneMachineInfrastructureOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneMachineInfrastructureInput` via:
//
//	ClusterClassSpecControlPlaneMachineInfrastructureArgs{...}
type ClusterClassSpecControlPlaneMachineInfrastructureInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneMachineInfrastructureOutput() ClusterClassSpecControlPlaneMachineInfrastructureOutput
	ToClusterClassSpecControlPlaneMachineInfrastructureOutputWithContext(context.Context) ClusterClassSpecControlPlaneMachineInfrastructureOutput
}

// MachineInfrastructure defines the metadata and infrastructure information for control plane machines.
//
//	This field is supported if and only if the control plane provider template referenced above is Machine based and supports setting replicas.
type ClusterClassSpecControlPlaneMachineInfrastructureArgs struct {
	// Ref is a required reference to a custom resource offered by a provider.
	Ref ClusterClassSpecControlPlaneMachineInfrastructureRefInput `pulumi:"ref"`
}

func (ClusterClassSpecControlPlaneMachineInfrastructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneMachineInfrastructure)(nil)).Elem()
}

func (i ClusterClassSpecControlPlaneMachineInfrastructureArgs) ToClusterClassSpecControlPlaneMachineInfrastructureOutput() ClusterClassSpecControlPlaneMachineInfrastructureOutput {
	return i.ToClusterClassSpecControlPlaneMachineInfrastructureOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneMachineInfrastructureArgs) ToClusterClassSpecControlPlaneMachineInfrastructureOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineInfrastructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineInfrastructureOutput)
}

func (i ClusterClassSpecControlPlaneMachineInfrastructureArgs) ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutput() ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput {
	return i.ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneMachineInfrastructureArgs) ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineInfrastructureOutput).ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutputWithContext(ctx)
}

// ClusterClassSpecControlPlaneMachineInfrastructurePtrInput is an input type that accepts ClusterClassSpecControlPlaneMachineInfrastructureArgs, ClusterClassSpecControlPlaneMachineInfrastructurePtr and ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneMachineInfrastructurePtrInput` via:
//
//	        ClusterClassSpecControlPlaneMachineInfrastructureArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecControlPlaneMachineInfrastructurePtrInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutput() ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput
	ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutputWithContext(context.Context) ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput
}

type clusterClassSpecControlPlaneMachineInfrastructurePtrType ClusterClassSpecControlPlaneMachineInfrastructureArgs

func ClusterClassSpecControlPlaneMachineInfrastructurePtr(v *ClusterClassSpecControlPlaneMachineInfrastructureArgs) ClusterClassSpecControlPlaneMachineInfrastructurePtrInput {
	return (*clusterClassSpecControlPlaneMachineInfrastructurePtrType)(v)
}

func (*clusterClassSpecControlPlaneMachineInfrastructurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneMachineInfrastructure)(nil)).Elem()
}

func (i *clusterClassSpecControlPlaneMachineInfrastructurePtrType) ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutput() ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput {
	return i.ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecControlPlaneMachineInfrastructurePtrType) ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput)
}

// MachineInfrastructure defines the metadata and infrastructure information for control plane machines.
//
//	This field is supported if and only if the control plane provider template referenced above is Machine based and supports setting replicas.
type ClusterClassSpecControlPlaneMachineInfrastructureOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneMachineInfrastructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneMachineInfrastructure)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneMachineInfrastructureOutput) ToClusterClassSpecControlPlaneMachineInfrastructureOutput() ClusterClassSpecControlPlaneMachineInfrastructureOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineInfrastructureOutput) ToClusterClassSpecControlPlaneMachineInfrastructureOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineInfrastructureOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineInfrastructureOutput) ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutput() ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput {
	return o.ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecControlPlaneMachineInfrastructureOutput) ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecControlPlaneMachineInfrastructure) *ClusterClassSpecControlPlaneMachineInfrastructure {
		return &v
	}).(ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
func (o ClusterClassSpecControlPlaneMachineInfrastructureOutput) Ref() ClusterClassSpecControlPlaneMachineInfrastructureRefOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineInfrastructure) ClusterClassSpecControlPlaneMachineInfrastructureRef {
		return v.Ref
	}).(ClusterClassSpecControlPlaneMachineInfrastructureRefOutput)
}

type ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneMachineInfrastructure)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput) ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutput() ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput) ToClusterClassSpecControlPlaneMachineInfrastructurePtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput) Elem() ClusterClassSpecControlPlaneMachineInfrastructureOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineInfrastructure) ClusterClassSpecControlPlaneMachineInfrastructure {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecControlPlaneMachineInfrastructure
		return ret
	}).(ClusterClassSpecControlPlaneMachineInfrastructureOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
func (o ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput) Ref() ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineInfrastructure) *ClusterClassSpecControlPlaneMachineInfrastructureRef {
		if v == nil {
			return nil
		}
		return &v.Ref
	}).(ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecControlPlaneMachineInfrastructureRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ClusterClassSpecControlPlaneMachineInfrastructureRefInput is an input type that accepts ClusterClassSpecControlPlaneMachineInfrastructureRefArgs and ClusterClassSpecControlPlaneMachineInfrastructureRefOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneMachineInfrastructureRefInput` via:
//
//	ClusterClassSpecControlPlaneMachineInfrastructureRefArgs{...}
type ClusterClassSpecControlPlaneMachineInfrastructureRefInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneMachineInfrastructureRefOutput() ClusterClassSpecControlPlaneMachineInfrastructureRefOutput
	ToClusterClassSpecControlPlaneMachineInfrastructureRefOutputWithContext(context.Context) ClusterClassSpecControlPlaneMachineInfrastructureRefOutput
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecControlPlaneMachineInfrastructureRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterClassSpecControlPlaneMachineInfrastructureRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneMachineInfrastructureRef)(nil)).Elem()
}

func (i ClusterClassSpecControlPlaneMachineInfrastructureRefArgs) ToClusterClassSpecControlPlaneMachineInfrastructureRefOutput() ClusterClassSpecControlPlaneMachineInfrastructureRefOutput {
	return i.ToClusterClassSpecControlPlaneMachineInfrastructureRefOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneMachineInfrastructureRefArgs) ToClusterClassSpecControlPlaneMachineInfrastructureRefOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineInfrastructureRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineInfrastructureRefOutput)
}

func (i ClusterClassSpecControlPlaneMachineInfrastructureRefArgs) ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput() ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput {
	return i.ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneMachineInfrastructureRefArgs) ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineInfrastructureRefOutput).ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutputWithContext(ctx)
}

// ClusterClassSpecControlPlaneMachineInfrastructureRefPtrInput is an input type that accepts ClusterClassSpecControlPlaneMachineInfrastructureRefArgs, ClusterClassSpecControlPlaneMachineInfrastructureRefPtr and ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneMachineInfrastructureRefPtrInput` via:
//
//	        ClusterClassSpecControlPlaneMachineInfrastructureRefArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecControlPlaneMachineInfrastructureRefPtrInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput() ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput
	ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutputWithContext(context.Context) ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput
}

type clusterClassSpecControlPlaneMachineInfrastructureRefPtrType ClusterClassSpecControlPlaneMachineInfrastructureRefArgs

func ClusterClassSpecControlPlaneMachineInfrastructureRefPtr(v *ClusterClassSpecControlPlaneMachineInfrastructureRefArgs) ClusterClassSpecControlPlaneMachineInfrastructureRefPtrInput {
	return (*clusterClassSpecControlPlaneMachineInfrastructureRefPtrType)(v)
}

func (*clusterClassSpecControlPlaneMachineInfrastructureRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneMachineInfrastructureRef)(nil)).Elem()
}

func (i *clusterClassSpecControlPlaneMachineInfrastructureRefPtrType) ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput() ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput {
	return i.ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecControlPlaneMachineInfrastructureRefPtrType) ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecControlPlaneMachineInfrastructureRefOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneMachineInfrastructureRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneMachineInfrastructureRef)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneMachineInfrastructureRefOutput) ToClusterClassSpecControlPlaneMachineInfrastructureRefOutput() ClusterClassSpecControlPlaneMachineInfrastructureRefOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineInfrastructureRefOutput) ToClusterClassSpecControlPlaneMachineInfrastructureRefOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineInfrastructureRefOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineInfrastructureRefOutput) ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput() ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput {
	return o.ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecControlPlaneMachineInfrastructureRefOutput) ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecControlPlaneMachineInfrastructureRef) *ClusterClassSpecControlPlaneMachineInfrastructureRef {
		return &v
	}).(ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput)
}

// API version of the referent.
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineInfrastructureRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineInfrastructureRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineInfrastructureRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineInfrastructureRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineInfrastructureRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineInfrastructureRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMachineInfrastructureRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneMachineInfrastructureRef)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput) ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput() ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput) ToClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput) Elem() ClusterClassSpecControlPlaneMachineInfrastructureRefOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineInfrastructureRef) ClusterClassSpecControlPlaneMachineInfrastructureRef {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecControlPlaneMachineInfrastructureRef
		return ret
	}).(ClusterClassSpecControlPlaneMachineInfrastructureRefOutput)
}

// API version of the referent.
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMachineInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the topology.
//
//	This field is supported if and only if the control plane provider template referenced is Machine based.
type ClusterClassSpecControlPlaneMetadata struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations map[string]string `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels map[string]string `pulumi:"labels"`
}

// ClusterClassSpecControlPlaneMetadataInput is an input type that accepts ClusterClassSpecControlPlaneMetadataArgs and ClusterClassSpecControlPlaneMetadataOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneMetadataInput` via:
//
//	ClusterClassSpecControlPlaneMetadataArgs{...}
type ClusterClassSpecControlPlaneMetadataInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneMetadataOutput() ClusterClassSpecControlPlaneMetadataOutput
	ToClusterClassSpecControlPlaneMetadataOutputWithContext(context.Context) ClusterClassSpecControlPlaneMetadataOutput
}

// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the topology.
//
//	This field is supported if and only if the control plane provider template referenced is Machine based.
type ClusterClassSpecControlPlaneMetadataArgs struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (ClusterClassSpecControlPlaneMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneMetadata)(nil)).Elem()
}

func (i ClusterClassSpecControlPlaneMetadataArgs) ToClusterClassSpecControlPlaneMetadataOutput() ClusterClassSpecControlPlaneMetadataOutput {
	return i.ToClusterClassSpecControlPlaneMetadataOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneMetadataArgs) ToClusterClassSpecControlPlaneMetadataOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMetadataOutput)
}

func (i ClusterClassSpecControlPlaneMetadataArgs) ToClusterClassSpecControlPlaneMetadataPtrOutput() ClusterClassSpecControlPlaneMetadataPtrOutput {
	return i.ToClusterClassSpecControlPlaneMetadataPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneMetadataArgs) ToClusterClassSpecControlPlaneMetadataPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMetadataOutput).ToClusterClassSpecControlPlaneMetadataPtrOutputWithContext(ctx)
}

// ClusterClassSpecControlPlaneMetadataPtrInput is an input type that accepts ClusterClassSpecControlPlaneMetadataArgs, ClusterClassSpecControlPlaneMetadataPtr and ClusterClassSpecControlPlaneMetadataPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneMetadataPtrInput` via:
//
//	        ClusterClassSpecControlPlaneMetadataArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecControlPlaneMetadataPtrInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneMetadataPtrOutput() ClusterClassSpecControlPlaneMetadataPtrOutput
	ToClusterClassSpecControlPlaneMetadataPtrOutputWithContext(context.Context) ClusterClassSpecControlPlaneMetadataPtrOutput
}

type clusterClassSpecControlPlaneMetadataPtrType ClusterClassSpecControlPlaneMetadataArgs

func ClusterClassSpecControlPlaneMetadataPtr(v *ClusterClassSpecControlPlaneMetadataArgs) ClusterClassSpecControlPlaneMetadataPtrInput {
	return (*clusterClassSpecControlPlaneMetadataPtrType)(v)
}

func (*clusterClassSpecControlPlaneMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneMetadata)(nil)).Elem()
}

func (i *clusterClassSpecControlPlaneMetadataPtrType) ToClusterClassSpecControlPlaneMetadataPtrOutput() ClusterClassSpecControlPlaneMetadataPtrOutput {
	return i.ToClusterClassSpecControlPlaneMetadataPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecControlPlaneMetadataPtrType) ToClusterClassSpecControlPlaneMetadataPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneMetadataPtrOutput)
}

// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the topology.
//
//	This field is supported if and only if the control plane provider template referenced is Machine based.
type ClusterClassSpecControlPlaneMetadataOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneMetadata)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneMetadataOutput) ToClusterClassSpecControlPlaneMetadataOutput() ClusterClassSpecControlPlaneMetadataOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMetadataOutput) ToClusterClassSpecControlPlaneMetadataOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMetadataOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMetadataOutput) ToClusterClassSpecControlPlaneMetadataPtrOutput() ClusterClassSpecControlPlaneMetadataPtrOutput {
	return o.ToClusterClassSpecControlPlaneMetadataPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecControlPlaneMetadataOutput) ToClusterClassSpecControlPlaneMetadataPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecControlPlaneMetadata) *ClusterClassSpecControlPlaneMetadata {
		return &v
	}).(ClusterClassSpecControlPlaneMetadataPtrOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o ClusterClassSpecControlPlaneMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o ClusterClassSpecControlPlaneMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type ClusterClassSpecControlPlaneMetadataPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneMetadata)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneMetadataPtrOutput) ToClusterClassSpecControlPlaneMetadataPtrOutput() ClusterClassSpecControlPlaneMetadataPtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMetadataPtrOutput) ToClusterClassSpecControlPlaneMetadataPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneMetadataPtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneMetadataPtrOutput) Elem() ClusterClassSpecControlPlaneMetadataOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMetadata) ClusterClassSpecControlPlaneMetadata {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecControlPlaneMetadata
		return ret
	}).(ClusterClassSpecControlPlaneMetadataOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o ClusterClassSpecControlPlaneMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o ClusterClassSpecControlPlaneMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
type ClusterClassSpecControlPlaneMetadataAnnotations struct {
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
type ClusterClassSpecControlPlaneMetadataLabels struct {
}

// NamingStrategy allows changing the naming pattern used when creating the control plane provider object.
type ClusterClassSpecControlPlaneNamingStrategy struct {
	// Template defines the template to use for generating the name of the ControlPlane object. If not defined, it will fallback to `{{ .cluster.name }}-{{ .random }}`. If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will get concatenated with a random suffix of length 5. The templating mechanism provides the following arguments: * `.cluster.name`: The name of the cluster object. * `.random`: A random alphanumeric string, without vowels, of length 5.
	Template *string `pulumi:"template"`
}

// ClusterClassSpecControlPlaneNamingStrategyInput is an input type that accepts ClusterClassSpecControlPlaneNamingStrategyArgs and ClusterClassSpecControlPlaneNamingStrategyOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneNamingStrategyInput` via:
//
//	ClusterClassSpecControlPlaneNamingStrategyArgs{...}
type ClusterClassSpecControlPlaneNamingStrategyInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneNamingStrategyOutput() ClusterClassSpecControlPlaneNamingStrategyOutput
	ToClusterClassSpecControlPlaneNamingStrategyOutputWithContext(context.Context) ClusterClassSpecControlPlaneNamingStrategyOutput
}

// NamingStrategy allows changing the naming pattern used when creating the control plane provider object.
type ClusterClassSpecControlPlaneNamingStrategyArgs struct {
	// Template defines the template to use for generating the name of the ControlPlane object. If not defined, it will fallback to `{{ .cluster.name }}-{{ .random }}`. If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will get concatenated with a random suffix of length 5. The templating mechanism provides the following arguments: * `.cluster.name`: The name of the cluster object. * `.random`: A random alphanumeric string, without vowels, of length 5.
	Template pulumi.StringPtrInput `pulumi:"template"`
}

func (ClusterClassSpecControlPlaneNamingStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneNamingStrategy)(nil)).Elem()
}

func (i ClusterClassSpecControlPlaneNamingStrategyArgs) ToClusterClassSpecControlPlaneNamingStrategyOutput() ClusterClassSpecControlPlaneNamingStrategyOutput {
	return i.ToClusterClassSpecControlPlaneNamingStrategyOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneNamingStrategyArgs) ToClusterClassSpecControlPlaneNamingStrategyOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneNamingStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneNamingStrategyOutput)
}

func (i ClusterClassSpecControlPlaneNamingStrategyArgs) ToClusterClassSpecControlPlaneNamingStrategyPtrOutput() ClusterClassSpecControlPlaneNamingStrategyPtrOutput {
	return i.ToClusterClassSpecControlPlaneNamingStrategyPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneNamingStrategyArgs) ToClusterClassSpecControlPlaneNamingStrategyPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneNamingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneNamingStrategyOutput).ToClusterClassSpecControlPlaneNamingStrategyPtrOutputWithContext(ctx)
}

// ClusterClassSpecControlPlaneNamingStrategyPtrInput is an input type that accepts ClusterClassSpecControlPlaneNamingStrategyArgs, ClusterClassSpecControlPlaneNamingStrategyPtr and ClusterClassSpecControlPlaneNamingStrategyPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneNamingStrategyPtrInput` via:
//
//	        ClusterClassSpecControlPlaneNamingStrategyArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecControlPlaneNamingStrategyPtrInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneNamingStrategyPtrOutput() ClusterClassSpecControlPlaneNamingStrategyPtrOutput
	ToClusterClassSpecControlPlaneNamingStrategyPtrOutputWithContext(context.Context) ClusterClassSpecControlPlaneNamingStrategyPtrOutput
}

type clusterClassSpecControlPlaneNamingStrategyPtrType ClusterClassSpecControlPlaneNamingStrategyArgs

func ClusterClassSpecControlPlaneNamingStrategyPtr(v *ClusterClassSpecControlPlaneNamingStrategyArgs) ClusterClassSpecControlPlaneNamingStrategyPtrInput {
	return (*clusterClassSpecControlPlaneNamingStrategyPtrType)(v)
}

func (*clusterClassSpecControlPlaneNamingStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneNamingStrategy)(nil)).Elem()
}

func (i *clusterClassSpecControlPlaneNamingStrategyPtrType) ToClusterClassSpecControlPlaneNamingStrategyPtrOutput() ClusterClassSpecControlPlaneNamingStrategyPtrOutput {
	return i.ToClusterClassSpecControlPlaneNamingStrategyPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecControlPlaneNamingStrategyPtrType) ToClusterClassSpecControlPlaneNamingStrategyPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneNamingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneNamingStrategyPtrOutput)
}

// NamingStrategy allows changing the naming pattern used when creating the control plane provider object.
type ClusterClassSpecControlPlaneNamingStrategyOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneNamingStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneNamingStrategy)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneNamingStrategyOutput) ToClusterClassSpecControlPlaneNamingStrategyOutput() ClusterClassSpecControlPlaneNamingStrategyOutput {
	return o
}

func (o ClusterClassSpecControlPlaneNamingStrategyOutput) ToClusterClassSpecControlPlaneNamingStrategyOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneNamingStrategyOutput {
	return o
}

func (o ClusterClassSpecControlPlaneNamingStrategyOutput) ToClusterClassSpecControlPlaneNamingStrategyPtrOutput() ClusterClassSpecControlPlaneNamingStrategyPtrOutput {
	return o.ToClusterClassSpecControlPlaneNamingStrategyPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecControlPlaneNamingStrategyOutput) ToClusterClassSpecControlPlaneNamingStrategyPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneNamingStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecControlPlaneNamingStrategy) *ClusterClassSpecControlPlaneNamingStrategy {
		return &v
	}).(ClusterClassSpecControlPlaneNamingStrategyPtrOutput)
}

// Template defines the template to use for generating the name of the ControlPlane object. If not defined, it will fallback to `{{ .cluster.name }}-{{ .random }}`. If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will get concatenated with a random suffix of length 5. The templating mechanism provides the following arguments: * `.cluster.name`: The name of the cluster object. * `.random`: A random alphanumeric string, without vowels, of length 5.
func (o ClusterClassSpecControlPlaneNamingStrategyOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneNamingStrategy) *string { return v.Template }).(pulumi.StringPtrOutput)
}

type ClusterClassSpecControlPlaneNamingStrategyPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneNamingStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneNamingStrategy)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneNamingStrategyPtrOutput) ToClusterClassSpecControlPlaneNamingStrategyPtrOutput() ClusterClassSpecControlPlaneNamingStrategyPtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneNamingStrategyPtrOutput) ToClusterClassSpecControlPlaneNamingStrategyPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneNamingStrategyPtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneNamingStrategyPtrOutput) Elem() ClusterClassSpecControlPlaneNamingStrategyOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneNamingStrategy) ClusterClassSpecControlPlaneNamingStrategy {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecControlPlaneNamingStrategy
		return ret
	}).(ClusterClassSpecControlPlaneNamingStrategyOutput)
}

// Template defines the template to use for generating the name of the ControlPlane object. If not defined, it will fallback to `{{ .cluster.name }}-{{ .random }}`. If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will get concatenated with a random suffix of length 5. The templating mechanism provides the following arguments: * `.cluster.name`: The name of the cluster object. * `.random`: A random alphanumeric string, without vowels, of length 5.
func (o ClusterClassSpecControlPlaneNamingStrategyPtrOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneNamingStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.StringPtrOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecControlPlaneRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ClusterClassSpecControlPlaneRefInput is an input type that accepts ClusterClassSpecControlPlaneRefArgs and ClusterClassSpecControlPlaneRefOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneRefInput` via:
//
//	ClusterClassSpecControlPlaneRefArgs{...}
type ClusterClassSpecControlPlaneRefInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneRefOutput() ClusterClassSpecControlPlaneRefOutput
	ToClusterClassSpecControlPlaneRefOutputWithContext(context.Context) ClusterClassSpecControlPlaneRefOutput
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecControlPlaneRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterClassSpecControlPlaneRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneRef)(nil)).Elem()
}

func (i ClusterClassSpecControlPlaneRefArgs) ToClusterClassSpecControlPlaneRefOutput() ClusterClassSpecControlPlaneRefOutput {
	return i.ToClusterClassSpecControlPlaneRefOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneRefArgs) ToClusterClassSpecControlPlaneRefOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneRefOutput)
}

func (i ClusterClassSpecControlPlaneRefArgs) ToClusterClassSpecControlPlaneRefPtrOutput() ClusterClassSpecControlPlaneRefPtrOutput {
	return i.ToClusterClassSpecControlPlaneRefPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecControlPlaneRefArgs) ToClusterClassSpecControlPlaneRefPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneRefOutput).ToClusterClassSpecControlPlaneRefPtrOutputWithContext(ctx)
}

// ClusterClassSpecControlPlaneRefPtrInput is an input type that accepts ClusterClassSpecControlPlaneRefArgs, ClusterClassSpecControlPlaneRefPtr and ClusterClassSpecControlPlaneRefPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecControlPlaneRefPtrInput` via:
//
//	        ClusterClassSpecControlPlaneRefArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecControlPlaneRefPtrInput interface {
	pulumi.Input

	ToClusterClassSpecControlPlaneRefPtrOutput() ClusterClassSpecControlPlaneRefPtrOutput
	ToClusterClassSpecControlPlaneRefPtrOutputWithContext(context.Context) ClusterClassSpecControlPlaneRefPtrOutput
}

type clusterClassSpecControlPlaneRefPtrType ClusterClassSpecControlPlaneRefArgs

func ClusterClassSpecControlPlaneRefPtr(v *ClusterClassSpecControlPlaneRefArgs) ClusterClassSpecControlPlaneRefPtrInput {
	return (*clusterClassSpecControlPlaneRefPtrType)(v)
}

func (*clusterClassSpecControlPlaneRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneRef)(nil)).Elem()
}

func (i *clusterClassSpecControlPlaneRefPtrType) ToClusterClassSpecControlPlaneRefPtrOutput() ClusterClassSpecControlPlaneRefPtrOutput {
	return i.ToClusterClassSpecControlPlaneRefPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecControlPlaneRefPtrType) ToClusterClassSpecControlPlaneRefPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecControlPlaneRefPtrOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecControlPlaneRefOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecControlPlaneRef)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneRefOutput) ToClusterClassSpecControlPlaneRefOutput() ClusterClassSpecControlPlaneRefOutput {
	return o
}

func (o ClusterClassSpecControlPlaneRefOutput) ToClusterClassSpecControlPlaneRefOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneRefOutput {
	return o
}

func (o ClusterClassSpecControlPlaneRefOutput) ToClusterClassSpecControlPlaneRefPtrOutput() ClusterClassSpecControlPlaneRefPtrOutput {
	return o.ToClusterClassSpecControlPlaneRefPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecControlPlaneRefOutput) ToClusterClassSpecControlPlaneRefPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecControlPlaneRef) *ClusterClassSpecControlPlaneRef {
		return &v
	}).(ClusterClassSpecControlPlaneRefPtrOutput)
}

// API version of the referent.
func (o ClusterClassSpecControlPlaneRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterClassSpecControlPlaneRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterClassSpecControlPlaneRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterClassSpecControlPlaneRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterClassSpecControlPlaneRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterClassSpecControlPlaneRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterClassSpecControlPlaneRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecControlPlaneRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterClassSpecControlPlaneRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecControlPlaneRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecControlPlaneRef)(nil)).Elem()
}

func (o ClusterClassSpecControlPlaneRefPtrOutput) ToClusterClassSpecControlPlaneRefPtrOutput() ClusterClassSpecControlPlaneRefPtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneRefPtrOutput) ToClusterClassSpecControlPlaneRefPtrOutputWithContext(ctx context.Context) ClusterClassSpecControlPlaneRefPtrOutput {
	return o
}

func (o ClusterClassSpecControlPlaneRefPtrOutput) Elem() ClusterClassSpecControlPlaneRefOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneRef) ClusterClassSpecControlPlaneRef {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecControlPlaneRef
		return ret
	}).(ClusterClassSpecControlPlaneRefOutput)
}

// API version of the referent.
func (o ClusterClassSpecControlPlaneRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterClassSpecControlPlaneRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterClassSpecControlPlaneRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterClassSpecControlPlaneRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterClassSpecControlPlaneRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterClassSpecControlPlaneRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterClassSpecControlPlaneRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// Infrastructure is a reference to a provider-specific template that holds the details for provisioning infrastructure specific cluster for the underlying provider. The underlying provider is responsible for the implementation of the template to an infrastructure cluster.
type ClusterClassSpecInfrastructure struct {
	// Ref is a required reference to a custom resource offered by a provider.
	Ref ClusterClassSpecInfrastructureRef `pulumi:"ref"`
}

// ClusterClassSpecInfrastructureInput is an input type that accepts ClusterClassSpecInfrastructureArgs and ClusterClassSpecInfrastructureOutput values.
// You can construct a concrete instance of `ClusterClassSpecInfrastructureInput` via:
//
//	ClusterClassSpecInfrastructureArgs{...}
type ClusterClassSpecInfrastructureInput interface {
	pulumi.Input

	ToClusterClassSpecInfrastructureOutput() ClusterClassSpecInfrastructureOutput
	ToClusterClassSpecInfrastructureOutputWithContext(context.Context) ClusterClassSpecInfrastructureOutput
}

// Infrastructure is a reference to a provider-specific template that holds the details for provisioning infrastructure specific cluster for the underlying provider. The underlying provider is responsible for the implementation of the template to an infrastructure cluster.
type ClusterClassSpecInfrastructureArgs struct {
	// Ref is a required reference to a custom resource offered by a provider.
	Ref ClusterClassSpecInfrastructureRefInput `pulumi:"ref"`
}

func (ClusterClassSpecInfrastructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecInfrastructure)(nil)).Elem()
}

func (i ClusterClassSpecInfrastructureArgs) ToClusterClassSpecInfrastructureOutput() ClusterClassSpecInfrastructureOutput {
	return i.ToClusterClassSpecInfrastructureOutputWithContext(context.Background())
}

func (i ClusterClassSpecInfrastructureArgs) ToClusterClassSpecInfrastructureOutputWithContext(ctx context.Context) ClusterClassSpecInfrastructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecInfrastructureOutput)
}

func (i ClusterClassSpecInfrastructureArgs) ToClusterClassSpecInfrastructurePtrOutput() ClusterClassSpecInfrastructurePtrOutput {
	return i.ToClusterClassSpecInfrastructurePtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecInfrastructureArgs) ToClusterClassSpecInfrastructurePtrOutputWithContext(ctx context.Context) ClusterClassSpecInfrastructurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecInfrastructureOutput).ToClusterClassSpecInfrastructurePtrOutputWithContext(ctx)
}

// ClusterClassSpecInfrastructurePtrInput is an input type that accepts ClusterClassSpecInfrastructureArgs, ClusterClassSpecInfrastructurePtr and ClusterClassSpecInfrastructurePtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecInfrastructurePtrInput` via:
//
//	        ClusterClassSpecInfrastructureArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecInfrastructurePtrInput interface {
	pulumi.Input

	ToClusterClassSpecInfrastructurePtrOutput() ClusterClassSpecInfrastructurePtrOutput
	ToClusterClassSpecInfrastructurePtrOutputWithContext(context.Context) ClusterClassSpecInfrastructurePtrOutput
}

type clusterClassSpecInfrastructurePtrType ClusterClassSpecInfrastructureArgs

func ClusterClassSpecInfrastructurePtr(v *ClusterClassSpecInfrastructureArgs) ClusterClassSpecInfrastructurePtrInput {
	return (*clusterClassSpecInfrastructurePtrType)(v)
}

func (*clusterClassSpecInfrastructurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecInfrastructure)(nil)).Elem()
}

func (i *clusterClassSpecInfrastructurePtrType) ToClusterClassSpecInfrastructurePtrOutput() ClusterClassSpecInfrastructurePtrOutput {
	return i.ToClusterClassSpecInfrastructurePtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecInfrastructurePtrType) ToClusterClassSpecInfrastructurePtrOutputWithContext(ctx context.Context) ClusterClassSpecInfrastructurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecInfrastructurePtrOutput)
}

// Infrastructure is a reference to a provider-specific template that holds the details for provisioning infrastructure specific cluster for the underlying provider. The underlying provider is responsible for the implementation of the template to an infrastructure cluster.
type ClusterClassSpecInfrastructureOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecInfrastructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecInfrastructure)(nil)).Elem()
}

func (o ClusterClassSpecInfrastructureOutput) ToClusterClassSpecInfrastructureOutput() ClusterClassSpecInfrastructureOutput {
	return o
}

func (o ClusterClassSpecInfrastructureOutput) ToClusterClassSpecInfrastructureOutputWithContext(ctx context.Context) ClusterClassSpecInfrastructureOutput {
	return o
}

func (o ClusterClassSpecInfrastructureOutput) ToClusterClassSpecInfrastructurePtrOutput() ClusterClassSpecInfrastructurePtrOutput {
	return o.ToClusterClassSpecInfrastructurePtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecInfrastructureOutput) ToClusterClassSpecInfrastructurePtrOutputWithContext(ctx context.Context) ClusterClassSpecInfrastructurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecInfrastructure) *ClusterClassSpecInfrastructure {
		return &v
	}).(ClusterClassSpecInfrastructurePtrOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
func (o ClusterClassSpecInfrastructureOutput) Ref() ClusterClassSpecInfrastructureRefOutput {
	return o.ApplyT(func(v ClusterClassSpecInfrastructure) ClusterClassSpecInfrastructureRef { return v.Ref }).(ClusterClassSpecInfrastructureRefOutput)
}

type ClusterClassSpecInfrastructurePtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecInfrastructurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecInfrastructure)(nil)).Elem()
}

func (o ClusterClassSpecInfrastructurePtrOutput) ToClusterClassSpecInfrastructurePtrOutput() ClusterClassSpecInfrastructurePtrOutput {
	return o
}

func (o ClusterClassSpecInfrastructurePtrOutput) ToClusterClassSpecInfrastructurePtrOutputWithContext(ctx context.Context) ClusterClassSpecInfrastructurePtrOutput {
	return o
}

func (o ClusterClassSpecInfrastructurePtrOutput) Elem() ClusterClassSpecInfrastructureOutput {
	return o.ApplyT(func(v *ClusterClassSpecInfrastructure) ClusterClassSpecInfrastructure {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecInfrastructure
		return ret
	}).(ClusterClassSpecInfrastructureOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
func (o ClusterClassSpecInfrastructurePtrOutput) Ref() ClusterClassSpecInfrastructureRefPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecInfrastructure) *ClusterClassSpecInfrastructureRef {
		if v == nil {
			return nil
		}
		return &v.Ref
	}).(ClusterClassSpecInfrastructureRefPtrOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecInfrastructureRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ClusterClassSpecInfrastructureRefInput is an input type that accepts ClusterClassSpecInfrastructureRefArgs and ClusterClassSpecInfrastructureRefOutput values.
// You can construct a concrete instance of `ClusterClassSpecInfrastructureRefInput` via:
//
//	ClusterClassSpecInfrastructureRefArgs{...}
type ClusterClassSpecInfrastructureRefInput interface {
	pulumi.Input

	ToClusterClassSpecInfrastructureRefOutput() ClusterClassSpecInfrastructureRefOutput
	ToClusterClassSpecInfrastructureRefOutputWithContext(context.Context) ClusterClassSpecInfrastructureRefOutput
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecInfrastructureRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterClassSpecInfrastructureRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecInfrastructureRef)(nil)).Elem()
}

func (i ClusterClassSpecInfrastructureRefArgs) ToClusterClassSpecInfrastructureRefOutput() ClusterClassSpecInfrastructureRefOutput {
	return i.ToClusterClassSpecInfrastructureRefOutputWithContext(context.Background())
}

func (i ClusterClassSpecInfrastructureRefArgs) ToClusterClassSpecInfrastructureRefOutputWithContext(ctx context.Context) ClusterClassSpecInfrastructureRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecInfrastructureRefOutput)
}

func (i ClusterClassSpecInfrastructureRefArgs) ToClusterClassSpecInfrastructureRefPtrOutput() ClusterClassSpecInfrastructureRefPtrOutput {
	return i.ToClusterClassSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecInfrastructureRefArgs) ToClusterClassSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) ClusterClassSpecInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecInfrastructureRefOutput).ToClusterClassSpecInfrastructureRefPtrOutputWithContext(ctx)
}

// ClusterClassSpecInfrastructureRefPtrInput is an input type that accepts ClusterClassSpecInfrastructureRefArgs, ClusterClassSpecInfrastructureRefPtr and ClusterClassSpecInfrastructureRefPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecInfrastructureRefPtrInput` via:
//
//	        ClusterClassSpecInfrastructureRefArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecInfrastructureRefPtrInput interface {
	pulumi.Input

	ToClusterClassSpecInfrastructureRefPtrOutput() ClusterClassSpecInfrastructureRefPtrOutput
	ToClusterClassSpecInfrastructureRefPtrOutputWithContext(context.Context) ClusterClassSpecInfrastructureRefPtrOutput
}

type clusterClassSpecInfrastructureRefPtrType ClusterClassSpecInfrastructureRefArgs

func ClusterClassSpecInfrastructureRefPtr(v *ClusterClassSpecInfrastructureRefArgs) ClusterClassSpecInfrastructureRefPtrInput {
	return (*clusterClassSpecInfrastructureRefPtrType)(v)
}

func (*clusterClassSpecInfrastructureRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecInfrastructureRef)(nil)).Elem()
}

func (i *clusterClassSpecInfrastructureRefPtrType) ToClusterClassSpecInfrastructureRefPtrOutput() ClusterClassSpecInfrastructureRefPtrOutput {
	return i.ToClusterClassSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecInfrastructureRefPtrType) ToClusterClassSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) ClusterClassSpecInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecInfrastructureRefPtrOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecInfrastructureRefOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecInfrastructureRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecInfrastructureRef)(nil)).Elem()
}

func (o ClusterClassSpecInfrastructureRefOutput) ToClusterClassSpecInfrastructureRefOutput() ClusterClassSpecInfrastructureRefOutput {
	return o
}

func (o ClusterClassSpecInfrastructureRefOutput) ToClusterClassSpecInfrastructureRefOutputWithContext(ctx context.Context) ClusterClassSpecInfrastructureRefOutput {
	return o
}

func (o ClusterClassSpecInfrastructureRefOutput) ToClusterClassSpecInfrastructureRefPtrOutput() ClusterClassSpecInfrastructureRefPtrOutput {
	return o.ToClusterClassSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecInfrastructureRefOutput) ToClusterClassSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) ClusterClassSpecInfrastructureRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecInfrastructureRef) *ClusterClassSpecInfrastructureRef {
		return &v
	}).(ClusterClassSpecInfrastructureRefPtrOutput)
}

// API version of the referent.
func (o ClusterClassSpecInfrastructureRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecInfrastructureRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterClassSpecInfrastructureRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecInfrastructureRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterClassSpecInfrastructureRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecInfrastructureRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterClassSpecInfrastructureRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecInfrastructureRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterClassSpecInfrastructureRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecInfrastructureRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterClassSpecInfrastructureRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecInfrastructureRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterClassSpecInfrastructureRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecInfrastructureRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterClassSpecInfrastructureRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecInfrastructureRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecInfrastructureRef)(nil)).Elem()
}

func (o ClusterClassSpecInfrastructureRefPtrOutput) ToClusterClassSpecInfrastructureRefPtrOutput() ClusterClassSpecInfrastructureRefPtrOutput {
	return o
}

func (o ClusterClassSpecInfrastructureRefPtrOutput) ToClusterClassSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) ClusterClassSpecInfrastructureRefPtrOutput {
	return o
}

func (o ClusterClassSpecInfrastructureRefPtrOutput) Elem() ClusterClassSpecInfrastructureRefOutput {
	return o.ApplyT(func(v *ClusterClassSpecInfrastructureRef) ClusterClassSpecInfrastructureRef {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecInfrastructureRef
		return ret
	}).(ClusterClassSpecInfrastructureRefOutput)
}

// API version of the referent.
func (o ClusterClassSpecInfrastructureRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterClassSpecInfrastructureRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterClassSpecInfrastructureRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterClassSpecInfrastructureRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterClassSpecInfrastructureRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterClassSpecInfrastructureRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterClassSpecInfrastructureRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// ClusterClassPatch defines a patch which is applied to customize the referenced templates.
type ClusterClassSpecPatches struct {
	// Definitions define inline patches. Note: Patches will be applied in the order of the array. Note: Exactly one of Definitions or External must be set.
	Definitions []ClusterClassSpecPatchesDefinitions `pulumi:"definitions"`
	// Description is a human-readable description of this patch.
	Description *string `pulumi:"description"`
	// EnabledIf is a Go template to be used to calculate if a patch should be enabled. It can reference variables defined in .spec.variables and builtin variables. The patch will be enabled if the template evaluates to `true`, otherwise it will be disabled. If EnabledIf is not set, the patch will be enabled per default.
	EnabledIf *string `pulumi:"enabledIf"`
	// External defines an external patch. Note: Exactly one of Definitions or External must be set.
	External *ClusterClassSpecPatchesExternal `pulumi:"external"`
	// Name of the patch.
	Name string `pulumi:"name"`
}

// ClusterClassSpecPatchesInput is an input type that accepts ClusterClassSpecPatchesArgs and ClusterClassSpecPatchesOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesInput` via:
//
//	ClusterClassSpecPatchesArgs{...}
type ClusterClassSpecPatchesInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesOutput() ClusterClassSpecPatchesOutput
	ToClusterClassSpecPatchesOutputWithContext(context.Context) ClusterClassSpecPatchesOutput
}

// ClusterClassPatch defines a patch which is applied to customize the referenced templates.
type ClusterClassSpecPatchesArgs struct {
	// Definitions define inline patches. Note: Patches will be applied in the order of the array. Note: Exactly one of Definitions or External must be set.
	Definitions ClusterClassSpecPatchesDefinitionsArrayInput `pulumi:"definitions"`
	// Description is a human-readable description of this patch.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// EnabledIf is a Go template to be used to calculate if a patch should be enabled. It can reference variables defined in .spec.variables and builtin variables. The patch will be enabled if the template evaluates to `true`, otherwise it will be disabled. If EnabledIf is not set, the patch will be enabled per default.
	EnabledIf pulumi.StringPtrInput `pulumi:"enabledIf"`
	// External defines an external patch. Note: Exactly one of Definitions or External must be set.
	External ClusterClassSpecPatchesExternalPtrInput `pulumi:"external"`
	// Name of the patch.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterClassSpecPatchesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatches)(nil)).Elem()
}

func (i ClusterClassSpecPatchesArgs) ToClusterClassSpecPatchesOutput() ClusterClassSpecPatchesOutput {
	return i.ToClusterClassSpecPatchesOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesArgs) ToClusterClassSpecPatchesOutputWithContext(ctx context.Context) ClusterClassSpecPatchesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesOutput)
}

// ClusterClassSpecPatchesArrayInput is an input type that accepts ClusterClassSpecPatchesArray and ClusterClassSpecPatchesArrayOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesArrayInput` via:
//
//	ClusterClassSpecPatchesArray{ ClusterClassSpecPatchesArgs{...} }
type ClusterClassSpecPatchesArrayInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesArrayOutput() ClusterClassSpecPatchesArrayOutput
	ToClusterClassSpecPatchesArrayOutputWithContext(context.Context) ClusterClassSpecPatchesArrayOutput
}

type ClusterClassSpecPatchesArray []ClusterClassSpecPatchesInput

func (ClusterClassSpecPatchesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecPatches)(nil)).Elem()
}

func (i ClusterClassSpecPatchesArray) ToClusterClassSpecPatchesArrayOutput() ClusterClassSpecPatchesArrayOutput {
	return i.ToClusterClassSpecPatchesArrayOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesArray) ToClusterClassSpecPatchesArrayOutputWithContext(ctx context.Context) ClusterClassSpecPatchesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesArrayOutput)
}

// ClusterClassPatch defines a patch which is applied to customize the referenced templates.
type ClusterClassSpecPatchesOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatches)(nil)).Elem()
}

func (o ClusterClassSpecPatchesOutput) ToClusterClassSpecPatchesOutput() ClusterClassSpecPatchesOutput {
	return o
}

func (o ClusterClassSpecPatchesOutput) ToClusterClassSpecPatchesOutputWithContext(ctx context.Context) ClusterClassSpecPatchesOutput {
	return o
}

// Definitions define inline patches. Note: Patches will be applied in the order of the array. Note: Exactly one of Definitions or External must be set.
func (o ClusterClassSpecPatchesOutput) Definitions() ClusterClassSpecPatchesDefinitionsArrayOutput {
	return o.ApplyT(func(v ClusterClassSpecPatches) []ClusterClassSpecPatchesDefinitions { return v.Definitions }).(ClusterClassSpecPatchesDefinitionsArrayOutput)
}

// Description is a human-readable description of this patch.
func (o ClusterClassSpecPatchesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecPatches) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// EnabledIf is a Go template to be used to calculate if a patch should be enabled. It can reference variables defined in .spec.variables and builtin variables. The patch will be enabled if the template evaluates to `true`, otherwise it will be disabled. If EnabledIf is not set, the patch will be enabled per default.
func (o ClusterClassSpecPatchesOutput) EnabledIf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecPatches) *string { return v.EnabledIf }).(pulumi.StringPtrOutput)
}

// External defines an external patch. Note: Exactly one of Definitions or External must be set.
func (o ClusterClassSpecPatchesOutput) External() ClusterClassSpecPatchesExternalPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecPatches) *ClusterClassSpecPatchesExternal { return v.External }).(ClusterClassSpecPatchesExternalPtrOutput)
}

// Name of the patch.
func (o ClusterClassSpecPatchesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecPatches) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterClassSpecPatchesArrayOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecPatches)(nil)).Elem()
}

func (o ClusterClassSpecPatchesArrayOutput) ToClusterClassSpecPatchesArrayOutput() ClusterClassSpecPatchesArrayOutput {
	return o
}

func (o ClusterClassSpecPatchesArrayOutput) ToClusterClassSpecPatchesArrayOutputWithContext(ctx context.Context) ClusterClassSpecPatchesArrayOutput {
	return o
}

func (o ClusterClassSpecPatchesArrayOutput) Index(i pulumi.IntInput) ClusterClassSpecPatchesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClassSpecPatches {
		return vs[0].([]ClusterClassSpecPatches)[vs[1].(int)]
	}).(ClusterClassSpecPatchesOutput)
}

// PatchDefinition defines a patch which is applied to customize the referenced templates.
type ClusterClassSpecPatchesDefinitions struct {
	// JSONPatches defines the patches which should be applied on the templates matching the selector. Note: Patches will be applied in the order of the array.
	JsonPatches []ClusterClassSpecPatchesDefinitionsJsonPatches `pulumi:"jsonPatches"`
	// Selector defines on which templates the patch should be applied.
	Selector ClusterClassSpecPatchesDefinitionsSelector `pulumi:"selector"`
}

// ClusterClassSpecPatchesDefinitionsInput is an input type that accepts ClusterClassSpecPatchesDefinitionsArgs and ClusterClassSpecPatchesDefinitionsOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesDefinitionsInput` via:
//
//	ClusterClassSpecPatchesDefinitionsArgs{...}
type ClusterClassSpecPatchesDefinitionsInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesDefinitionsOutput() ClusterClassSpecPatchesDefinitionsOutput
	ToClusterClassSpecPatchesDefinitionsOutputWithContext(context.Context) ClusterClassSpecPatchesDefinitionsOutput
}

// PatchDefinition defines a patch which is applied to customize the referenced templates.
type ClusterClassSpecPatchesDefinitionsArgs struct {
	// JSONPatches defines the patches which should be applied on the templates matching the selector. Note: Patches will be applied in the order of the array.
	JsonPatches ClusterClassSpecPatchesDefinitionsJsonPatchesArrayInput `pulumi:"jsonPatches"`
	// Selector defines on which templates the patch should be applied.
	Selector ClusterClassSpecPatchesDefinitionsSelectorInput `pulumi:"selector"`
}

func (ClusterClassSpecPatchesDefinitionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesDefinitions)(nil)).Elem()
}

func (i ClusterClassSpecPatchesDefinitionsArgs) ToClusterClassSpecPatchesDefinitionsOutput() ClusterClassSpecPatchesDefinitionsOutput {
	return i.ToClusterClassSpecPatchesDefinitionsOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesDefinitionsArgs) ToClusterClassSpecPatchesDefinitionsOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesDefinitionsOutput)
}

// ClusterClassSpecPatchesDefinitionsArrayInput is an input type that accepts ClusterClassSpecPatchesDefinitionsArray and ClusterClassSpecPatchesDefinitionsArrayOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesDefinitionsArrayInput` via:
//
//	ClusterClassSpecPatchesDefinitionsArray{ ClusterClassSpecPatchesDefinitionsArgs{...} }
type ClusterClassSpecPatchesDefinitionsArrayInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesDefinitionsArrayOutput() ClusterClassSpecPatchesDefinitionsArrayOutput
	ToClusterClassSpecPatchesDefinitionsArrayOutputWithContext(context.Context) ClusterClassSpecPatchesDefinitionsArrayOutput
}

type ClusterClassSpecPatchesDefinitionsArray []ClusterClassSpecPatchesDefinitionsInput

func (ClusterClassSpecPatchesDefinitionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecPatchesDefinitions)(nil)).Elem()
}

func (i ClusterClassSpecPatchesDefinitionsArray) ToClusterClassSpecPatchesDefinitionsArrayOutput() ClusterClassSpecPatchesDefinitionsArrayOutput {
	return i.ToClusterClassSpecPatchesDefinitionsArrayOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesDefinitionsArray) ToClusterClassSpecPatchesDefinitionsArrayOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesDefinitionsArrayOutput)
}

// PatchDefinition defines a patch which is applied to customize the referenced templates.
type ClusterClassSpecPatchesDefinitionsOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesDefinitionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesDefinitions)(nil)).Elem()
}

func (o ClusterClassSpecPatchesDefinitionsOutput) ToClusterClassSpecPatchesDefinitionsOutput() ClusterClassSpecPatchesDefinitionsOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsOutput) ToClusterClassSpecPatchesDefinitionsOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsOutput {
	return o
}

// JSONPatches defines the patches which should be applied on the templates matching the selector. Note: Patches will be applied in the order of the array.
func (o ClusterClassSpecPatchesDefinitionsOutput) JsonPatches() ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitions) []ClusterClassSpecPatchesDefinitionsJsonPatches {
		return v.JsonPatches
	}).(ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput)
}

// Selector defines on which templates the patch should be applied.
func (o ClusterClassSpecPatchesDefinitionsOutput) Selector() ClusterClassSpecPatchesDefinitionsSelectorOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitions) ClusterClassSpecPatchesDefinitionsSelector {
		return v.Selector
	}).(ClusterClassSpecPatchesDefinitionsSelectorOutput)
}

type ClusterClassSpecPatchesDefinitionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesDefinitionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecPatchesDefinitions)(nil)).Elem()
}

func (o ClusterClassSpecPatchesDefinitionsArrayOutput) ToClusterClassSpecPatchesDefinitionsArrayOutput() ClusterClassSpecPatchesDefinitionsArrayOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsArrayOutput) ToClusterClassSpecPatchesDefinitionsArrayOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsArrayOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsArrayOutput) Index(i pulumi.IntInput) ClusterClassSpecPatchesDefinitionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClassSpecPatchesDefinitions {
		return vs[0].([]ClusterClassSpecPatchesDefinitions)[vs[1].(int)]
	}).(ClusterClassSpecPatchesDefinitionsOutput)
}

// JSONPatch defines a JSON patch.
type ClusterClassSpecPatchesDefinitionsJsonPatches struct {
	// Op defines the operation of the patch. Note: Only `add`, `replace` and `remove` are supported.
	Op string `pulumi:"op"`
	// Path defines the path of the patch. Note: Only the spec of a template can be patched, thus the path has to start with /spec/. Note: For now the only allowed array modifications are `append` and `prepend`, i.e.: * for op: `add`: only index 0 (prepend) and - (append) are allowed * for op: `replace` or `remove`: no indexes are allowed
	Path string `pulumi:"path"`
	// Value defines the value of the patch. Note: Either Value or ValueFrom is required for add and replace operations. Only one of them is allowed to be set at the same time. Note: We have to use apiextensionsv1.JSON instead of our JSON type, because controller-tools has a hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type (unset type field). Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
	Value map[string]interface{} `pulumi:"value"`
	// ValueFrom defines the value of the patch. Note: Either Value or ValueFrom is required for add and replace operations. Only one of them is allowed to be set at the same time.
	ValueFrom *ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom `pulumi:"valueFrom"`
}

// ClusterClassSpecPatchesDefinitionsJsonPatchesInput is an input type that accepts ClusterClassSpecPatchesDefinitionsJsonPatchesArgs and ClusterClassSpecPatchesDefinitionsJsonPatchesOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesDefinitionsJsonPatchesInput` via:
//
//	ClusterClassSpecPatchesDefinitionsJsonPatchesArgs{...}
type ClusterClassSpecPatchesDefinitionsJsonPatchesInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesDefinitionsJsonPatchesOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesOutput
	ToClusterClassSpecPatchesDefinitionsJsonPatchesOutputWithContext(context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesOutput
}

// JSONPatch defines a JSON patch.
type ClusterClassSpecPatchesDefinitionsJsonPatchesArgs struct {
	// Op defines the operation of the patch. Note: Only `add`, `replace` and `remove` are supported.
	Op pulumi.StringInput `pulumi:"op"`
	// Path defines the path of the patch. Note: Only the spec of a template can be patched, thus the path has to start with /spec/. Note: For now the only allowed array modifications are `append` and `prepend`, i.e.: * for op: `add`: only index 0 (prepend) and - (append) are allowed * for op: `replace` or `remove`: no indexes are allowed
	Path pulumi.StringInput `pulumi:"path"`
	// Value defines the value of the patch. Note: Either Value or ValueFrom is required for add and replace operations. Only one of them is allowed to be set at the same time. Note: We have to use apiextensionsv1.JSON instead of our JSON type, because controller-tools has a hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type (unset type field). Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
	Value pulumi.MapInput `pulumi:"value"`
	// ValueFrom defines the value of the patch. Note: Either Value or ValueFrom is required for add and replace operations. Only one of them is allowed to be set at the same time.
	ValueFrom ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrInput `pulumi:"valueFrom"`
}

func (ClusterClassSpecPatchesDefinitionsJsonPatchesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsJsonPatches)(nil)).Elem()
}

func (i ClusterClassSpecPatchesDefinitionsJsonPatchesArgs) ToClusterClassSpecPatchesDefinitionsJsonPatchesOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesOutput {
	return i.ToClusterClassSpecPatchesDefinitionsJsonPatchesOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesDefinitionsJsonPatchesArgs) ToClusterClassSpecPatchesDefinitionsJsonPatchesOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesDefinitionsJsonPatchesOutput)
}

// ClusterClassSpecPatchesDefinitionsJsonPatchesArrayInput is an input type that accepts ClusterClassSpecPatchesDefinitionsJsonPatchesArray and ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesDefinitionsJsonPatchesArrayInput` via:
//
//	ClusterClassSpecPatchesDefinitionsJsonPatchesArray{ ClusterClassSpecPatchesDefinitionsJsonPatchesArgs{...} }
type ClusterClassSpecPatchesDefinitionsJsonPatchesArrayInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput
	ToClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutputWithContext(context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput
}

type ClusterClassSpecPatchesDefinitionsJsonPatchesArray []ClusterClassSpecPatchesDefinitionsJsonPatchesInput

func (ClusterClassSpecPatchesDefinitionsJsonPatchesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecPatchesDefinitionsJsonPatches)(nil)).Elem()
}

func (i ClusterClassSpecPatchesDefinitionsJsonPatchesArray) ToClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput {
	return i.ToClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesDefinitionsJsonPatchesArray) ToClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput)
}

// JSONPatch defines a JSON patch.
type ClusterClassSpecPatchesDefinitionsJsonPatchesOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesDefinitionsJsonPatchesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsJsonPatches)(nil)).Elem()
}

func (o ClusterClassSpecPatchesDefinitionsJsonPatchesOutput) ToClusterClassSpecPatchesDefinitionsJsonPatchesOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsJsonPatchesOutput) ToClusterClassSpecPatchesDefinitionsJsonPatchesOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesOutput {
	return o
}

// Op defines the operation of the patch. Note: Only `add`, `replace` and `remove` are supported.
func (o ClusterClassSpecPatchesDefinitionsJsonPatchesOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitionsJsonPatches) string { return v.Op }).(pulumi.StringOutput)
}

// Path defines the path of the patch. Note: Only the spec of a template can be patched, thus the path has to start with /spec/. Note: For now the only allowed array modifications are `append` and `prepend`, i.e.: * for op: `add`: only index 0 (prepend) and - (append) are allowed * for op: `replace` or `remove`: no indexes are allowed
func (o ClusterClassSpecPatchesDefinitionsJsonPatchesOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitionsJsonPatches) string { return v.Path }).(pulumi.StringOutput)
}

// Value defines the value of the patch. Note: Either Value or ValueFrom is required for add and replace operations. Only one of them is allowed to be set at the same time. Note: We have to use apiextensionsv1.JSON instead of our JSON type, because controller-tools has a hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type (unset type field). Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
func (o ClusterClassSpecPatchesDefinitionsJsonPatchesOutput) Value() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitionsJsonPatches) map[string]interface{} { return v.Value }).(pulumi.MapOutput)
}

// ValueFrom defines the value of the patch. Note: Either Value or ValueFrom is required for add and replace operations. Only one of them is allowed to be set at the same time.
func (o ClusterClassSpecPatchesDefinitionsJsonPatchesOutput) ValueFrom() ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitionsJsonPatches) *ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom {
		return v.ValueFrom
	}).(ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput)
}

type ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecPatchesDefinitionsJsonPatches)(nil)).Elem()
}

func (o ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput) ToClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput) ToClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput) Index(i pulumi.IntInput) ClusterClassSpecPatchesDefinitionsJsonPatchesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClassSpecPatchesDefinitionsJsonPatches {
		return vs[0].([]ClusterClassSpecPatchesDefinitionsJsonPatches)[vs[1].(int)]
	}).(ClusterClassSpecPatchesDefinitionsJsonPatchesOutput)
}

// ValueFrom defines the value of the patch. Note: Either Value or ValueFrom is required for add and replace operations. Only one of them is allowed to be set at the same time.
type ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom struct {
	// Template is the Go template to be used to calculate the value. A template can reference variables defined in .spec.variables and builtin variables. Note: The template must evaluate to a valid YAML or JSON value.
	Template *string `pulumi:"template"`
	// Variable is the variable to be used as value. Variable can be one of the variables defined in .spec.variables or a builtin variable.
	Variable *string `pulumi:"variable"`
}

// ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromInput is an input type that accepts ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs and ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromInput` via:
//
//	ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs{...}
type ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput
	ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutputWithContext(context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput
}

// ValueFrom defines the value of the patch. Note: Either Value or ValueFrom is required for add and replace operations. Only one of them is allowed to be set at the same time.
type ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs struct {
	// Template is the Go template to be used to calculate the value. A template can reference variables defined in .spec.variables and builtin variables. Note: The template must evaluate to a valid YAML or JSON value.
	Template pulumi.StringPtrInput `pulumi:"template"`
	// Variable is the variable to be used as value. Variable can be one of the variables defined in .spec.variables or a builtin variable.
	Variable pulumi.StringPtrInput `pulumi:"variable"`
}

func (ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom)(nil)).Elem()
}

func (i ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs) ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput {
	return i.ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs) ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput)
}

func (i ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs) ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput {
	return i.ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs) ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput).ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutputWithContext(ctx)
}

// ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrInput is an input type that accepts ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs, ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtr and ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrInput` via:
//
//	        ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput
	ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutputWithContext(context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput
}

type clusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrType ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs

func ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtr(v *ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs) ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrInput {
	return (*clusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrType)(v)
}

func (*clusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom)(nil)).Elem()
}

func (i *clusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrType) ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput {
	return i.ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrType) ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput)
}

// ValueFrom defines the value of the patch. Note: Either Value or ValueFrom is required for add and replace operations. Only one of them is allowed to be set at the same time.
type ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom)(nil)).Elem()
}

func (o ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput) ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput) ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput) ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput {
	return o.ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput) ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom) *ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom {
		return &v
	}).(ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput)
}

// Template is the Go template to be used to calculate the value. A template can reference variables defined in .spec.variables and builtin variables. Note: The template must evaluate to a valid YAML or JSON value.
func (o ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom) *string { return v.Template }).(pulumi.StringPtrOutput)
}

// Variable is the variable to be used as value. Variable can be one of the variables defined in .spec.variables or a builtin variable.
func (o ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput) Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom) *string { return v.Variable }).(pulumi.StringPtrOutput)
}

type ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom)(nil)).Elem()
}

func (o ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput) ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput() ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput) ToClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput) Elem() ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput {
	return o.ApplyT(func(v *ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom) ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom
		return ret
	}).(ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput)
}

// Template is the Go template to be used to calculate the value. A template can reference variables defined in .spec.variables and builtin variables. Note: The template must evaluate to a valid YAML or JSON value.
func (o ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom) *string {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.StringPtrOutput)
}

// Variable is the variable to be used as value. Variable can be one of the variables defined in .spec.variables or a builtin variable.
func (o ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput) Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecPatchesDefinitionsJsonPatchesValueFrom) *string {
		if v == nil {
			return nil
		}
		return v.Variable
	}).(pulumi.StringPtrOutput)
}

// Selector defines on which templates the patch should be applied.
type ClusterClassSpecPatchesDefinitionsSelector struct {
	// APIVersion filters templates by apiVersion.
	ApiVersion string `pulumi:"apiVersion"`
	// Kind filters templates by kind.
	Kind string `pulumi:"kind"`
	// MatchResources selects templates based on where they are referenced.
	MatchResources ClusterClassSpecPatchesDefinitionsSelectorMatchResources `pulumi:"matchResources"`
}

// ClusterClassSpecPatchesDefinitionsSelectorInput is an input type that accepts ClusterClassSpecPatchesDefinitionsSelectorArgs and ClusterClassSpecPatchesDefinitionsSelectorOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesDefinitionsSelectorInput` via:
//
//	ClusterClassSpecPatchesDefinitionsSelectorArgs{...}
type ClusterClassSpecPatchesDefinitionsSelectorInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesDefinitionsSelectorOutput() ClusterClassSpecPatchesDefinitionsSelectorOutput
	ToClusterClassSpecPatchesDefinitionsSelectorOutputWithContext(context.Context) ClusterClassSpecPatchesDefinitionsSelectorOutput
}

// Selector defines on which templates the patch should be applied.
type ClusterClassSpecPatchesDefinitionsSelectorArgs struct {
	// APIVersion filters templates by apiVersion.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Kind filters templates by kind.
	Kind pulumi.StringInput `pulumi:"kind"`
	// MatchResources selects templates based on where they are referenced.
	MatchResources ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesInput `pulumi:"matchResources"`
}

func (ClusterClassSpecPatchesDefinitionsSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsSelector)(nil)).Elem()
}

func (i ClusterClassSpecPatchesDefinitionsSelectorArgs) ToClusterClassSpecPatchesDefinitionsSelectorOutput() ClusterClassSpecPatchesDefinitionsSelectorOutput {
	return i.ToClusterClassSpecPatchesDefinitionsSelectorOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesDefinitionsSelectorArgs) ToClusterClassSpecPatchesDefinitionsSelectorOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesDefinitionsSelectorOutput)
}

// Selector defines on which templates the patch should be applied.
type ClusterClassSpecPatchesDefinitionsSelectorOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesDefinitionsSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsSelector)(nil)).Elem()
}

func (o ClusterClassSpecPatchesDefinitionsSelectorOutput) ToClusterClassSpecPatchesDefinitionsSelectorOutput() ClusterClassSpecPatchesDefinitionsSelectorOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsSelectorOutput) ToClusterClassSpecPatchesDefinitionsSelectorOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsSelectorOutput {
	return o
}

// APIVersion filters templates by apiVersion.
func (o ClusterClassSpecPatchesDefinitionsSelectorOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitionsSelector) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind filters templates by kind.
func (o ClusterClassSpecPatchesDefinitionsSelectorOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitionsSelector) string { return v.Kind }).(pulumi.StringOutput)
}

// MatchResources selects templates based on where they are referenced.
func (o ClusterClassSpecPatchesDefinitionsSelectorOutput) MatchResources() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitionsSelector) ClusterClassSpecPatchesDefinitionsSelectorMatchResources {
		return v.MatchResources
	}).(ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput)
}

// MatchResources selects templates based on where they are referenced.
type ClusterClassSpecPatchesDefinitionsSelectorMatchResources struct {
	// ControlPlane selects templates referenced in .spec.ControlPlane. Note: this will match the controlPlane and also the controlPlane machineInfrastructure (depending on the kind and apiVersion).
	ControlPlane *bool `pulumi:"controlPlane"`
	// InfrastructureCluster selects templates referenced in .spec.infrastructure.
	InfrastructureCluster *bool `pulumi:"infrastructureCluster"`
	// MachineDeploymentClass selects templates referenced in specific MachineDeploymentClasses in .spec.workers.machineDeployments.
	MachineDeploymentClass *ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass `pulumi:"machineDeploymentClass"`
}

// ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesInput is an input type that accepts ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesArgs and ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesInput` via:
//
//	ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesArgs{...}
type ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput
	ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutputWithContext(context.Context) ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput
}

// MatchResources selects templates based on where they are referenced.
type ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesArgs struct {
	// ControlPlane selects templates referenced in .spec.ControlPlane. Note: this will match the controlPlane and also the controlPlane machineInfrastructure (depending on the kind and apiVersion).
	ControlPlane pulumi.BoolPtrInput `pulumi:"controlPlane"`
	// InfrastructureCluster selects templates referenced in .spec.infrastructure.
	InfrastructureCluster pulumi.BoolPtrInput `pulumi:"infrastructureCluster"`
	// MachineDeploymentClass selects templates referenced in specific MachineDeploymentClasses in .spec.workers.machineDeployments.
	MachineDeploymentClass ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrInput `pulumi:"machineDeploymentClass"`
}

func (ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsSelectorMatchResources)(nil)).Elem()
}

func (i ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesArgs) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput {
	return i.ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesArgs) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput)
}

// MatchResources selects templates based on where they are referenced.
type ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsSelectorMatchResources)(nil)).Elem()
}

func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput {
	return o
}

// ControlPlane selects templates referenced in .spec.ControlPlane. Note: this will match the controlPlane and also the controlPlane machineInfrastructure (depending on the kind and apiVersion).
func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput) ControlPlane() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitionsSelectorMatchResources) *bool { return v.ControlPlane }).(pulumi.BoolPtrOutput)
}

// InfrastructureCluster selects templates referenced in .spec.infrastructure.
func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput) InfrastructureCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitionsSelectorMatchResources) *bool { return v.InfrastructureCluster }).(pulumi.BoolPtrOutput)
}

// MachineDeploymentClass selects templates referenced in specific MachineDeploymentClasses in .spec.workers.machineDeployments.
func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput) MachineDeploymentClass() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitionsSelectorMatchResources) *ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass {
		return v.MachineDeploymentClass
	}).(ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput)
}

// MachineDeploymentClass selects templates referenced in specific MachineDeploymentClasses in .spec.workers.machineDeployments.
type ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass struct {
	// Names selects templates by class names.
	Names []string `pulumi:"names"`
}

// ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassInput is an input type that accepts ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs and ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassInput` via:
//
//	ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs{...}
type ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput
	ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutputWithContext(context.Context) ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput
}

// MachineDeploymentClass selects templates referenced in specific MachineDeploymentClasses in .spec.workers.machineDeployments.
type ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs struct {
	// Names selects templates by class names.
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass)(nil)).Elem()
}

func (i ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput {
	return i.ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput)
}

func (i ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput {
	return i.ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput).ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutputWithContext(ctx)
}

// ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrInput is an input type that accepts ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs, ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtr and ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrInput` via:
//
//	        ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput
	ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutputWithContext(context.Context) ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput
}

type clusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrType ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs

func ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtr(v *ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs) ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrInput {
	return (*clusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrType)(v)
}

func (*clusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass)(nil)).Elem()
}

func (i *clusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrType) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput {
	return i.ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrType) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput)
}

// MachineDeploymentClass selects templates referenced in specific MachineDeploymentClasses in .spec.workers.machineDeployments.
type ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass)(nil)).Elem()
}

func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput {
	return o.ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass) *ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass {
		return &v
	}).(ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput)
}

// Names selects templates by class names.
func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass) []string {
		return v.Names
	}).(pulumi.StringArrayOutput)
}

type ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass)(nil)).Elem()
}

func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput) ToClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutputWithContext(ctx context.Context) ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput {
	return o
}

func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput) Elem() ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput {
	return o.ApplyT(func(v *ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass) ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass
		return ret
	}).(ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput)
}

// Names selects templates by class names.
func (o ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClass) []string {
		if v == nil {
			return nil
		}
		return v.Names
	}).(pulumi.StringArrayOutput)
}

// External defines an external patch. Note: Exactly one of Definitions or External must be set.
type ClusterClassSpecPatchesExternal struct {
	// DiscoverVariablesExtension references an extension which is called to discover variables.
	DiscoverVariablesExtension *string `pulumi:"discoverVariablesExtension"`
	// GenerateExtension references an extension which is called to generate patches.
	GenerateExtension *string `pulumi:"generateExtension"`
	// Settings defines key value pairs to be passed to the extensions. Values defined here take precedence over the values defined in the corresponding ExtensionConfig.
	Settings map[string]string `pulumi:"settings"`
	// ValidateExtension references an extension which is called to validate the topology.
	ValidateExtension *string `pulumi:"validateExtension"`
}

// ClusterClassSpecPatchesExternalInput is an input type that accepts ClusterClassSpecPatchesExternalArgs and ClusterClassSpecPatchesExternalOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesExternalInput` via:
//
//	ClusterClassSpecPatchesExternalArgs{...}
type ClusterClassSpecPatchesExternalInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesExternalOutput() ClusterClassSpecPatchesExternalOutput
	ToClusterClassSpecPatchesExternalOutputWithContext(context.Context) ClusterClassSpecPatchesExternalOutput
}

// External defines an external patch. Note: Exactly one of Definitions or External must be set.
type ClusterClassSpecPatchesExternalArgs struct {
	// DiscoverVariablesExtension references an extension which is called to discover variables.
	DiscoverVariablesExtension pulumi.StringPtrInput `pulumi:"discoverVariablesExtension"`
	// GenerateExtension references an extension which is called to generate patches.
	GenerateExtension pulumi.StringPtrInput `pulumi:"generateExtension"`
	// Settings defines key value pairs to be passed to the extensions. Values defined here take precedence over the values defined in the corresponding ExtensionConfig.
	Settings pulumi.StringMapInput `pulumi:"settings"`
	// ValidateExtension references an extension which is called to validate the topology.
	ValidateExtension pulumi.StringPtrInput `pulumi:"validateExtension"`
}

func (ClusterClassSpecPatchesExternalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesExternal)(nil)).Elem()
}

func (i ClusterClassSpecPatchesExternalArgs) ToClusterClassSpecPatchesExternalOutput() ClusterClassSpecPatchesExternalOutput {
	return i.ToClusterClassSpecPatchesExternalOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesExternalArgs) ToClusterClassSpecPatchesExternalOutputWithContext(ctx context.Context) ClusterClassSpecPatchesExternalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesExternalOutput)
}

func (i ClusterClassSpecPatchesExternalArgs) ToClusterClassSpecPatchesExternalPtrOutput() ClusterClassSpecPatchesExternalPtrOutput {
	return i.ToClusterClassSpecPatchesExternalPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecPatchesExternalArgs) ToClusterClassSpecPatchesExternalPtrOutputWithContext(ctx context.Context) ClusterClassSpecPatchesExternalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesExternalOutput).ToClusterClassSpecPatchesExternalPtrOutputWithContext(ctx)
}

// ClusterClassSpecPatchesExternalPtrInput is an input type that accepts ClusterClassSpecPatchesExternalArgs, ClusterClassSpecPatchesExternalPtr and ClusterClassSpecPatchesExternalPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecPatchesExternalPtrInput` via:
//
//	        ClusterClassSpecPatchesExternalArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecPatchesExternalPtrInput interface {
	pulumi.Input

	ToClusterClassSpecPatchesExternalPtrOutput() ClusterClassSpecPatchesExternalPtrOutput
	ToClusterClassSpecPatchesExternalPtrOutputWithContext(context.Context) ClusterClassSpecPatchesExternalPtrOutput
}

type clusterClassSpecPatchesExternalPtrType ClusterClassSpecPatchesExternalArgs

func ClusterClassSpecPatchesExternalPtr(v *ClusterClassSpecPatchesExternalArgs) ClusterClassSpecPatchesExternalPtrInput {
	return (*clusterClassSpecPatchesExternalPtrType)(v)
}

func (*clusterClassSpecPatchesExternalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecPatchesExternal)(nil)).Elem()
}

func (i *clusterClassSpecPatchesExternalPtrType) ToClusterClassSpecPatchesExternalPtrOutput() ClusterClassSpecPatchesExternalPtrOutput {
	return i.ToClusterClassSpecPatchesExternalPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecPatchesExternalPtrType) ToClusterClassSpecPatchesExternalPtrOutputWithContext(ctx context.Context) ClusterClassSpecPatchesExternalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecPatchesExternalPtrOutput)
}

// External defines an external patch. Note: Exactly one of Definitions or External must be set.
type ClusterClassSpecPatchesExternalOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesExternalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecPatchesExternal)(nil)).Elem()
}

func (o ClusterClassSpecPatchesExternalOutput) ToClusterClassSpecPatchesExternalOutput() ClusterClassSpecPatchesExternalOutput {
	return o
}

func (o ClusterClassSpecPatchesExternalOutput) ToClusterClassSpecPatchesExternalOutputWithContext(ctx context.Context) ClusterClassSpecPatchesExternalOutput {
	return o
}

func (o ClusterClassSpecPatchesExternalOutput) ToClusterClassSpecPatchesExternalPtrOutput() ClusterClassSpecPatchesExternalPtrOutput {
	return o.ToClusterClassSpecPatchesExternalPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecPatchesExternalOutput) ToClusterClassSpecPatchesExternalPtrOutputWithContext(ctx context.Context) ClusterClassSpecPatchesExternalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecPatchesExternal) *ClusterClassSpecPatchesExternal {
		return &v
	}).(ClusterClassSpecPatchesExternalPtrOutput)
}

// DiscoverVariablesExtension references an extension which is called to discover variables.
func (o ClusterClassSpecPatchesExternalOutput) DiscoverVariablesExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesExternal) *string { return v.DiscoverVariablesExtension }).(pulumi.StringPtrOutput)
}

// GenerateExtension references an extension which is called to generate patches.
func (o ClusterClassSpecPatchesExternalOutput) GenerateExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesExternal) *string { return v.GenerateExtension }).(pulumi.StringPtrOutput)
}

// Settings defines key value pairs to be passed to the extensions. Values defined here take precedence over the values defined in the corresponding ExtensionConfig.
func (o ClusterClassSpecPatchesExternalOutput) Settings() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesExternal) map[string]string { return v.Settings }).(pulumi.StringMapOutput)
}

// ValidateExtension references an extension which is called to validate the topology.
func (o ClusterClassSpecPatchesExternalOutput) ValidateExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecPatchesExternal) *string { return v.ValidateExtension }).(pulumi.StringPtrOutput)
}

type ClusterClassSpecPatchesExternalPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecPatchesExternalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecPatchesExternal)(nil)).Elem()
}

func (o ClusterClassSpecPatchesExternalPtrOutput) ToClusterClassSpecPatchesExternalPtrOutput() ClusterClassSpecPatchesExternalPtrOutput {
	return o
}

func (o ClusterClassSpecPatchesExternalPtrOutput) ToClusterClassSpecPatchesExternalPtrOutputWithContext(ctx context.Context) ClusterClassSpecPatchesExternalPtrOutput {
	return o
}

func (o ClusterClassSpecPatchesExternalPtrOutput) Elem() ClusterClassSpecPatchesExternalOutput {
	return o.ApplyT(func(v *ClusterClassSpecPatchesExternal) ClusterClassSpecPatchesExternal {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecPatchesExternal
		return ret
	}).(ClusterClassSpecPatchesExternalOutput)
}

// DiscoverVariablesExtension references an extension which is called to discover variables.
func (o ClusterClassSpecPatchesExternalPtrOutput) DiscoverVariablesExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecPatchesExternal) *string {
		if v == nil {
			return nil
		}
		return v.DiscoverVariablesExtension
	}).(pulumi.StringPtrOutput)
}

// GenerateExtension references an extension which is called to generate patches.
func (o ClusterClassSpecPatchesExternalPtrOutput) GenerateExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecPatchesExternal) *string {
		if v == nil {
			return nil
		}
		return v.GenerateExtension
	}).(pulumi.StringPtrOutput)
}

// Settings defines key value pairs to be passed to the extensions. Values defined here take precedence over the values defined in the corresponding ExtensionConfig.
func (o ClusterClassSpecPatchesExternalPtrOutput) Settings() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterClassSpecPatchesExternal) map[string]string {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(pulumi.StringMapOutput)
}

// ValidateExtension references an extension which is called to validate the topology.
func (o ClusterClassSpecPatchesExternalPtrOutput) ValidateExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecPatchesExternal) *string {
		if v == nil {
			return nil
		}
		return v.ValidateExtension
	}).(pulumi.StringPtrOutput)
}

// Settings defines key value pairs to be passed to the extensions. Values defined here take precedence over the values defined in the corresponding ExtensionConfig.
type ClusterClassSpecPatchesExternalSettings struct {
}

// ClusterClassVariable defines a variable which can be configured in the Cluster topology and used in patches.
type ClusterClassSpecVariables struct {
	// Name of the variable.
	Name string `pulumi:"name"`
	// Required specifies if the variable is required. Note: this applies to the variable as a whole and thus the top-level object defined in the schema. If nested fields are required, this will be specified inside the schema.
	Required bool `pulumi:"required"`
	// Schema defines the schema of the variable.
	Schema ClusterClassSpecVariablesSchema `pulumi:"schema"`
}

// ClusterClassSpecVariablesInput is an input type that accepts ClusterClassSpecVariablesArgs and ClusterClassSpecVariablesOutput values.
// You can construct a concrete instance of `ClusterClassSpecVariablesInput` via:
//
//	ClusterClassSpecVariablesArgs{...}
type ClusterClassSpecVariablesInput interface {
	pulumi.Input

	ToClusterClassSpecVariablesOutput() ClusterClassSpecVariablesOutput
	ToClusterClassSpecVariablesOutputWithContext(context.Context) ClusterClassSpecVariablesOutput
}

// ClusterClassVariable defines a variable which can be configured in the Cluster topology and used in patches.
type ClusterClassSpecVariablesArgs struct {
	// Name of the variable.
	Name pulumi.StringInput `pulumi:"name"`
	// Required specifies if the variable is required. Note: this applies to the variable as a whole and thus the top-level object defined in the schema. If nested fields are required, this will be specified inside the schema.
	Required pulumi.BoolInput `pulumi:"required"`
	// Schema defines the schema of the variable.
	Schema ClusterClassSpecVariablesSchemaInput `pulumi:"schema"`
}

func (ClusterClassSpecVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecVariables)(nil)).Elem()
}

func (i ClusterClassSpecVariablesArgs) ToClusterClassSpecVariablesOutput() ClusterClassSpecVariablesOutput {
	return i.ToClusterClassSpecVariablesOutputWithContext(context.Background())
}

func (i ClusterClassSpecVariablesArgs) ToClusterClassSpecVariablesOutputWithContext(ctx context.Context) ClusterClassSpecVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecVariablesOutput)
}

// ClusterClassSpecVariablesArrayInput is an input type that accepts ClusterClassSpecVariablesArray and ClusterClassSpecVariablesArrayOutput values.
// You can construct a concrete instance of `ClusterClassSpecVariablesArrayInput` via:
//
//	ClusterClassSpecVariablesArray{ ClusterClassSpecVariablesArgs{...} }
type ClusterClassSpecVariablesArrayInput interface {
	pulumi.Input

	ToClusterClassSpecVariablesArrayOutput() ClusterClassSpecVariablesArrayOutput
	ToClusterClassSpecVariablesArrayOutputWithContext(context.Context) ClusterClassSpecVariablesArrayOutput
}

type ClusterClassSpecVariablesArray []ClusterClassSpecVariablesInput

func (ClusterClassSpecVariablesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecVariables)(nil)).Elem()
}

func (i ClusterClassSpecVariablesArray) ToClusterClassSpecVariablesArrayOutput() ClusterClassSpecVariablesArrayOutput {
	return i.ToClusterClassSpecVariablesArrayOutputWithContext(context.Background())
}

func (i ClusterClassSpecVariablesArray) ToClusterClassSpecVariablesArrayOutputWithContext(ctx context.Context) ClusterClassSpecVariablesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecVariablesArrayOutput)
}

// ClusterClassVariable defines a variable which can be configured in the Cluster topology and used in patches.
type ClusterClassSpecVariablesOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecVariables)(nil)).Elem()
}

func (o ClusterClassSpecVariablesOutput) ToClusterClassSpecVariablesOutput() ClusterClassSpecVariablesOutput {
	return o
}

func (o ClusterClassSpecVariablesOutput) ToClusterClassSpecVariablesOutputWithContext(ctx context.Context) ClusterClassSpecVariablesOutput {
	return o
}

// Name of the variable.
func (o ClusterClassSpecVariablesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecVariables) string { return v.Name }).(pulumi.StringOutput)
}

// Required specifies if the variable is required. Note: this applies to the variable as a whole and thus the top-level object defined in the schema. If nested fields are required, this will be specified inside the schema.
func (o ClusterClassSpecVariablesOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterClassSpecVariables) bool { return v.Required }).(pulumi.BoolOutput)
}

// Schema defines the schema of the variable.
func (o ClusterClassSpecVariablesOutput) Schema() ClusterClassSpecVariablesSchemaOutput {
	return o.ApplyT(func(v ClusterClassSpecVariables) ClusterClassSpecVariablesSchema { return v.Schema }).(ClusterClassSpecVariablesSchemaOutput)
}

type ClusterClassSpecVariablesArrayOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecVariablesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecVariables)(nil)).Elem()
}

func (o ClusterClassSpecVariablesArrayOutput) ToClusterClassSpecVariablesArrayOutput() ClusterClassSpecVariablesArrayOutput {
	return o
}

func (o ClusterClassSpecVariablesArrayOutput) ToClusterClassSpecVariablesArrayOutputWithContext(ctx context.Context) ClusterClassSpecVariablesArrayOutput {
	return o
}

func (o ClusterClassSpecVariablesArrayOutput) Index(i pulumi.IntInput) ClusterClassSpecVariablesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClassSpecVariables {
		return vs[0].([]ClusterClassSpecVariables)[vs[1].(int)]
	}).(ClusterClassSpecVariablesOutput)
}

// Schema defines the schema of the variable.
type ClusterClassSpecVariablesSchema struct {
	// OpenAPIV3Schema defines the schema of a variable via OpenAPI v3 schema. The schema is a subset of the schema used in Kubernetes CRDs.
	OpenAPIV3Schema ClusterClassSpecVariablesSchemaOpenAPIV3Schema `pulumi:"openAPIV3Schema"`
}

// ClusterClassSpecVariablesSchemaInput is an input type that accepts ClusterClassSpecVariablesSchemaArgs and ClusterClassSpecVariablesSchemaOutput values.
// You can construct a concrete instance of `ClusterClassSpecVariablesSchemaInput` via:
//
//	ClusterClassSpecVariablesSchemaArgs{...}
type ClusterClassSpecVariablesSchemaInput interface {
	pulumi.Input

	ToClusterClassSpecVariablesSchemaOutput() ClusterClassSpecVariablesSchemaOutput
	ToClusterClassSpecVariablesSchemaOutputWithContext(context.Context) ClusterClassSpecVariablesSchemaOutput
}

// Schema defines the schema of the variable.
type ClusterClassSpecVariablesSchemaArgs struct {
	// OpenAPIV3Schema defines the schema of a variable via OpenAPI v3 schema. The schema is a subset of the schema used in Kubernetes CRDs.
	OpenAPIV3Schema ClusterClassSpecVariablesSchemaOpenAPIV3SchemaInput `pulumi:"openAPIV3Schema"`
}

func (ClusterClassSpecVariablesSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecVariablesSchema)(nil)).Elem()
}

func (i ClusterClassSpecVariablesSchemaArgs) ToClusterClassSpecVariablesSchemaOutput() ClusterClassSpecVariablesSchemaOutput {
	return i.ToClusterClassSpecVariablesSchemaOutputWithContext(context.Background())
}

func (i ClusterClassSpecVariablesSchemaArgs) ToClusterClassSpecVariablesSchemaOutputWithContext(ctx context.Context) ClusterClassSpecVariablesSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecVariablesSchemaOutput)
}

// Schema defines the schema of the variable.
type ClusterClassSpecVariablesSchemaOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecVariablesSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecVariablesSchema)(nil)).Elem()
}

func (o ClusterClassSpecVariablesSchemaOutput) ToClusterClassSpecVariablesSchemaOutput() ClusterClassSpecVariablesSchemaOutput {
	return o
}

func (o ClusterClassSpecVariablesSchemaOutput) ToClusterClassSpecVariablesSchemaOutputWithContext(ctx context.Context) ClusterClassSpecVariablesSchemaOutput {
	return o
}

// OpenAPIV3Schema defines the schema of a variable via OpenAPI v3 schema. The schema is a subset of the schema used in Kubernetes CRDs.
func (o ClusterClassSpecVariablesSchemaOutput) OpenAPIV3Schema() ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchema) ClusterClassSpecVariablesSchemaOpenAPIV3Schema {
		return v.OpenAPIV3Schema
	}).(ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput)
}

// OpenAPIV3Schema defines the schema of a variable via OpenAPI v3 schema. The schema is a subset of the schema used in Kubernetes CRDs.
type ClusterClassSpecVariablesSchemaOpenAPIV3Schema struct {
	// AdditionalProperties specifies the schema of values in a map (keys are always strings). NOTE: Can only be set if type is object. NOTE: AdditionalProperties is mutually exclusive with Properties. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
	AdditionalProperties map[string]interface{} `pulumi:"additionalProperties"`
	// Default is the default value of the variable. NOTE: Can be set for all types.
	Default map[string]interface{} `pulumi:"default"`
	// Description is a human-readable description of this variable.
	Description *string `pulumi:"description"`
	// Enum is the list of valid values of the variable. NOTE: Can be set for all types.
	Enum []map[string]interface{} `pulumi:"enum"`
	// Example is an example for this variable.
	Example map[string]interface{} `pulumi:"example"`
	// ExclusiveMaximum specifies if the Maximum is exclusive. NOTE: Can only be set if type is integer or number.
	ExclusiveMaximum *bool `pulumi:"exclusiveMaximum"`
	// ExclusiveMinimum specifies if the Minimum is exclusive. NOTE: Can only be set if type is integer or number.
	ExclusiveMinimum *bool `pulumi:"exclusiveMinimum"`
	// Format is an OpenAPI v3 format string. Unknown formats are ignored. For a list of supported formats please see: (of the k8s.io/apiextensions-apiserver version we're currently using) https://github.com/kubernetes/apiextensions-apiserver/blob/master/pkg/apiserver/validation/formats.go NOTE: Can only be set if type is string.
	Format *string `pulumi:"format"`
	// Items specifies fields of an array. NOTE: Can only be set if type is array. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
	Items map[string]interface{} `pulumi:"items"`
	// MaxItems is the max length of an array variable. NOTE: Can only be set if type is array.
	MaxItems *int `pulumi:"maxItems"`
	// MaxLength is the max length of a string variable. NOTE: Can only be set if type is string.
	MaxLength *int `pulumi:"maxLength"`
	// Maximum is the maximum of an integer or number variable. If ExclusiveMaximum is false, the variable is valid if it is lower than, or equal to, the value of Maximum. If ExclusiveMaximum is true, the variable is valid if it is strictly lower than the value of Maximum. NOTE: Can only be set if type is integer or number.
	Maximum *int `pulumi:"maximum"`
	// MinItems is the min length of an array variable. NOTE: Can only be set if type is array.
	MinItems *int `pulumi:"minItems"`
	// MinLength is the min length of a string variable. NOTE: Can only be set if type is string.
	MinLength *int `pulumi:"minLength"`
	// Minimum is the minimum of an integer or number variable. If ExclusiveMinimum is false, the variable is valid if it is greater than, or equal to, the value of Minimum. If ExclusiveMinimum is true, the variable is valid if it is strictly greater than the value of Minimum. NOTE: Can only be set if type is integer or number.
	Minimum *int `pulumi:"minimum"`
	// Pattern is the regex which a string variable must match. NOTE: Can only be set if type is string.
	Pattern *string `pulumi:"pattern"`
	// Properties specifies fields of an object. NOTE: Can only be set if type is object. NOTE: Properties is mutually exclusive with AdditionalProperties. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
	Properties map[string]interface{} `pulumi:"properties"`
	// Required specifies which fields of an object are required. NOTE: Can only be set if type is object.
	Required []string `pulumi:"required"`
	// Type is the type of the variable. Valid values are: object, array, string, integer, number or boolean.
	Type string `pulumi:"type"`
	// UniqueItems specifies if items in an array must be unique. NOTE: Can only be set if type is array.
	UniqueItems *bool `pulumi:"uniqueItems"`
	// XPreserveUnknownFields allows setting fields in a variable object which are not defined in the variable schema. This affects fields recursively, except if nested properties or additionalProperties are specified in the schema.
	XKubernetesPreserveUnknownFields *bool `pulumi:"x-kubernetes-preserve-unknown-fields"`
}

// ClusterClassSpecVariablesSchemaOpenAPIV3SchemaInput is an input type that accepts ClusterClassSpecVariablesSchemaOpenAPIV3SchemaArgs and ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput values.
// You can construct a concrete instance of `ClusterClassSpecVariablesSchemaOpenAPIV3SchemaInput` via:
//
//	ClusterClassSpecVariablesSchemaOpenAPIV3SchemaArgs{...}
type ClusterClassSpecVariablesSchemaOpenAPIV3SchemaInput interface {
	pulumi.Input

	ToClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput() ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput
	ToClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutputWithContext(context.Context) ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput
}

// OpenAPIV3Schema defines the schema of a variable via OpenAPI v3 schema. The schema is a subset of the schema used in Kubernetes CRDs.
type ClusterClassSpecVariablesSchemaOpenAPIV3SchemaArgs struct {
	// AdditionalProperties specifies the schema of values in a map (keys are always strings). NOTE: Can only be set if type is object. NOTE: AdditionalProperties is mutually exclusive with Properties. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
	AdditionalProperties pulumi.MapInput `pulumi:"additionalProperties"`
	// Default is the default value of the variable. NOTE: Can be set for all types.
	Default pulumi.MapInput `pulumi:"default"`
	// Description is a human-readable description of this variable.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum is the list of valid values of the variable. NOTE: Can be set for all types.
	Enum pulumi.MapArrayInput `pulumi:"enum"`
	// Example is an example for this variable.
	Example pulumi.MapInput `pulumi:"example"`
	// ExclusiveMaximum specifies if the Maximum is exclusive. NOTE: Can only be set if type is integer or number.
	ExclusiveMaximum pulumi.BoolPtrInput `pulumi:"exclusiveMaximum"`
	// ExclusiveMinimum specifies if the Minimum is exclusive. NOTE: Can only be set if type is integer or number.
	ExclusiveMinimum pulumi.BoolPtrInput `pulumi:"exclusiveMinimum"`
	// Format is an OpenAPI v3 format string. Unknown formats are ignored. For a list of supported formats please see: (of the k8s.io/apiextensions-apiserver version we're currently using) https://github.com/kubernetes/apiextensions-apiserver/blob/master/pkg/apiserver/validation/formats.go NOTE: Can only be set if type is string.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Items specifies fields of an array. NOTE: Can only be set if type is array. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
	Items pulumi.MapInput `pulumi:"items"`
	// MaxItems is the max length of an array variable. NOTE: Can only be set if type is array.
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// MaxLength is the max length of a string variable. NOTE: Can only be set if type is string.
	MaxLength pulumi.IntPtrInput `pulumi:"maxLength"`
	// Maximum is the maximum of an integer or number variable. If ExclusiveMaximum is false, the variable is valid if it is lower than, or equal to, the value of Maximum. If ExclusiveMaximum is true, the variable is valid if it is strictly lower than the value of Maximum. NOTE: Can only be set if type is integer or number.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// MinItems is the min length of an array variable. NOTE: Can only be set if type is array.
	MinItems pulumi.IntPtrInput `pulumi:"minItems"`
	// MinLength is the min length of a string variable. NOTE: Can only be set if type is string.
	MinLength pulumi.IntPtrInput `pulumi:"minLength"`
	// Minimum is the minimum of an integer or number variable. If ExclusiveMinimum is false, the variable is valid if it is greater than, or equal to, the value of Minimum. If ExclusiveMinimum is true, the variable is valid if it is strictly greater than the value of Minimum. NOTE: Can only be set if type is integer or number.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// Pattern is the regex which a string variable must match. NOTE: Can only be set if type is string.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Properties specifies fields of an object. NOTE: Can only be set if type is object. NOTE: Properties is mutually exclusive with AdditionalProperties. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
	Properties pulumi.MapInput `pulumi:"properties"`
	// Required specifies which fields of an object are required. NOTE: Can only be set if type is object.
	Required pulumi.StringArrayInput `pulumi:"required"`
	// Type is the type of the variable. Valid values are: object, array, string, integer, number or boolean.
	Type pulumi.StringInput `pulumi:"type"`
	// UniqueItems specifies if items in an array must be unique. NOTE: Can only be set if type is array.
	UniqueItems pulumi.BoolPtrInput `pulumi:"uniqueItems"`
	// XPreserveUnknownFields allows setting fields in a variable object which are not defined in the variable schema. This affects fields recursively, except if nested properties or additionalProperties are specified in the schema.
	XKubernetesPreserveUnknownFields pulumi.BoolPtrInput `pulumi:"x-kubernetes-preserve-unknown-fields"`
}

func (ClusterClassSpecVariablesSchemaOpenAPIV3SchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecVariablesSchemaOpenAPIV3Schema)(nil)).Elem()
}

func (i ClusterClassSpecVariablesSchemaOpenAPIV3SchemaArgs) ToClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput() ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput {
	return i.ToClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutputWithContext(context.Background())
}

func (i ClusterClassSpecVariablesSchemaOpenAPIV3SchemaArgs) ToClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutputWithContext(ctx context.Context) ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput)
}

// OpenAPIV3Schema defines the schema of a variable via OpenAPI v3 schema. The schema is a subset of the schema used in Kubernetes CRDs.
type ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecVariablesSchemaOpenAPIV3Schema)(nil)).Elem()
}

func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) ToClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput() ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput {
	return o
}

func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) ToClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutputWithContext(ctx context.Context) ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput {
	return o
}

// AdditionalProperties specifies the schema of values in a map (keys are always strings). NOTE: Can only be set if type is object. NOTE: AdditionalProperties is mutually exclusive with Properties. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) AdditionalProperties() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) map[string]interface{} {
		return v.AdditionalProperties
	}).(pulumi.MapOutput)
}

// Default is the default value of the variable. NOTE: Can be set for all types.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) Default() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) map[string]interface{} { return v.Default }).(pulumi.MapOutput)
}

// Description is a human-readable description of this variable.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum is the list of valid values of the variable. NOTE: Can be set for all types.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) Enum() pulumi.MapArrayOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) []map[string]interface{} { return v.Enum }).(pulumi.MapArrayOutput)
}

// Example is an example for this variable.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) Example() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) map[string]interface{} { return v.Example }).(pulumi.MapOutput)
}

// ExclusiveMaximum specifies if the Maximum is exclusive. NOTE: Can only be set if type is integer or number.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) ExclusiveMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) *bool { return v.ExclusiveMaximum }).(pulumi.BoolPtrOutput)
}

// ExclusiveMinimum specifies if the Minimum is exclusive. NOTE: Can only be set if type is integer or number.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) ExclusiveMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) *bool { return v.ExclusiveMinimum }).(pulumi.BoolPtrOutput)
}

// Format is an OpenAPI v3 format string. Unknown formats are ignored. For a list of supported formats please see: (of the k8s.io/apiextensions-apiserver version we're currently using) https://github.com/kubernetes/apiextensions-apiserver/blob/master/pkg/apiserver/validation/formats.go NOTE: Can only be set if type is string.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Items specifies fields of an array. NOTE: Can only be set if type is array. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) Items() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) map[string]interface{} { return v.Items }).(pulumi.MapOutput)
}

// MaxItems is the max length of an array variable. NOTE: Can only be set if type is array.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// MaxLength is the max length of a string variable. NOTE: Can only be set if type is string.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) *int { return v.MaxLength }).(pulumi.IntPtrOutput)
}

// Maximum is the maximum of an integer or number variable. If ExclusiveMaximum is false, the variable is valid if it is lower than, or equal to, the value of Maximum. If ExclusiveMaximum is true, the variable is valid if it is strictly lower than the value of Maximum. NOTE: Can only be set if type is integer or number.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// MinItems is the min length of an array variable. NOTE: Can only be set if type is array.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) MinItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) *int { return v.MinItems }).(pulumi.IntPtrOutput)
}

// MinLength is the min length of a string variable. NOTE: Can only be set if type is string.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) *int { return v.MinLength }).(pulumi.IntPtrOutput)
}

// Minimum is the minimum of an integer or number variable. If ExclusiveMinimum is false, the variable is valid if it is greater than, or equal to, the value of Minimum. If ExclusiveMinimum is true, the variable is valid if it is strictly greater than the value of Minimum. NOTE: Can only be set if type is integer or number.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Pattern is the regex which a string variable must match. NOTE: Can only be set if type is string.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Properties specifies fields of an object. NOTE: Can only be set if type is object. NOTE: Properties is mutually exclusive with AdditionalProperties. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) Properties() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) map[string]interface{} { return v.Properties }).(pulumi.MapOutput)
}

// Required specifies which fields of an object are required. NOTE: Can only be set if type is object.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) Required() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) []string { return v.Required }).(pulumi.StringArrayOutput)
}

// Type is the type of the variable. Valid values are: object, array, string, integer, number or boolean.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) string { return v.Type }).(pulumi.StringOutput)
}

// UniqueItems specifies if items in an array must be unique. NOTE: Can only be set if type is array.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) UniqueItems() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) *bool { return v.UniqueItems }).(pulumi.BoolPtrOutput)
}

// XPreserveUnknownFields allows setting fields in a variable object which are not defined in the variable schema. This affects fields recursively, except if nested properties or additionalProperties are specified in the schema.
func (o ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput) XKubernetesPreserveUnknownFields() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecVariablesSchemaOpenAPIV3Schema) *bool {
		return v.XKubernetesPreserveUnknownFields
	}).(pulumi.BoolPtrOutput)
}

// Workers describes the worker nodes for the cluster. It is a collection of node types which can be used to create the worker nodes of the cluster.
type ClusterClassSpecWorkers struct {
	// MachineDeployments is a list of machine deployment classes that can be used to create a set of worker nodes.
	MachineDeployments []ClusterClassSpecWorkersMachineDeployments `pulumi:"machineDeployments"`
}

// ClusterClassSpecWorkersInput is an input type that accepts ClusterClassSpecWorkersArgs and ClusterClassSpecWorkersOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersInput` via:
//
//	ClusterClassSpecWorkersArgs{...}
type ClusterClassSpecWorkersInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersOutput() ClusterClassSpecWorkersOutput
	ToClusterClassSpecWorkersOutputWithContext(context.Context) ClusterClassSpecWorkersOutput
}

// Workers describes the worker nodes for the cluster. It is a collection of node types which can be used to create the worker nodes of the cluster.
type ClusterClassSpecWorkersArgs struct {
	// MachineDeployments is a list of machine deployment classes that can be used to create a set of worker nodes.
	MachineDeployments ClusterClassSpecWorkersMachineDeploymentsArrayInput `pulumi:"machineDeployments"`
}

func (ClusterClassSpecWorkersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkers)(nil)).Elem()
}

func (i ClusterClassSpecWorkersArgs) ToClusterClassSpecWorkersOutput() ClusterClassSpecWorkersOutput {
	return i.ToClusterClassSpecWorkersOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersArgs) ToClusterClassSpecWorkersOutputWithContext(ctx context.Context) ClusterClassSpecWorkersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersOutput)
}

func (i ClusterClassSpecWorkersArgs) ToClusterClassSpecWorkersPtrOutput() ClusterClassSpecWorkersPtrOutput {
	return i.ToClusterClassSpecWorkersPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersArgs) ToClusterClassSpecWorkersPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersOutput).ToClusterClassSpecWorkersPtrOutputWithContext(ctx)
}

// ClusterClassSpecWorkersPtrInput is an input type that accepts ClusterClassSpecWorkersArgs, ClusterClassSpecWorkersPtr and ClusterClassSpecWorkersPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersPtrInput` via:
//
//	        ClusterClassSpecWorkersArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecWorkersPtrInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersPtrOutput() ClusterClassSpecWorkersPtrOutput
	ToClusterClassSpecWorkersPtrOutputWithContext(context.Context) ClusterClassSpecWorkersPtrOutput
}

type clusterClassSpecWorkersPtrType ClusterClassSpecWorkersArgs

func ClusterClassSpecWorkersPtr(v *ClusterClassSpecWorkersArgs) ClusterClassSpecWorkersPtrInput {
	return (*clusterClassSpecWorkersPtrType)(v)
}

func (*clusterClassSpecWorkersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkers)(nil)).Elem()
}

func (i *clusterClassSpecWorkersPtrType) ToClusterClassSpecWorkersPtrOutput() ClusterClassSpecWorkersPtrOutput {
	return i.ToClusterClassSpecWorkersPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecWorkersPtrType) ToClusterClassSpecWorkersPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersPtrOutput)
}

// Workers describes the worker nodes for the cluster. It is a collection of node types which can be used to create the worker nodes of the cluster.
type ClusterClassSpecWorkersOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkers)(nil)).Elem()
}

func (o ClusterClassSpecWorkersOutput) ToClusterClassSpecWorkersOutput() ClusterClassSpecWorkersOutput {
	return o
}

func (o ClusterClassSpecWorkersOutput) ToClusterClassSpecWorkersOutputWithContext(ctx context.Context) ClusterClassSpecWorkersOutput {
	return o
}

func (o ClusterClassSpecWorkersOutput) ToClusterClassSpecWorkersPtrOutput() ClusterClassSpecWorkersPtrOutput {
	return o.ToClusterClassSpecWorkersPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecWorkersOutput) ToClusterClassSpecWorkersPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecWorkers) *ClusterClassSpecWorkers {
		return &v
	}).(ClusterClassSpecWorkersPtrOutput)
}

// MachineDeployments is a list of machine deployment classes that can be used to create a set of worker nodes.
func (o ClusterClassSpecWorkersOutput) MachineDeployments() ClusterClassSpecWorkersMachineDeploymentsArrayOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkers) []ClusterClassSpecWorkersMachineDeployments {
		return v.MachineDeployments
	}).(ClusterClassSpecWorkersMachineDeploymentsArrayOutput)
}

type ClusterClassSpecWorkersPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkers)(nil)).Elem()
}

func (o ClusterClassSpecWorkersPtrOutput) ToClusterClassSpecWorkersPtrOutput() ClusterClassSpecWorkersPtrOutput {
	return o
}

func (o ClusterClassSpecWorkersPtrOutput) ToClusterClassSpecWorkersPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersPtrOutput {
	return o
}

func (o ClusterClassSpecWorkersPtrOutput) Elem() ClusterClassSpecWorkersOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkers) ClusterClassSpecWorkers {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecWorkers
		return ret
	}).(ClusterClassSpecWorkersOutput)
}

// MachineDeployments is a list of machine deployment classes that can be used to create a set of worker nodes.
func (o ClusterClassSpecWorkersPtrOutput) MachineDeployments() ClusterClassSpecWorkersMachineDeploymentsArrayOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkers) []ClusterClassSpecWorkersMachineDeployments {
		if v == nil {
			return nil
		}
		return v.MachineDeployments
	}).(ClusterClassSpecWorkersMachineDeploymentsArrayOutput)
}

// MachineDeploymentClass serves as a template to define a set of worker nodes of the cluster provisioned using the `ClusterClass`.
type ClusterClassSpecWorkersMachineDeployments struct {
	// Class denotes a type of worker node present in the cluster, this name MUST be unique within a ClusterClass and can be referenced in the Cluster to create a managed MachineDeployment.
	Class string `pulumi:"class"`
	// FailureDomain is the failure domain the machines will be created in. Must match a key in the FailureDomains map stored on the cluster object. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
	FailureDomain *string `pulumi:"failureDomain"`
	// MachineHealthCheck defines a MachineHealthCheck for this MachineDeploymentClass.
	MachineHealthCheck *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck `pulumi:"machineHealthCheck"`
	// Minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready) NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
	MinReadySeconds *int `pulumi:"minReadySeconds"`
	// NamingStrategy allows changing the naming pattern used when creating the MachineDeployment.
	NamingStrategy *ClusterClassSpecWorkersMachineDeploymentsNamingStrategy `pulumi:"namingStrategy"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
	NodeDeletionTimeout *string `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout` NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
	NodeDrainTimeout *string `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
	NodeVolumeDetachTimeout *string `pulumi:"nodeVolumeDetachTimeout"`
	// The deployment strategy to use to replace existing machines with new ones. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
	Strategy *ClusterClassSpecWorkersMachineDeploymentsStrategy `pulumi:"strategy"`
	// Template is a local struct containing a collection of templates for creation of MachineDeployment objects representing a set of worker nodes.
	Template ClusterClassSpecWorkersMachineDeploymentsTemplate `pulumi:"template"`
}

// ClusterClassSpecWorkersMachineDeploymentsInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsArgs and ClusterClassSpecWorkersMachineDeploymentsOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsArgs{...}
type ClusterClassSpecWorkersMachineDeploymentsInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsOutput() ClusterClassSpecWorkersMachineDeploymentsOutput
	ToClusterClassSpecWorkersMachineDeploymentsOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsOutput
}

// MachineDeploymentClass serves as a template to define a set of worker nodes of the cluster provisioned using the `ClusterClass`.
type ClusterClassSpecWorkersMachineDeploymentsArgs struct {
	// Class denotes a type of worker node present in the cluster, this name MUST be unique within a ClusterClass and can be referenced in the Cluster to create a managed MachineDeployment.
	Class pulumi.StringInput `pulumi:"class"`
	// FailureDomain is the failure domain the machines will be created in. Must match a key in the FailureDomains map stored on the cluster object. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
	FailureDomain pulumi.StringPtrInput `pulumi:"failureDomain"`
	// MachineHealthCheck defines a MachineHealthCheck for this MachineDeploymentClass.
	MachineHealthCheck ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrInput `pulumi:"machineHealthCheck"`
	// Minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready) NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
	MinReadySeconds pulumi.IntPtrInput `pulumi:"minReadySeconds"`
	// NamingStrategy allows changing the naming pattern used when creating the MachineDeployment.
	NamingStrategy ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrInput `pulumi:"namingStrategy"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
	NodeDeletionTimeout pulumi.StringPtrInput `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout` NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
	NodeDrainTimeout pulumi.StringPtrInput `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
	NodeVolumeDetachTimeout pulumi.StringPtrInput `pulumi:"nodeVolumeDetachTimeout"`
	// The deployment strategy to use to replace existing machines with new ones. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
	Strategy ClusterClassSpecWorkersMachineDeploymentsStrategyPtrInput `pulumi:"strategy"`
	// Template is a local struct containing a collection of templates for creation of MachineDeployment objects representing a set of worker nodes.
	Template ClusterClassSpecWorkersMachineDeploymentsTemplateInput `pulumi:"template"`
}

func (ClusterClassSpecWorkersMachineDeploymentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeployments)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsArgs) ToClusterClassSpecWorkersMachineDeploymentsOutput() ClusterClassSpecWorkersMachineDeploymentsOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsArgs) ToClusterClassSpecWorkersMachineDeploymentsOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsOutput)
}

// ClusterClassSpecWorkersMachineDeploymentsArrayInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsArray and ClusterClassSpecWorkersMachineDeploymentsArrayOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsArrayInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsArray{ ClusterClassSpecWorkersMachineDeploymentsArgs{...} }
type ClusterClassSpecWorkersMachineDeploymentsArrayInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsArrayOutput() ClusterClassSpecWorkersMachineDeploymentsArrayOutput
	ToClusterClassSpecWorkersMachineDeploymentsArrayOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsArrayOutput
}

type ClusterClassSpecWorkersMachineDeploymentsArray []ClusterClassSpecWorkersMachineDeploymentsInput

func (ClusterClassSpecWorkersMachineDeploymentsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecWorkersMachineDeployments)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsArray) ToClusterClassSpecWorkersMachineDeploymentsArrayOutput() ClusterClassSpecWorkersMachineDeploymentsArrayOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsArrayOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsArray) ToClusterClassSpecWorkersMachineDeploymentsArrayOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsArrayOutput)
}

// MachineDeploymentClass serves as a template to define a set of worker nodes of the cluster provisioned using the `ClusterClass`.
type ClusterClassSpecWorkersMachineDeploymentsOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeployments)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsOutput) ToClusterClassSpecWorkersMachineDeploymentsOutput() ClusterClassSpecWorkersMachineDeploymentsOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsOutput) ToClusterClassSpecWorkersMachineDeploymentsOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsOutput {
	return o
}

// Class denotes a type of worker node present in the cluster, this name MUST be unique within a ClusterClass and can be referenced in the Cluster to create a managed MachineDeployment.
func (o ClusterClassSpecWorkersMachineDeploymentsOutput) Class() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeployments) string { return v.Class }).(pulumi.StringOutput)
}

// FailureDomain is the failure domain the machines will be created in. Must match a key in the FailureDomains map stored on the cluster object. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
func (o ClusterClassSpecWorkersMachineDeploymentsOutput) FailureDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeployments) *string { return v.FailureDomain }).(pulumi.StringPtrOutput)
}

// MachineHealthCheck defines a MachineHealthCheck for this MachineDeploymentClass.
func (o ClusterClassSpecWorkersMachineDeploymentsOutput) MachineHealthCheck() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeployments) *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck {
		return v.MachineHealthCheck
	}).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput)
}

// Minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready) NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
func (o ClusterClassSpecWorkersMachineDeploymentsOutput) MinReadySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeployments) *int { return v.MinReadySeconds }).(pulumi.IntPtrOutput)
}

// NamingStrategy allows changing the naming pattern used when creating the MachineDeployment.
func (o ClusterClassSpecWorkersMachineDeploymentsOutput) NamingStrategy() ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeployments) *ClusterClassSpecWorkersMachineDeploymentsNamingStrategy {
		return v.NamingStrategy
	}).(ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
func (o ClusterClassSpecWorkersMachineDeploymentsOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeployments) *string { return v.NodeDeletionTimeout }).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout` NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
func (o ClusterClassSpecWorkersMachineDeploymentsOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeployments) *string { return v.NodeDrainTimeout }).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
func (o ClusterClassSpecWorkersMachineDeploymentsOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeployments) *string { return v.NodeVolumeDetachTimeout }).(pulumi.StringPtrOutput)
}

// The deployment strategy to use to replace existing machines with new ones. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
func (o ClusterClassSpecWorkersMachineDeploymentsOutput) Strategy() ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeployments) *ClusterClassSpecWorkersMachineDeploymentsStrategy {
		return v.Strategy
	}).(ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput)
}

// Template is a local struct containing a collection of templates for creation of MachineDeployment objects representing a set of worker nodes.
func (o ClusterClassSpecWorkersMachineDeploymentsOutput) Template() ClusterClassSpecWorkersMachineDeploymentsTemplateOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeployments) ClusterClassSpecWorkersMachineDeploymentsTemplate {
		return v.Template
	}).(ClusterClassSpecWorkersMachineDeploymentsTemplateOutput)
}

type ClusterClassSpecWorkersMachineDeploymentsArrayOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecWorkersMachineDeployments)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsArrayOutput) ToClusterClassSpecWorkersMachineDeploymentsArrayOutput() ClusterClassSpecWorkersMachineDeploymentsArrayOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsArrayOutput) ToClusterClassSpecWorkersMachineDeploymentsArrayOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsArrayOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsArrayOutput) Index(i pulumi.IntInput) ClusterClassSpecWorkersMachineDeploymentsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClassSpecWorkersMachineDeployments {
		return vs[0].([]ClusterClassSpecWorkersMachineDeployments)[vs[1].(int)]
	}).(ClusterClassSpecWorkersMachineDeploymentsOutput)
}

// MachineHealthCheck defines a MachineHealthCheck for this MachineDeploymentClass.
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck struct {
	// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
	MaxUnhealthy interface{} `pulumi:"maxUnhealthy"`
	// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
	NodeStartupTimeout *string `pulumi:"nodeStartupTimeout"`
	// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
	//  This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
	RemediationTemplate *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate `pulumi:"remediationTemplate"`
	// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
	UnhealthyConditions []ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions `pulumi:"unhealthyConditions"`
	// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
	UnhealthyRange *string `pulumi:"unhealthyRange"`
}

// ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs and ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs{...}
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput
	ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput
}

// MachineHealthCheck defines a MachineHealthCheck for this MachineDeploymentClass.
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs struct {
	// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
	MaxUnhealthy pulumi.Input `pulumi:"maxUnhealthy"`
	// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
	NodeStartupTimeout pulumi.StringPtrInput `pulumi:"nodeStartupTimeout"`
	// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
	//  This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
	RemediationTemplate ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrInput `pulumi:"remediationTemplate"`
	// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
	UnhealthyConditions ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayInput `pulumi:"unhealthyConditions"`
	// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
	UnhealthyRange pulumi.StringPtrInput `pulumi:"unhealthyRange"`
}

func (ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput)
}

func (i ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput).ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(ctx)
}

// ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs, ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtr and ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrInput` via:
//
//	        ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput
	ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput
}

type clusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrType ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs

func ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtr(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrInput {
	return (*clusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrType)(v)
}

func (*clusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck)(nil)).Elem()
}

func (i *clusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrType) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrType) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput)
}

// MachineHealthCheck defines a MachineHealthCheck for this MachineDeploymentClass.
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return o.ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck) *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck {
		return &v
	}).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput)
}

// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput) MaxUnhealthy() pulumi.AnyOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck) interface{} { return v.MaxUnhealthy }).(pulumi.AnyOutput)
}

// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput) NodeStartupTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck) *string {
		return v.NodeStartupTimeout
	}).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput) RemediationTemplate() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck) *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate {
		return v.RemediationTemplate
	}).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput)
}

// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput) UnhealthyConditions() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck) []ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions {
		return v.UnhealthyConditions
	}).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput)
}

// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput) UnhealthyRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck) *string { return v.UnhealthyRange }).(pulumi.StringPtrOutput)
}

type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput) Elem() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck
		return ret
	}).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput)
}

// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput) MaxUnhealthy() pulumi.AnyOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnhealthy
	}).(pulumi.AnyOutput)
}

// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput) NodeStartupTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.NodeStartupTimeout
	}).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput) RemediationTemplate() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck) *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate {
		if v == nil {
			return nil
		}
		return v.RemediationTemplate
	}).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput)
}

// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput) UnhealthyConditions() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck) []ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions {
		if v == nil {
			return nil
		}
		return v.UnhealthyConditions
	}).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput)
}

// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput) UnhealthyRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.UnhealthyRange
	}).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs and ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs{...}
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput
	ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput)
}

func (i ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput).ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx)
}

// ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs, ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtr and ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrInput` via:
//
//	        ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput
	ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput
}

type clusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrType ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs

func ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtr(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrInput {
	return (*clusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrType)(v)
}

func (*clusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (i *clusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrType) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrType) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate {
		return &v
	}).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput)
}

// API version of the referent.
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) Elem() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate
		return ret
	}).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput)
}

// API version of the referent.
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions struct {
	Status  string `pulumi:"status"`
	Timeout string `pulumi:"timeout"`
	Type    string `pulumi:"type"`
}

// ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs and ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs{...}
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput
	ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs struct {
	Status  pulumi.StringInput `pulumi:"status"`
	Timeout pulumi.StringInput `pulumi:"timeout"`
	Type    pulumi.StringInput `pulumi:"type"`
}

func (ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput)
}

// ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray and ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray{ ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs{...} }
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput
	ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput
}

type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray []ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsInput

func (ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput)
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions) string {
		return v.Status
	}).(pulumi.StringOutput)
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions) string {
		return v.Timeout
	}).(pulumi.StringOutput)
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput() ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput) ToClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput) Index(i pulumi.IntInput) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions {
		return vs[0].([]ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions)[vs[1].(int)]
	}).(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput)
}

// NamingStrategy allows changing the naming pattern used when creating the MachineDeployment.
type ClusterClassSpecWorkersMachineDeploymentsNamingStrategy struct {
	// Template defines the template to use for generating the name of the MachineDeployment object. If not defined, it will fallback to `{{ .cluster.name }}-{{ .machineDeployment.topologyName }}-{{ .random }}`. If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will get concatenated with a random suffix of length 5. The templating mechanism provides the following arguments: * `.cluster.name`: The name of the cluster object. * `.random`: A random alphanumeric string, without vowels, of length 5. * `.machineDeployment.topologyName`: The name of the MachineDeployment topology (Cluster.spec.topology.workers.machineDeployments[].name).
	Template *string `pulumi:"template"`
}

// ClusterClassSpecWorkersMachineDeploymentsNamingStrategyInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs and ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsNamingStrategyInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs{...}
type ClusterClassSpecWorkersMachineDeploymentsNamingStrategyInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput() ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput
	ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput
}

// NamingStrategy allows changing the naming pattern used when creating the MachineDeployment.
type ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs struct {
	// Template defines the template to use for generating the name of the MachineDeployment object. If not defined, it will fallback to `{{ .cluster.name }}-{{ .machineDeployment.topologyName }}-{{ .random }}`. If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will get concatenated with a random suffix of length 5. The templating mechanism provides the following arguments: * `.cluster.name`: The name of the cluster object. * `.random`: A random alphanumeric string, without vowels, of length 5. * `.machineDeployment.topologyName`: The name of the MachineDeployment topology (Cluster.spec.topology.workers.machineDeployments[].name).
	Template pulumi.StringPtrInput `pulumi:"template"`
}

func (ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsNamingStrategy)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs) ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput() ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs) ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput)
}

func (i ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs) ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput() ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs) ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput).ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutputWithContext(ctx)
}

// ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs, ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtr and ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrInput` via:
//
//	        ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput() ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput
	ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput
}

type clusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrType ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs

func ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtr(v *ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs) ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrInput {
	return (*clusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrType)(v)
}

func (*clusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkersMachineDeploymentsNamingStrategy)(nil)).Elem()
}

func (i *clusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrType) ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput() ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrType) ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput)
}

// NamingStrategy allows changing the naming pattern used when creating the MachineDeployment.
type ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsNamingStrategy)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput) ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput() ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput) ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput) ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput() ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput {
	return o.ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput) ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecWorkersMachineDeploymentsNamingStrategy) *ClusterClassSpecWorkersMachineDeploymentsNamingStrategy {
		return &v
	}).(ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput)
}

// Template defines the template to use for generating the name of the MachineDeployment object. If not defined, it will fallback to `{{ .cluster.name }}-{{ .machineDeployment.topologyName }}-{{ .random }}`. If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will get concatenated with a random suffix of length 5. The templating mechanism provides the following arguments: * `.cluster.name`: The name of the cluster object. * `.random`: A random alphanumeric string, without vowels, of length 5. * `.machineDeployment.topologyName`: The name of the MachineDeployment topology (Cluster.spec.topology.workers.machineDeployments[].name).
func (o ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsNamingStrategy) *string { return v.Template }).(pulumi.StringPtrOutput)
}

type ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkersMachineDeploymentsNamingStrategy)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput) ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput() ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput) ToClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput) Elem() ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsNamingStrategy) ClusterClassSpecWorkersMachineDeploymentsNamingStrategy {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecWorkersMachineDeploymentsNamingStrategy
		return ret
	}).(ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput)
}

// Template defines the template to use for generating the name of the MachineDeployment object. If not defined, it will fallback to `{{ .cluster.name }}-{{ .machineDeployment.topologyName }}-{{ .random }}`. If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will get concatenated with a random suffix of length 5. The templating mechanism provides the following arguments: * `.cluster.name`: The name of the cluster object. * `.random`: A random alphanumeric string, without vowels, of length 5. * `.machineDeployment.topologyName`: The name of the MachineDeployment topology (Cluster.spec.topology.workers.machineDeployments[].name).
func (o ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsNamingStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.StringPtrOutput)
}

// The deployment strategy to use to replace existing machines with new ones. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
type ClusterClassSpecWorkersMachineDeploymentsStrategy struct {
	// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
	RollingUpdate *ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate `pulumi:"rollingUpdate"`
	// Type of deployment. Default is RollingUpdate.
	Type *string `pulumi:"type"`
}

// ClusterClassSpecWorkersMachineDeploymentsStrategyInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsStrategyArgs and ClusterClassSpecWorkersMachineDeploymentsStrategyOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsStrategyInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsStrategyArgs{...}
type ClusterClassSpecWorkersMachineDeploymentsStrategyInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsStrategyOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyOutput
	ToClusterClassSpecWorkersMachineDeploymentsStrategyOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyOutput
}

// The deployment strategy to use to replace existing machines with new ones. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
type ClusterClassSpecWorkersMachineDeploymentsStrategyArgs struct {
	// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
	RollingUpdate ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrInput `pulumi:"rollingUpdate"`
	// Type of deployment. Default is RollingUpdate.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ClusterClassSpecWorkersMachineDeploymentsStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsStrategy)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsStrategyArgs) ToClusterClassSpecWorkersMachineDeploymentsStrategyOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsStrategyOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsStrategyArgs) ToClusterClassSpecWorkersMachineDeploymentsStrategyOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsStrategyOutput)
}

func (i ClusterClassSpecWorkersMachineDeploymentsStrategyArgs) ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsStrategyArgs) ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsStrategyOutput).ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutputWithContext(ctx)
}

// ClusterClassSpecWorkersMachineDeploymentsStrategyPtrInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsStrategyArgs, ClusterClassSpecWorkersMachineDeploymentsStrategyPtr and ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsStrategyPtrInput` via:
//
//	        ClusterClassSpecWorkersMachineDeploymentsStrategyArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecWorkersMachineDeploymentsStrategyPtrInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput
	ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput
}

type clusterClassSpecWorkersMachineDeploymentsStrategyPtrType ClusterClassSpecWorkersMachineDeploymentsStrategyArgs

func ClusterClassSpecWorkersMachineDeploymentsStrategyPtr(v *ClusterClassSpecWorkersMachineDeploymentsStrategyArgs) ClusterClassSpecWorkersMachineDeploymentsStrategyPtrInput {
	return (*clusterClassSpecWorkersMachineDeploymentsStrategyPtrType)(v)
}

func (*clusterClassSpecWorkersMachineDeploymentsStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkersMachineDeploymentsStrategy)(nil)).Elem()
}

func (i *clusterClassSpecWorkersMachineDeploymentsStrategyPtrType) ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecWorkersMachineDeploymentsStrategyPtrType) ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput)
}

// The deployment strategy to use to replace existing machines with new ones. NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
type ClusterClassSpecWorkersMachineDeploymentsStrategyOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsStrategy)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyOutput) ToClusterClassSpecWorkersMachineDeploymentsStrategyOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyOutput) ToClusterClassSpecWorkersMachineDeploymentsStrategyOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyOutput) ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput {
	return o.ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyOutput) ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecWorkersMachineDeploymentsStrategy) *ClusterClassSpecWorkersMachineDeploymentsStrategy {
		return &v
	}).(ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput)
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
func (o ClusterClassSpecWorkersMachineDeploymentsStrategyOutput) RollingUpdate() ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsStrategy) *ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate {
		return v.RollingUpdate
	}).(ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput)
}

// Type of deployment. Default is RollingUpdate.
func (o ClusterClassSpecWorkersMachineDeploymentsStrategyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsStrategy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkersMachineDeploymentsStrategy)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput) ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput) ToClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput) Elem() ClusterClassSpecWorkersMachineDeploymentsStrategyOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsStrategy) ClusterClassSpecWorkersMachineDeploymentsStrategy {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecWorkersMachineDeploymentsStrategy
		return ret
	}).(ClusterClassSpecWorkersMachineDeploymentsStrategyOutput)
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
func (o ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput) RollingUpdate() ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsStrategy) *ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate {
		if v == nil {
			return nil
		}
		return v.RollingUpdate
	}).(ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput)
}

// Type of deployment. Default is RollingUpdate.
func (o ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
type ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate struct {
	// DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are "Random, "Newest", "Oldest" When no value is supplied, the default DeletePolicy of MachineSet is used
	DeletePolicy *string `pulumi:"deletePolicy"`
	// The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.
	MaxSurge interface{} `pulumi:"maxSurge"`
	// The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.
	MaxUnavailable interface{} `pulumi:"maxUnavailable"`
}

// ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs and ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs{...}
type ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput
	ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
type ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs struct {
	// DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are "Random, "Newest", "Oldest" When no value is supplied, the default DeletePolicy of MachineSet is used
	DeletePolicy pulumi.StringPtrInput `pulumi:"deletePolicy"`
	// The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.
	MaxSurge pulumi.Input `pulumi:"maxSurge"`
	// The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.
	MaxUnavailable pulumi.Input `pulumi:"maxUnavailable"`
}

func (ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs) ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs) ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput)
}

func (i ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs) ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs) ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput).ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(ctx)
}

// ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs, ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtr and ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrInput` via:
//
//	        ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput
	ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput
}

type clusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrType ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs

func ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtr(v *ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs) ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrInput {
	return (*clusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrType)(v)
}

func (*clusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate)(nil)).Elem()
}

func (i *clusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrType) ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrType) ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput)
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
type ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput) ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput) ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput) ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return o.ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput) ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate) *ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate {
		return &v
	}).(ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput)
}

// DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are "Random, "Newest", "Oldest" When no value is supplied, the default DeletePolicy of MachineSet is used
func (o ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput) DeletePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate) *string { return v.DeletePolicy }).(pulumi.StringPtrOutput)
}

// The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.
func (o ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate) interface{} { return v.MaxSurge }).(pulumi.AnyOutput)
}

// The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.
func (o ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate) interface{} {
		return v.MaxUnavailable
	}).(pulumi.AnyOutput)
}

type ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput() ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) ToClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) Elem() ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate) ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate
		return ret
	}).(ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput)
}

// DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are "Random, "Newest", "Oldest" When no value is supplied, the default DeletePolicy of MachineSet is used
func (o ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) DeletePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate) *string {
		if v == nil {
			return nil
		}
		return v.DeletePolicy
	}).(pulumi.StringPtrOutput)
}

// The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.
func (o ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.AnyOutput)
}

// The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.
func (o ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.AnyOutput)
}

// Template is a local struct containing a collection of templates for creation of MachineDeployment objects representing a set of worker nodes.
type ClusterClassSpecWorkersMachineDeploymentsTemplate struct {
	// Bootstrap contains the bootstrap template reference to be used for the creation of worker Machines.
	Bootstrap ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrap `pulumi:"bootstrap"`
	// Infrastructure contains the infrastructure template reference to be used for the creation of worker Machines.
	Infrastructure ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructure `pulumi:"infrastructure"`
	// Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the topology.
	Metadata *ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata `pulumi:"metadata"`
}

// ClusterClassSpecWorkersMachineDeploymentsTemplateInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsTemplateArgs and ClusterClassSpecWorkersMachineDeploymentsTemplateOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsTemplateInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsTemplateArgs{...}
type ClusterClassSpecWorkersMachineDeploymentsTemplateInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsTemplateOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateOutput
	ToClusterClassSpecWorkersMachineDeploymentsTemplateOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateOutput
}

// Template is a local struct containing a collection of templates for creation of MachineDeployment objects representing a set of worker nodes.
type ClusterClassSpecWorkersMachineDeploymentsTemplateArgs struct {
	// Bootstrap contains the bootstrap template reference to be used for the creation of worker Machines.
	Bootstrap ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapInput `pulumi:"bootstrap"`
	// Infrastructure contains the infrastructure template reference to be used for the creation of worker Machines.
	Infrastructure ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureInput `pulumi:"infrastructure"`
	// Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the topology.
	Metadata ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrInput `pulumi:"metadata"`
}

func (ClusterClassSpecWorkersMachineDeploymentsTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplate)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsTemplateOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsTemplateOutput)
}

// Template is a local struct containing a collection of templates for creation of MachineDeployment objects representing a set of worker nodes.
type ClusterClassSpecWorkersMachineDeploymentsTemplateOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplate)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateOutput {
	return o
}

// Bootstrap contains the bootstrap template reference to be used for the creation of worker Machines.
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateOutput) Bootstrap() ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplate) ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrap {
		return v.Bootstrap
	}).(ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput)
}

// Infrastructure contains the infrastructure template reference to be used for the creation of worker Machines.
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateOutput) Infrastructure() ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplate) ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructure {
		return v.Infrastructure
	}).(ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput)
}

// Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the topology.
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateOutput) Metadata() ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplate) *ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata {
		return v.Metadata
	}).(ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput)
}

// Bootstrap contains the bootstrap template reference to be used for the creation of worker Machines.
type ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrap struct {
	// Ref is a required reference to a custom resource offered by a provider.
	Ref ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRef `pulumi:"ref"`
}

// ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapArgs and ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapArgs{...}
type ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput
	ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput
}

// Bootstrap contains the bootstrap template reference to be used for the creation of worker Machines.
type ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapArgs struct {
	// Ref is a required reference to a custom resource offered by a provider.
	Ref ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefInput `pulumi:"ref"`
}

func (ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrap)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput)
}

// Bootstrap contains the bootstrap template reference to be used for the creation of worker Machines.
type ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrap)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput {
	return o
}

// Ref is a required reference to a custom resource offered by a provider.
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput) Ref() ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrap) ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRef {
		return v.Ref
	}).(ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefArgs and ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefArgs{...}
type ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput
	ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRef)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRef)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput {
	return o
}

// API version of the referent.
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRef) *string {
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

// Infrastructure contains the infrastructure template reference to be used for the creation of worker Machines.
type ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructure struct {
	// Ref is a required reference to a custom resource offered by a provider.
	Ref ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRef `pulumi:"ref"`
}

// ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureArgs and ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureArgs{...}
type ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput
	ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput
}

// Infrastructure contains the infrastructure template reference to be used for the creation of worker Machines.
type ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureArgs struct {
	// Ref is a required reference to a custom resource offered by a provider.
	Ref ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefInput `pulumi:"ref"`
}

func (ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructure)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput)
}

// Infrastructure contains the infrastructure template reference to be used for the creation of worker Machines.
type ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructure)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput {
	return o
}

// Ref is a required reference to a custom resource offered by a provider.
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput) Ref() ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructure) ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRef {
		return v.Ref
	}).(ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefArgs and ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefArgs{...}
type ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput
	ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRef)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput)
}

// Ref is a required reference to a custom resource offered by a provider.
type ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRef)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput {
	return o
}

// API version of the referent.
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRef) *string {
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRef) *string {
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

// Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the topology.
type ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations map[string]string `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels map[string]string `pulumi:"labels"`
}

// ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs and ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataInput` via:
//
//	ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs{...}
type ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput
	ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput
}

// Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the topology.
type ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata)(nil)).Elem()
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput)
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs) ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput).ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutputWithContext(ctx)
}

// ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrInput is an input type that accepts ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs, ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtr and ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrInput` via:
//
//	        ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs{...}
//
//	or:
//
//	        nil
type ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrInput interface {
	pulumi.Input

	ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput
	ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutputWithContext(context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput
}

type clusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrType ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs

func ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtr(v *ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs) ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrInput {
	return (*clusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrType)(v)
}

func (*clusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata)(nil)).Elem()
}

func (i *clusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrType) ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput {
	return i.ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *clusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrType) ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput)
}

// Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the topology.
type ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput {
	return o.ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata) *ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata {
		return &v
	}).(ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata) map[string]string {
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata)(nil)).Elem()
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput() ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput) ToClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutputWithContext(ctx context.Context) ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput {
	return o
}

func (o ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput) Elem() ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata) ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata {
		if v != nil {
			return *v
		}
		var ret ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata
		return ret
	}).(ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterClassSpecWorkersMachineDeploymentsTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
type ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataAnnotations struct {
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
type ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataLabels struct {
}

// ClusterClassStatus defines the observed state of the ClusterClass.
type ClusterClassStatus struct {
	// Conditions defines current observed state of the ClusterClass.
	Conditions []ClusterClassStatusConditions `pulumi:"conditions"`
	// ObservedGeneration is the latest generation observed by the controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Variables is a list of ClusterClassStatusVariable that are defined for the ClusterClass.
	Variables []ClusterClassStatusVariables `pulumi:"variables"`
}

// ClusterClassStatusInput is an input type that accepts ClusterClassStatusArgs and ClusterClassStatusOutput values.
// You can construct a concrete instance of `ClusterClassStatusInput` via:
//
//	ClusterClassStatusArgs{...}
type ClusterClassStatusInput interface {
	pulumi.Input

	ToClusterClassStatusOutput() ClusterClassStatusOutput
	ToClusterClassStatusOutputWithContext(context.Context) ClusterClassStatusOutput
}

// ClusterClassStatus defines the observed state of the ClusterClass.
type ClusterClassStatusArgs struct {
	// Conditions defines current observed state of the ClusterClass.
	Conditions ClusterClassStatusConditionsArrayInput `pulumi:"conditions"`
	// ObservedGeneration is the latest generation observed by the controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Variables is a list of ClusterClassStatusVariable that are defined for the ClusterClass.
	Variables ClusterClassStatusVariablesArrayInput `pulumi:"variables"`
}

func (ClusterClassStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassStatus)(nil)).Elem()
}

func (i ClusterClassStatusArgs) ToClusterClassStatusOutput() ClusterClassStatusOutput {
	return i.ToClusterClassStatusOutputWithContext(context.Background())
}

func (i ClusterClassStatusArgs) ToClusterClassStatusOutputWithContext(ctx context.Context) ClusterClassStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassStatusOutput)
}

func (i ClusterClassStatusArgs) ToClusterClassStatusPtrOutput() ClusterClassStatusPtrOutput {
	return i.ToClusterClassStatusPtrOutputWithContext(context.Background())
}

func (i ClusterClassStatusArgs) ToClusterClassStatusPtrOutputWithContext(ctx context.Context) ClusterClassStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassStatusOutput).ToClusterClassStatusPtrOutputWithContext(ctx)
}

// ClusterClassStatusPtrInput is an input type that accepts ClusterClassStatusArgs, ClusterClassStatusPtr and ClusterClassStatusPtrOutput values.
// You can construct a concrete instance of `ClusterClassStatusPtrInput` via:
//
//	        ClusterClassStatusArgs{...}
//
//	or:
//
//	        nil
type ClusterClassStatusPtrInput interface {
	pulumi.Input

	ToClusterClassStatusPtrOutput() ClusterClassStatusPtrOutput
	ToClusterClassStatusPtrOutputWithContext(context.Context) ClusterClassStatusPtrOutput
}

type clusterClassStatusPtrType ClusterClassStatusArgs

func ClusterClassStatusPtr(v *ClusterClassStatusArgs) ClusterClassStatusPtrInput {
	return (*clusterClassStatusPtrType)(v)
}

func (*clusterClassStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassStatus)(nil)).Elem()
}

func (i *clusterClassStatusPtrType) ToClusterClassStatusPtrOutput() ClusterClassStatusPtrOutput {
	return i.ToClusterClassStatusPtrOutputWithContext(context.Background())
}

func (i *clusterClassStatusPtrType) ToClusterClassStatusPtrOutputWithContext(ctx context.Context) ClusterClassStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassStatusPtrOutput)
}

// ClusterClassStatus defines the observed state of the ClusterClass.
type ClusterClassStatusOutput struct{ *pulumi.OutputState }

func (ClusterClassStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassStatus)(nil)).Elem()
}

func (o ClusterClassStatusOutput) ToClusterClassStatusOutput() ClusterClassStatusOutput {
	return o
}

func (o ClusterClassStatusOutput) ToClusterClassStatusOutputWithContext(ctx context.Context) ClusterClassStatusOutput {
	return o
}

func (o ClusterClassStatusOutput) ToClusterClassStatusPtrOutput() ClusterClassStatusPtrOutput {
	return o.ToClusterClassStatusPtrOutputWithContext(context.Background())
}

func (o ClusterClassStatusOutput) ToClusterClassStatusPtrOutputWithContext(ctx context.Context) ClusterClassStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClassStatus) *ClusterClassStatus {
		return &v
	}).(ClusterClassStatusPtrOutput)
}

// Conditions defines current observed state of the ClusterClass.
func (o ClusterClassStatusOutput) Conditions() ClusterClassStatusConditionsArrayOutput {
	return o.ApplyT(func(v ClusterClassStatus) []ClusterClassStatusConditions { return v.Conditions }).(ClusterClassStatusConditionsArrayOutput)
}

// ObservedGeneration is the latest generation observed by the controller.
func (o ClusterClassStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Variables is a list of ClusterClassStatusVariable that are defined for the ClusterClass.
func (o ClusterClassStatusOutput) Variables() ClusterClassStatusVariablesArrayOutput {
	return o.ApplyT(func(v ClusterClassStatus) []ClusterClassStatusVariables { return v.Variables }).(ClusterClassStatusVariablesArrayOutput)
}

type ClusterClassStatusPtrOutput struct{ *pulumi.OutputState }

func (ClusterClassStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClassStatus)(nil)).Elem()
}

func (o ClusterClassStatusPtrOutput) ToClusterClassStatusPtrOutput() ClusterClassStatusPtrOutput {
	return o
}

func (o ClusterClassStatusPtrOutput) ToClusterClassStatusPtrOutputWithContext(ctx context.Context) ClusterClassStatusPtrOutput {
	return o
}

func (o ClusterClassStatusPtrOutput) Elem() ClusterClassStatusOutput {
	return o.ApplyT(func(v *ClusterClassStatus) ClusterClassStatus {
		if v != nil {
			return *v
		}
		var ret ClusterClassStatus
		return ret
	}).(ClusterClassStatusOutput)
}

// Conditions defines current observed state of the ClusterClass.
func (o ClusterClassStatusPtrOutput) Conditions() ClusterClassStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ClusterClassStatus) []ClusterClassStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ClusterClassStatusConditionsArrayOutput)
}

// ObservedGeneration is the latest generation observed by the controller.
func (o ClusterClassStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterClassStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Variables is a list of ClusterClassStatusVariable that are defined for the ClusterClass.
func (o ClusterClassStatusPtrOutput) Variables() ClusterClassStatusVariablesArrayOutput {
	return o.ApplyT(func(v *ClusterClassStatus) []ClusterClassStatusVariables {
		if v == nil {
			return nil
		}
		return v.Variables
	}).(ClusterClassStatusVariablesArrayOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type ClusterClassStatusConditions struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason *string `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity *string `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type string `pulumi:"type"`
}

// ClusterClassStatusConditionsInput is an input type that accepts ClusterClassStatusConditionsArgs and ClusterClassStatusConditionsOutput values.
// You can construct a concrete instance of `ClusterClassStatusConditionsInput` via:
//
//	ClusterClassStatusConditionsArgs{...}
type ClusterClassStatusConditionsInput interface {
	pulumi.Input

	ToClusterClassStatusConditionsOutput() ClusterClassStatusConditionsOutput
	ToClusterClassStatusConditionsOutputWithContext(context.Context) ClusterClassStatusConditionsOutput
}

// Condition defines an observation of a Cluster API resource operational state.
type ClusterClassStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterClassStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassStatusConditions)(nil)).Elem()
}

func (i ClusterClassStatusConditionsArgs) ToClusterClassStatusConditionsOutput() ClusterClassStatusConditionsOutput {
	return i.ToClusterClassStatusConditionsOutputWithContext(context.Background())
}

func (i ClusterClassStatusConditionsArgs) ToClusterClassStatusConditionsOutputWithContext(ctx context.Context) ClusterClassStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassStatusConditionsOutput)
}

// ClusterClassStatusConditionsArrayInput is an input type that accepts ClusterClassStatusConditionsArray and ClusterClassStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ClusterClassStatusConditionsArrayInput` via:
//
//	ClusterClassStatusConditionsArray{ ClusterClassStatusConditionsArgs{...} }
type ClusterClassStatusConditionsArrayInput interface {
	pulumi.Input

	ToClusterClassStatusConditionsArrayOutput() ClusterClassStatusConditionsArrayOutput
	ToClusterClassStatusConditionsArrayOutputWithContext(context.Context) ClusterClassStatusConditionsArrayOutput
}

type ClusterClassStatusConditionsArray []ClusterClassStatusConditionsInput

func (ClusterClassStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassStatusConditions)(nil)).Elem()
}

func (i ClusterClassStatusConditionsArray) ToClusterClassStatusConditionsArrayOutput() ClusterClassStatusConditionsArrayOutput {
	return i.ToClusterClassStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ClusterClassStatusConditionsArray) ToClusterClassStatusConditionsArrayOutputWithContext(ctx context.Context) ClusterClassStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassStatusConditionsArrayOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type ClusterClassStatusConditionsOutput struct{ *pulumi.OutputState }

func (ClusterClassStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassStatusConditions)(nil)).Elem()
}

func (o ClusterClassStatusConditionsOutput) ToClusterClassStatusConditionsOutput() ClusterClassStatusConditionsOutput {
	return o
}

func (o ClusterClassStatusConditionsOutput) ToClusterClassStatusConditionsOutputWithContext(ctx context.Context) ClusterClassStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
func (o ClusterClassStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A human readable message indicating details about the transition. This field may be empty.
func (o ClusterClassStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
func (o ClusterClassStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
func (o ClusterClassStatusConditionsOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusConditions) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o ClusterClassStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
func (o ClusterClassStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterClassStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterClassStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassStatusConditions)(nil)).Elem()
}

func (o ClusterClassStatusConditionsArrayOutput) ToClusterClassStatusConditionsArrayOutput() ClusterClassStatusConditionsArrayOutput {
	return o
}

func (o ClusterClassStatusConditionsArrayOutput) ToClusterClassStatusConditionsArrayOutputWithContext(ctx context.Context) ClusterClassStatusConditionsArrayOutput {
	return o
}

func (o ClusterClassStatusConditionsArrayOutput) Index(i pulumi.IntInput) ClusterClassStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClassStatusConditions {
		return vs[0].([]ClusterClassStatusConditions)[vs[1].(int)]
	}).(ClusterClassStatusConditionsOutput)
}

// ClusterClassStatusVariable defines a variable which appears in the status of a ClusterClass.
type ClusterClassStatusVariables struct {
	// Definitions is a list of definitions for a variable.
	Definitions []ClusterClassStatusVariablesDefinitions `pulumi:"definitions"`
	// DefinitionsConflict specifies whether or not there are conflicting definitions for a single variable name.
	DefinitionsConflict *bool `pulumi:"definitionsConflict"`
	// Name is the name of the variable.
	Name string `pulumi:"name"`
}

// ClusterClassStatusVariablesInput is an input type that accepts ClusterClassStatusVariablesArgs and ClusterClassStatusVariablesOutput values.
// You can construct a concrete instance of `ClusterClassStatusVariablesInput` via:
//
//	ClusterClassStatusVariablesArgs{...}
type ClusterClassStatusVariablesInput interface {
	pulumi.Input

	ToClusterClassStatusVariablesOutput() ClusterClassStatusVariablesOutput
	ToClusterClassStatusVariablesOutputWithContext(context.Context) ClusterClassStatusVariablesOutput
}

// ClusterClassStatusVariable defines a variable which appears in the status of a ClusterClass.
type ClusterClassStatusVariablesArgs struct {
	// Definitions is a list of definitions for a variable.
	Definitions ClusterClassStatusVariablesDefinitionsArrayInput `pulumi:"definitions"`
	// DefinitionsConflict specifies whether or not there are conflicting definitions for a single variable name.
	DefinitionsConflict pulumi.BoolPtrInput `pulumi:"definitionsConflict"`
	// Name is the name of the variable.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterClassStatusVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassStatusVariables)(nil)).Elem()
}

func (i ClusterClassStatusVariablesArgs) ToClusterClassStatusVariablesOutput() ClusterClassStatusVariablesOutput {
	return i.ToClusterClassStatusVariablesOutputWithContext(context.Background())
}

func (i ClusterClassStatusVariablesArgs) ToClusterClassStatusVariablesOutputWithContext(ctx context.Context) ClusterClassStatusVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassStatusVariablesOutput)
}

// ClusterClassStatusVariablesArrayInput is an input type that accepts ClusterClassStatusVariablesArray and ClusterClassStatusVariablesArrayOutput values.
// You can construct a concrete instance of `ClusterClassStatusVariablesArrayInput` via:
//
//	ClusterClassStatusVariablesArray{ ClusterClassStatusVariablesArgs{...} }
type ClusterClassStatusVariablesArrayInput interface {
	pulumi.Input

	ToClusterClassStatusVariablesArrayOutput() ClusterClassStatusVariablesArrayOutput
	ToClusterClassStatusVariablesArrayOutputWithContext(context.Context) ClusterClassStatusVariablesArrayOutput
}

type ClusterClassStatusVariablesArray []ClusterClassStatusVariablesInput

func (ClusterClassStatusVariablesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassStatusVariables)(nil)).Elem()
}

func (i ClusterClassStatusVariablesArray) ToClusterClassStatusVariablesArrayOutput() ClusterClassStatusVariablesArrayOutput {
	return i.ToClusterClassStatusVariablesArrayOutputWithContext(context.Background())
}

func (i ClusterClassStatusVariablesArray) ToClusterClassStatusVariablesArrayOutputWithContext(ctx context.Context) ClusterClassStatusVariablesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassStatusVariablesArrayOutput)
}

// ClusterClassStatusVariable defines a variable which appears in the status of a ClusterClass.
type ClusterClassStatusVariablesOutput struct{ *pulumi.OutputState }

func (ClusterClassStatusVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassStatusVariables)(nil)).Elem()
}

func (o ClusterClassStatusVariablesOutput) ToClusterClassStatusVariablesOutput() ClusterClassStatusVariablesOutput {
	return o
}

func (o ClusterClassStatusVariablesOutput) ToClusterClassStatusVariablesOutputWithContext(ctx context.Context) ClusterClassStatusVariablesOutput {
	return o
}

// Definitions is a list of definitions for a variable.
func (o ClusterClassStatusVariablesOutput) Definitions() ClusterClassStatusVariablesDefinitionsArrayOutput {
	return o.ApplyT(func(v ClusterClassStatusVariables) []ClusterClassStatusVariablesDefinitions { return v.Definitions }).(ClusterClassStatusVariablesDefinitionsArrayOutput)
}

// DefinitionsConflict specifies whether or not there are conflicting definitions for a single variable name.
func (o ClusterClassStatusVariablesOutput) DefinitionsConflict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariables) *bool { return v.DefinitionsConflict }).(pulumi.BoolPtrOutput)
}

// Name is the name of the variable.
func (o ClusterClassStatusVariablesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassStatusVariables) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterClassStatusVariablesArrayOutput struct{ *pulumi.OutputState }

func (ClusterClassStatusVariablesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassStatusVariables)(nil)).Elem()
}

func (o ClusterClassStatusVariablesArrayOutput) ToClusterClassStatusVariablesArrayOutput() ClusterClassStatusVariablesArrayOutput {
	return o
}

func (o ClusterClassStatusVariablesArrayOutput) ToClusterClassStatusVariablesArrayOutputWithContext(ctx context.Context) ClusterClassStatusVariablesArrayOutput {
	return o
}

func (o ClusterClassStatusVariablesArrayOutput) Index(i pulumi.IntInput) ClusterClassStatusVariablesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClassStatusVariables {
		return vs[0].([]ClusterClassStatusVariables)[vs[1].(int)]
	}).(ClusterClassStatusVariablesOutput)
}

// ClusterClassStatusVariableDefinition defines a variable which appears in the status of a ClusterClass.
type ClusterClassStatusVariablesDefinitions struct {
	// From specifies the origin of the variable definition. This will be `inline` for variables defined in the ClusterClass or the name of a patch defined in the ClusterClass for variables discovered from a DiscoverVariables runtime extensions.
	From string `pulumi:"from"`
	// Required specifies if the variable is required. Note: this applies to the variable as a whole and thus the top-level object defined in the schema. If nested fields are required, this will be specified inside the schema.
	Required bool `pulumi:"required"`
	// Schema defines the schema of the variable.
	Schema ClusterClassStatusVariablesDefinitionsSchema `pulumi:"schema"`
}

// ClusterClassStatusVariablesDefinitionsInput is an input type that accepts ClusterClassStatusVariablesDefinitionsArgs and ClusterClassStatusVariablesDefinitionsOutput values.
// You can construct a concrete instance of `ClusterClassStatusVariablesDefinitionsInput` via:
//
//	ClusterClassStatusVariablesDefinitionsArgs{...}
type ClusterClassStatusVariablesDefinitionsInput interface {
	pulumi.Input

	ToClusterClassStatusVariablesDefinitionsOutput() ClusterClassStatusVariablesDefinitionsOutput
	ToClusterClassStatusVariablesDefinitionsOutputWithContext(context.Context) ClusterClassStatusVariablesDefinitionsOutput
}

// ClusterClassStatusVariableDefinition defines a variable which appears in the status of a ClusterClass.
type ClusterClassStatusVariablesDefinitionsArgs struct {
	// From specifies the origin of the variable definition. This will be `inline` for variables defined in the ClusterClass or the name of a patch defined in the ClusterClass for variables discovered from a DiscoverVariables runtime extensions.
	From pulumi.StringInput `pulumi:"from"`
	// Required specifies if the variable is required. Note: this applies to the variable as a whole and thus the top-level object defined in the schema. If nested fields are required, this will be specified inside the schema.
	Required pulumi.BoolInput `pulumi:"required"`
	// Schema defines the schema of the variable.
	Schema ClusterClassStatusVariablesDefinitionsSchemaInput `pulumi:"schema"`
}

func (ClusterClassStatusVariablesDefinitionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassStatusVariablesDefinitions)(nil)).Elem()
}

func (i ClusterClassStatusVariablesDefinitionsArgs) ToClusterClassStatusVariablesDefinitionsOutput() ClusterClassStatusVariablesDefinitionsOutput {
	return i.ToClusterClassStatusVariablesDefinitionsOutputWithContext(context.Background())
}

func (i ClusterClassStatusVariablesDefinitionsArgs) ToClusterClassStatusVariablesDefinitionsOutputWithContext(ctx context.Context) ClusterClassStatusVariablesDefinitionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassStatusVariablesDefinitionsOutput)
}

// ClusterClassStatusVariablesDefinitionsArrayInput is an input type that accepts ClusterClassStatusVariablesDefinitionsArray and ClusterClassStatusVariablesDefinitionsArrayOutput values.
// You can construct a concrete instance of `ClusterClassStatusVariablesDefinitionsArrayInput` via:
//
//	ClusterClassStatusVariablesDefinitionsArray{ ClusterClassStatusVariablesDefinitionsArgs{...} }
type ClusterClassStatusVariablesDefinitionsArrayInput interface {
	pulumi.Input

	ToClusterClassStatusVariablesDefinitionsArrayOutput() ClusterClassStatusVariablesDefinitionsArrayOutput
	ToClusterClassStatusVariablesDefinitionsArrayOutputWithContext(context.Context) ClusterClassStatusVariablesDefinitionsArrayOutput
}

type ClusterClassStatusVariablesDefinitionsArray []ClusterClassStatusVariablesDefinitionsInput

func (ClusterClassStatusVariablesDefinitionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassStatusVariablesDefinitions)(nil)).Elem()
}

func (i ClusterClassStatusVariablesDefinitionsArray) ToClusterClassStatusVariablesDefinitionsArrayOutput() ClusterClassStatusVariablesDefinitionsArrayOutput {
	return i.ToClusterClassStatusVariablesDefinitionsArrayOutputWithContext(context.Background())
}

func (i ClusterClassStatusVariablesDefinitionsArray) ToClusterClassStatusVariablesDefinitionsArrayOutputWithContext(ctx context.Context) ClusterClassStatusVariablesDefinitionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassStatusVariablesDefinitionsArrayOutput)
}

// ClusterClassStatusVariableDefinition defines a variable which appears in the status of a ClusterClass.
type ClusterClassStatusVariablesDefinitionsOutput struct{ *pulumi.OutputState }

func (ClusterClassStatusVariablesDefinitionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassStatusVariablesDefinitions)(nil)).Elem()
}

func (o ClusterClassStatusVariablesDefinitionsOutput) ToClusterClassStatusVariablesDefinitionsOutput() ClusterClassStatusVariablesDefinitionsOutput {
	return o
}

func (o ClusterClassStatusVariablesDefinitionsOutput) ToClusterClassStatusVariablesDefinitionsOutputWithContext(ctx context.Context) ClusterClassStatusVariablesDefinitionsOutput {
	return o
}

// From specifies the origin of the variable definition. This will be `inline` for variables defined in the ClusterClass or the name of a patch defined in the ClusterClass for variables discovered from a DiscoverVariables runtime extensions.
func (o ClusterClassStatusVariablesDefinitionsOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitions) string { return v.From }).(pulumi.StringOutput)
}

// Required specifies if the variable is required. Note: this applies to the variable as a whole and thus the top-level object defined in the schema. If nested fields are required, this will be specified inside the schema.
func (o ClusterClassStatusVariablesDefinitionsOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitions) bool { return v.Required }).(pulumi.BoolOutput)
}

// Schema defines the schema of the variable.
func (o ClusterClassStatusVariablesDefinitionsOutput) Schema() ClusterClassStatusVariablesDefinitionsSchemaOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitions) ClusterClassStatusVariablesDefinitionsSchema {
		return v.Schema
	}).(ClusterClassStatusVariablesDefinitionsSchemaOutput)
}

type ClusterClassStatusVariablesDefinitionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterClassStatusVariablesDefinitionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClassStatusVariablesDefinitions)(nil)).Elem()
}

func (o ClusterClassStatusVariablesDefinitionsArrayOutput) ToClusterClassStatusVariablesDefinitionsArrayOutput() ClusterClassStatusVariablesDefinitionsArrayOutput {
	return o
}

func (o ClusterClassStatusVariablesDefinitionsArrayOutput) ToClusterClassStatusVariablesDefinitionsArrayOutputWithContext(ctx context.Context) ClusterClassStatusVariablesDefinitionsArrayOutput {
	return o
}

func (o ClusterClassStatusVariablesDefinitionsArrayOutput) Index(i pulumi.IntInput) ClusterClassStatusVariablesDefinitionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClassStatusVariablesDefinitions {
		return vs[0].([]ClusterClassStatusVariablesDefinitions)[vs[1].(int)]
	}).(ClusterClassStatusVariablesDefinitionsOutput)
}

// Schema defines the schema of the variable.
type ClusterClassStatusVariablesDefinitionsSchema struct {
	// OpenAPIV3Schema defines the schema of a variable via OpenAPI v3 schema. The schema is a subset of the schema used in Kubernetes CRDs.
	OpenAPIV3Schema ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema `pulumi:"openAPIV3Schema"`
}

// ClusterClassStatusVariablesDefinitionsSchemaInput is an input type that accepts ClusterClassStatusVariablesDefinitionsSchemaArgs and ClusterClassStatusVariablesDefinitionsSchemaOutput values.
// You can construct a concrete instance of `ClusterClassStatusVariablesDefinitionsSchemaInput` via:
//
//	ClusterClassStatusVariablesDefinitionsSchemaArgs{...}
type ClusterClassStatusVariablesDefinitionsSchemaInput interface {
	pulumi.Input

	ToClusterClassStatusVariablesDefinitionsSchemaOutput() ClusterClassStatusVariablesDefinitionsSchemaOutput
	ToClusterClassStatusVariablesDefinitionsSchemaOutputWithContext(context.Context) ClusterClassStatusVariablesDefinitionsSchemaOutput
}

// Schema defines the schema of the variable.
type ClusterClassStatusVariablesDefinitionsSchemaArgs struct {
	// OpenAPIV3Schema defines the schema of a variable via OpenAPI v3 schema. The schema is a subset of the schema used in Kubernetes CRDs.
	OpenAPIV3Schema ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaInput `pulumi:"openAPIV3Schema"`
}

func (ClusterClassStatusVariablesDefinitionsSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassStatusVariablesDefinitionsSchema)(nil)).Elem()
}

func (i ClusterClassStatusVariablesDefinitionsSchemaArgs) ToClusterClassStatusVariablesDefinitionsSchemaOutput() ClusterClassStatusVariablesDefinitionsSchemaOutput {
	return i.ToClusterClassStatusVariablesDefinitionsSchemaOutputWithContext(context.Background())
}

func (i ClusterClassStatusVariablesDefinitionsSchemaArgs) ToClusterClassStatusVariablesDefinitionsSchemaOutputWithContext(ctx context.Context) ClusterClassStatusVariablesDefinitionsSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassStatusVariablesDefinitionsSchemaOutput)
}

// Schema defines the schema of the variable.
type ClusterClassStatusVariablesDefinitionsSchemaOutput struct{ *pulumi.OutputState }

func (ClusterClassStatusVariablesDefinitionsSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassStatusVariablesDefinitionsSchema)(nil)).Elem()
}

func (o ClusterClassStatusVariablesDefinitionsSchemaOutput) ToClusterClassStatusVariablesDefinitionsSchemaOutput() ClusterClassStatusVariablesDefinitionsSchemaOutput {
	return o
}

func (o ClusterClassStatusVariablesDefinitionsSchemaOutput) ToClusterClassStatusVariablesDefinitionsSchemaOutputWithContext(ctx context.Context) ClusterClassStatusVariablesDefinitionsSchemaOutput {
	return o
}

// OpenAPIV3Schema defines the schema of a variable via OpenAPI v3 schema. The schema is a subset of the schema used in Kubernetes CRDs.
func (o ClusterClassStatusVariablesDefinitionsSchemaOutput) OpenAPIV3Schema() ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchema) ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema {
		return v.OpenAPIV3Schema
	}).(ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput)
}

// OpenAPIV3Schema defines the schema of a variable via OpenAPI v3 schema. The schema is a subset of the schema used in Kubernetes CRDs.
type ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema struct {
	// AdditionalProperties specifies the schema of values in a map (keys are always strings). NOTE: Can only be set if type is object. NOTE: AdditionalProperties is mutually exclusive with Properties. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
	AdditionalProperties map[string]interface{} `pulumi:"additionalProperties"`
	// Default is the default value of the variable. NOTE: Can be set for all types.
	Default map[string]interface{} `pulumi:"default"`
	// Description is a human-readable description of this variable.
	Description *string `pulumi:"description"`
	// Enum is the list of valid values of the variable. NOTE: Can be set for all types.
	Enum []map[string]interface{} `pulumi:"enum"`
	// Example is an example for this variable.
	Example map[string]interface{} `pulumi:"example"`
	// ExclusiveMaximum specifies if the Maximum is exclusive. NOTE: Can only be set if type is integer or number.
	ExclusiveMaximum *bool `pulumi:"exclusiveMaximum"`
	// ExclusiveMinimum specifies if the Minimum is exclusive. NOTE: Can only be set if type is integer or number.
	ExclusiveMinimum *bool `pulumi:"exclusiveMinimum"`
	// Format is an OpenAPI v3 format string. Unknown formats are ignored. For a list of supported formats please see: (of the k8s.io/apiextensions-apiserver version we're currently using) https://github.com/kubernetes/apiextensions-apiserver/blob/master/pkg/apiserver/validation/formats.go NOTE: Can only be set if type is string.
	Format *string `pulumi:"format"`
	// Items specifies fields of an array. NOTE: Can only be set if type is array. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
	Items map[string]interface{} `pulumi:"items"`
	// MaxItems is the max length of an array variable. NOTE: Can only be set if type is array.
	MaxItems *int `pulumi:"maxItems"`
	// MaxLength is the max length of a string variable. NOTE: Can only be set if type is string.
	MaxLength *int `pulumi:"maxLength"`
	// Maximum is the maximum of an integer or number variable. If ExclusiveMaximum is false, the variable is valid if it is lower than, or equal to, the value of Maximum. If ExclusiveMaximum is true, the variable is valid if it is strictly lower than the value of Maximum. NOTE: Can only be set if type is integer or number.
	Maximum *int `pulumi:"maximum"`
	// MinItems is the min length of an array variable. NOTE: Can only be set if type is array.
	MinItems *int `pulumi:"minItems"`
	// MinLength is the min length of a string variable. NOTE: Can only be set if type is string.
	MinLength *int `pulumi:"minLength"`
	// Minimum is the minimum of an integer or number variable. If ExclusiveMinimum is false, the variable is valid if it is greater than, or equal to, the value of Minimum. If ExclusiveMinimum is true, the variable is valid if it is strictly greater than the value of Minimum. NOTE: Can only be set if type is integer or number.
	Minimum *int `pulumi:"minimum"`
	// Pattern is the regex which a string variable must match. NOTE: Can only be set if type is string.
	Pattern *string `pulumi:"pattern"`
	// Properties specifies fields of an object. NOTE: Can only be set if type is object. NOTE: Properties is mutually exclusive with AdditionalProperties. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
	Properties map[string]interface{} `pulumi:"properties"`
	// Required specifies which fields of an object are required. NOTE: Can only be set if type is object.
	Required []string `pulumi:"required"`
	// Type is the type of the variable. Valid values are: object, array, string, integer, number or boolean.
	Type string `pulumi:"type"`
	// UniqueItems specifies if items in an array must be unique. NOTE: Can only be set if type is array.
	UniqueItems *bool `pulumi:"uniqueItems"`
	// XPreserveUnknownFields allows setting fields in a variable object which are not defined in the variable schema. This affects fields recursively, except if nested properties or additionalProperties are specified in the schema.
	XKubernetesPreserveUnknownFields *bool `pulumi:"x-kubernetes-preserve-unknown-fields"`
}

// ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaInput is an input type that accepts ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaArgs and ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput values.
// You can construct a concrete instance of `ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaInput` via:
//
//	ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaArgs{...}
type ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaInput interface {
	pulumi.Input

	ToClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput() ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput
	ToClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutputWithContext(context.Context) ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput
}

// OpenAPIV3Schema defines the schema of a variable via OpenAPI v3 schema. The schema is a subset of the schema used in Kubernetes CRDs.
type ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaArgs struct {
	// AdditionalProperties specifies the schema of values in a map (keys are always strings). NOTE: Can only be set if type is object. NOTE: AdditionalProperties is mutually exclusive with Properties. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
	AdditionalProperties pulumi.MapInput `pulumi:"additionalProperties"`
	// Default is the default value of the variable. NOTE: Can be set for all types.
	Default pulumi.MapInput `pulumi:"default"`
	// Description is a human-readable description of this variable.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum is the list of valid values of the variable. NOTE: Can be set for all types.
	Enum pulumi.MapArrayInput `pulumi:"enum"`
	// Example is an example for this variable.
	Example pulumi.MapInput `pulumi:"example"`
	// ExclusiveMaximum specifies if the Maximum is exclusive. NOTE: Can only be set if type is integer or number.
	ExclusiveMaximum pulumi.BoolPtrInput `pulumi:"exclusiveMaximum"`
	// ExclusiveMinimum specifies if the Minimum is exclusive. NOTE: Can only be set if type is integer or number.
	ExclusiveMinimum pulumi.BoolPtrInput `pulumi:"exclusiveMinimum"`
	// Format is an OpenAPI v3 format string. Unknown formats are ignored. For a list of supported formats please see: (of the k8s.io/apiextensions-apiserver version we're currently using) https://github.com/kubernetes/apiextensions-apiserver/blob/master/pkg/apiserver/validation/formats.go NOTE: Can only be set if type is string.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Items specifies fields of an array. NOTE: Can only be set if type is array. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
	Items pulumi.MapInput `pulumi:"items"`
	// MaxItems is the max length of an array variable. NOTE: Can only be set if type is array.
	MaxItems pulumi.IntPtrInput `pulumi:"maxItems"`
	// MaxLength is the max length of a string variable. NOTE: Can only be set if type is string.
	MaxLength pulumi.IntPtrInput `pulumi:"maxLength"`
	// Maximum is the maximum of an integer or number variable. If ExclusiveMaximum is false, the variable is valid if it is lower than, or equal to, the value of Maximum. If ExclusiveMaximum is true, the variable is valid if it is strictly lower than the value of Maximum. NOTE: Can only be set if type is integer or number.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// MinItems is the min length of an array variable. NOTE: Can only be set if type is array.
	MinItems pulumi.IntPtrInput `pulumi:"minItems"`
	// MinLength is the min length of a string variable. NOTE: Can only be set if type is string.
	MinLength pulumi.IntPtrInput `pulumi:"minLength"`
	// Minimum is the minimum of an integer or number variable. If ExclusiveMinimum is false, the variable is valid if it is greater than, or equal to, the value of Minimum. If ExclusiveMinimum is true, the variable is valid if it is strictly greater than the value of Minimum. NOTE: Can only be set if type is integer or number.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// Pattern is the regex which a string variable must match. NOTE: Can only be set if type is string.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Properties specifies fields of an object. NOTE: Can only be set if type is object. NOTE: Properties is mutually exclusive with AdditionalProperties. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
	Properties pulumi.MapInput `pulumi:"properties"`
	// Required specifies which fields of an object are required. NOTE: Can only be set if type is object.
	Required pulumi.StringArrayInput `pulumi:"required"`
	// Type is the type of the variable. Valid values are: object, array, string, integer, number or boolean.
	Type pulumi.StringInput `pulumi:"type"`
	// UniqueItems specifies if items in an array must be unique. NOTE: Can only be set if type is array.
	UniqueItems pulumi.BoolPtrInput `pulumi:"uniqueItems"`
	// XPreserveUnknownFields allows setting fields in a variable object which are not defined in the variable schema. This affects fields recursively, except if nested properties or additionalProperties are specified in the schema.
	XKubernetesPreserveUnknownFields pulumi.BoolPtrInput `pulumi:"x-kubernetes-preserve-unknown-fields"`
}

func (ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema)(nil)).Elem()
}

func (i ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaArgs) ToClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput() ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput {
	return i.ToClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutputWithContext(context.Background())
}

func (i ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaArgs) ToClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutputWithContext(ctx context.Context) ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput)
}

// OpenAPIV3Schema defines the schema of a variable via OpenAPI v3 schema. The schema is a subset of the schema used in Kubernetes CRDs.
type ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput struct{ *pulumi.OutputState }

func (ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema)(nil)).Elem()
}

func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) ToClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput() ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput {
	return o
}

func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) ToClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutputWithContext(ctx context.Context) ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput {
	return o
}

// AdditionalProperties specifies the schema of values in a map (keys are always strings). NOTE: Can only be set if type is object. NOTE: AdditionalProperties is mutually exclusive with Properties. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) AdditionalProperties() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) map[string]interface{} {
		return v.AdditionalProperties
	}).(pulumi.MapOutput)
}

// Default is the default value of the variable. NOTE: Can be set for all types.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) Default() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) map[string]interface{} {
		return v.Default
	}).(pulumi.MapOutput)
}

// Description is a human-readable description of this variable.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum is the list of valid values of the variable. NOTE: Can be set for all types.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) Enum() pulumi.MapArrayOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) []map[string]interface{} {
		return v.Enum
	}).(pulumi.MapArrayOutput)
}

// Example is an example for this variable.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) Example() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) map[string]interface{} {
		return v.Example
	}).(pulumi.MapOutput)
}

// ExclusiveMaximum specifies if the Maximum is exclusive. NOTE: Can only be set if type is integer or number.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) ExclusiveMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) *bool { return v.ExclusiveMaximum }).(pulumi.BoolPtrOutput)
}

// ExclusiveMinimum specifies if the Minimum is exclusive. NOTE: Can only be set if type is integer or number.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) ExclusiveMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) *bool { return v.ExclusiveMinimum }).(pulumi.BoolPtrOutput)
}

// Format is an OpenAPI v3 format string. Unknown formats are ignored. For a list of supported formats please see: (of the k8s.io/apiextensions-apiserver version we're currently using) https://github.com/kubernetes/apiextensions-apiserver/blob/master/pkg/apiserver/validation/formats.go NOTE: Can only be set if type is string.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Items specifies fields of an array. NOTE: Can only be set if type is array. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) Items() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) map[string]interface{} {
		return v.Items
	}).(pulumi.MapOutput)
}

// MaxItems is the max length of an array variable. NOTE: Can only be set if type is array.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

// MaxLength is the max length of a string variable. NOTE: Can only be set if type is string.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) *int { return v.MaxLength }).(pulumi.IntPtrOutput)
}

// Maximum is the maximum of an integer or number variable. If ExclusiveMaximum is false, the variable is valid if it is lower than, or equal to, the value of Maximum. If ExclusiveMaximum is true, the variable is valid if it is strictly lower than the value of Maximum. NOTE: Can only be set if type is integer or number.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// MinItems is the min length of an array variable. NOTE: Can only be set if type is array.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) MinItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) *int { return v.MinItems }).(pulumi.IntPtrOutput)
}

// MinLength is the min length of a string variable. NOTE: Can only be set if type is string.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) *int { return v.MinLength }).(pulumi.IntPtrOutput)
}

// Minimum is the minimum of an integer or number variable. If ExclusiveMinimum is false, the variable is valid if it is greater than, or equal to, the value of Minimum. If ExclusiveMinimum is true, the variable is valid if it is strictly greater than the value of Minimum. NOTE: Can only be set if type is integer or number.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Pattern is the regex which a string variable must match. NOTE: Can only be set if type is string.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Properties specifies fields of an object. NOTE: Can only be set if type is object. NOTE: Properties is mutually exclusive with AdditionalProperties. NOTE: This field uses PreserveUnknownFields and Schemaless, because recursive validation is not possible.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) Properties() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) map[string]interface{} {
		return v.Properties
	}).(pulumi.MapOutput)
}

// Required specifies which fields of an object are required. NOTE: Can only be set if type is object.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) Required() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) []string { return v.Required }).(pulumi.StringArrayOutput)
}

// Type is the type of the variable. Valid values are: object, array, string, integer, number or boolean.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) string { return v.Type }).(pulumi.StringOutput)
}

// UniqueItems specifies if items in an array must be unique. NOTE: Can only be set if type is array.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) UniqueItems() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) *bool { return v.UniqueItems }).(pulumi.BoolPtrOutput)
}

// XPreserveUnknownFields allows setting fields in a variable object which are not defined in the variable schema. This affects fields recursively, except if nested properties or additionalProperties are specified in the schema.
func (o ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput) XKubernetesPreserveUnknownFields() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3Schema) *bool {
		return v.XKubernetesPreserveUnknownFields
	}).(pulumi.BoolPtrOutput)
}

type ClusterMetadata struct {
}

// ClusterSpec defines the desired state of Cluster.
type ClusterSpec struct {
	// Cluster network configuration.
	ClusterNetwork *ClusterSpecClusterNetwork `pulumi:"clusterNetwork"`
	// ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
	ControlPlaneEndpoint *ClusterSpecControlPlaneEndpoint `pulumi:"controlPlaneEndpoint"`
	// ControlPlaneRef is an optional reference to a provider-specific resource that holds the details for provisioning the Control Plane for a Cluster.
	ControlPlaneRef *ClusterSpecControlPlaneRef `pulumi:"controlPlaneRef"`
	// InfrastructureRef is a reference to a provider-specific resource that holds the details for provisioning infrastructure for a cluster in said provider.
	InfrastructureRef *ClusterSpecInfrastructureRef `pulumi:"infrastructureRef"`
	// Paused can be used to prevent controllers from processing the Cluster and all its associated objects.
	Paused *bool `pulumi:"paused"`
	// This encapsulates the topology for the cluster. NOTE: It is required to enable the ClusterTopology feature gate flag to activate managed topologies support; this feature is highly experimental, and parts of it might still be not implemented.
	Topology *ClusterSpecTopology `pulumi:"topology"`
}

// ClusterSpecInput is an input type that accepts ClusterSpecArgs and ClusterSpecOutput values.
// You can construct a concrete instance of `ClusterSpecInput` via:
//
//	ClusterSpecArgs{...}
type ClusterSpecInput interface {
	pulumi.Input

	ToClusterSpecOutput() ClusterSpecOutput
	ToClusterSpecOutputWithContext(context.Context) ClusterSpecOutput
}

// ClusterSpec defines the desired state of Cluster.
type ClusterSpecArgs struct {
	// Cluster network configuration.
	ClusterNetwork ClusterSpecClusterNetworkPtrInput `pulumi:"clusterNetwork"`
	// ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
	ControlPlaneEndpoint ClusterSpecControlPlaneEndpointPtrInput `pulumi:"controlPlaneEndpoint"`
	// ControlPlaneRef is an optional reference to a provider-specific resource that holds the details for provisioning the Control Plane for a Cluster.
	ControlPlaneRef ClusterSpecControlPlaneRefPtrInput `pulumi:"controlPlaneRef"`
	// InfrastructureRef is a reference to a provider-specific resource that holds the details for provisioning infrastructure for a cluster in said provider.
	InfrastructureRef ClusterSpecInfrastructureRefPtrInput `pulumi:"infrastructureRef"`
	// Paused can be used to prevent controllers from processing the Cluster and all its associated objects.
	Paused pulumi.BoolPtrInput `pulumi:"paused"`
	// This encapsulates the topology for the cluster. NOTE: It is required to enable the ClusterTopology feature gate flag to activate managed topologies support; this feature is highly experimental, and parts of it might still be not implemented.
	Topology ClusterSpecTopologyPtrInput `pulumi:"topology"`
}

func (ClusterSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpec)(nil)).Elem()
}

func (i ClusterSpecArgs) ToClusterSpecOutput() ClusterSpecOutput {
	return i.ToClusterSpecOutputWithContext(context.Background())
}

func (i ClusterSpecArgs) ToClusterSpecOutputWithContext(ctx context.Context) ClusterSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecOutput)
}

func (i ClusterSpecArgs) ToClusterSpecPtrOutput() ClusterSpecPtrOutput {
	return i.ToClusterSpecPtrOutputWithContext(context.Background())
}

func (i ClusterSpecArgs) ToClusterSpecPtrOutputWithContext(ctx context.Context) ClusterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecOutput).ToClusterSpecPtrOutputWithContext(ctx)
}

// ClusterSpecPtrInput is an input type that accepts ClusterSpecArgs, ClusterSpecPtr and ClusterSpecPtrOutput values.
// You can construct a concrete instance of `ClusterSpecPtrInput` via:
//
//	        ClusterSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecPtrInput interface {
	pulumi.Input

	ToClusterSpecPtrOutput() ClusterSpecPtrOutput
	ToClusterSpecPtrOutputWithContext(context.Context) ClusterSpecPtrOutput
}

type clusterSpecPtrType ClusterSpecArgs

func ClusterSpecPtr(v *ClusterSpecArgs) ClusterSpecPtrInput {
	return (*clusterSpecPtrType)(v)
}

func (*clusterSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpec)(nil)).Elem()
}

func (i *clusterSpecPtrType) ToClusterSpecPtrOutput() ClusterSpecPtrOutput {
	return i.ToClusterSpecPtrOutputWithContext(context.Background())
}

func (i *clusterSpecPtrType) ToClusterSpecPtrOutputWithContext(ctx context.Context) ClusterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecPtrOutput)
}

// ClusterSpec defines the desired state of Cluster.
type ClusterSpecOutput struct{ *pulumi.OutputState }

func (ClusterSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpec)(nil)).Elem()
}

func (o ClusterSpecOutput) ToClusterSpecOutput() ClusterSpecOutput {
	return o
}

func (o ClusterSpecOutput) ToClusterSpecOutputWithContext(ctx context.Context) ClusterSpecOutput {
	return o
}

func (o ClusterSpecOutput) ToClusterSpecPtrOutput() ClusterSpecPtrOutput {
	return o.ToClusterSpecPtrOutputWithContext(context.Background())
}

func (o ClusterSpecOutput) ToClusterSpecPtrOutputWithContext(ctx context.Context) ClusterSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpec) *ClusterSpec {
		return &v
	}).(ClusterSpecPtrOutput)
}

// Cluster network configuration.
func (o ClusterSpecOutput) ClusterNetwork() ClusterSpecClusterNetworkPtrOutput {
	return o.ApplyT(func(v ClusterSpec) *ClusterSpecClusterNetwork { return v.ClusterNetwork }).(ClusterSpecClusterNetworkPtrOutput)
}

// ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
func (o ClusterSpecOutput) ControlPlaneEndpoint() ClusterSpecControlPlaneEndpointPtrOutput {
	return o.ApplyT(func(v ClusterSpec) *ClusterSpecControlPlaneEndpoint { return v.ControlPlaneEndpoint }).(ClusterSpecControlPlaneEndpointPtrOutput)
}

// ControlPlaneRef is an optional reference to a provider-specific resource that holds the details for provisioning the Control Plane for a Cluster.
func (o ClusterSpecOutput) ControlPlaneRef() ClusterSpecControlPlaneRefPtrOutput {
	return o.ApplyT(func(v ClusterSpec) *ClusterSpecControlPlaneRef { return v.ControlPlaneRef }).(ClusterSpecControlPlaneRefPtrOutput)
}

// InfrastructureRef is a reference to a provider-specific resource that holds the details for provisioning infrastructure for a cluster in said provider.
func (o ClusterSpecOutput) InfrastructureRef() ClusterSpecInfrastructureRefPtrOutput {
	return o.ApplyT(func(v ClusterSpec) *ClusterSpecInfrastructureRef { return v.InfrastructureRef }).(ClusterSpecInfrastructureRefPtrOutput)
}

// Paused can be used to prevent controllers from processing the Cluster and all its associated objects.
func (o ClusterSpecOutput) Paused() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterSpec) *bool { return v.Paused }).(pulumi.BoolPtrOutput)
}

// This encapsulates the topology for the cluster. NOTE: It is required to enable the ClusterTopology feature gate flag to activate managed topologies support; this feature is highly experimental, and parts of it might still be not implemented.
func (o ClusterSpecOutput) Topology() ClusterSpecTopologyPtrOutput {
	return o.ApplyT(func(v ClusterSpec) *ClusterSpecTopology { return v.Topology }).(ClusterSpecTopologyPtrOutput)
}

type ClusterSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpec)(nil)).Elem()
}

func (o ClusterSpecPtrOutput) ToClusterSpecPtrOutput() ClusterSpecPtrOutput {
	return o
}

func (o ClusterSpecPtrOutput) ToClusterSpecPtrOutputWithContext(ctx context.Context) ClusterSpecPtrOutput {
	return o
}

func (o ClusterSpecPtrOutput) Elem() ClusterSpecOutput {
	return o.ApplyT(func(v *ClusterSpec) ClusterSpec {
		if v != nil {
			return *v
		}
		var ret ClusterSpec
		return ret
	}).(ClusterSpecOutput)
}

// Cluster network configuration.
func (o ClusterSpecPtrOutput) ClusterNetwork() ClusterSpecClusterNetworkPtrOutput {
	return o.ApplyT(func(v *ClusterSpec) *ClusterSpecClusterNetwork {
		if v == nil {
			return nil
		}
		return v.ClusterNetwork
	}).(ClusterSpecClusterNetworkPtrOutput)
}

// ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
func (o ClusterSpecPtrOutput) ControlPlaneEndpoint() ClusterSpecControlPlaneEndpointPtrOutput {
	return o.ApplyT(func(v *ClusterSpec) *ClusterSpecControlPlaneEndpoint {
		if v == nil {
			return nil
		}
		return v.ControlPlaneEndpoint
	}).(ClusterSpecControlPlaneEndpointPtrOutput)
}

// ControlPlaneRef is an optional reference to a provider-specific resource that holds the details for provisioning the Control Plane for a Cluster.
func (o ClusterSpecPtrOutput) ControlPlaneRef() ClusterSpecControlPlaneRefPtrOutput {
	return o.ApplyT(func(v *ClusterSpec) *ClusterSpecControlPlaneRef {
		if v == nil {
			return nil
		}
		return v.ControlPlaneRef
	}).(ClusterSpecControlPlaneRefPtrOutput)
}

// InfrastructureRef is a reference to a provider-specific resource that holds the details for provisioning infrastructure for a cluster in said provider.
func (o ClusterSpecPtrOutput) InfrastructureRef() ClusterSpecInfrastructureRefPtrOutput {
	return o.ApplyT(func(v *ClusterSpec) *ClusterSpecInfrastructureRef {
		if v == nil {
			return nil
		}
		return v.InfrastructureRef
	}).(ClusterSpecInfrastructureRefPtrOutput)
}

// Paused can be used to prevent controllers from processing the Cluster and all its associated objects.
func (o ClusterSpecPtrOutput) Paused() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Paused
	}).(pulumi.BoolPtrOutput)
}

// This encapsulates the topology for the cluster. NOTE: It is required to enable the ClusterTopology feature gate flag to activate managed topologies support; this feature is highly experimental, and parts of it might still be not implemented.
func (o ClusterSpecPtrOutput) Topology() ClusterSpecTopologyPtrOutput {
	return o.ApplyT(func(v *ClusterSpec) *ClusterSpecTopology {
		if v == nil {
			return nil
		}
		return v.Topology
	}).(ClusterSpecTopologyPtrOutput)
}

// Cluster network configuration.
type ClusterSpecClusterNetwork struct {
	// APIServerPort specifies the port the API Server should bind to. Defaults to 6443.
	ApiServerPort *int `pulumi:"apiServerPort"`
	// The network ranges from which Pod networks are allocated.
	Pods *ClusterSpecClusterNetworkPods `pulumi:"pods"`
	// Domain name for services.
	ServiceDomain *string `pulumi:"serviceDomain"`
	// The network ranges from which service VIPs are allocated.
	Services *ClusterSpecClusterNetworkServices `pulumi:"services"`
}

// ClusterSpecClusterNetworkInput is an input type that accepts ClusterSpecClusterNetworkArgs and ClusterSpecClusterNetworkOutput values.
// You can construct a concrete instance of `ClusterSpecClusterNetworkInput` via:
//
//	ClusterSpecClusterNetworkArgs{...}
type ClusterSpecClusterNetworkInput interface {
	pulumi.Input

	ToClusterSpecClusterNetworkOutput() ClusterSpecClusterNetworkOutput
	ToClusterSpecClusterNetworkOutputWithContext(context.Context) ClusterSpecClusterNetworkOutput
}

// Cluster network configuration.
type ClusterSpecClusterNetworkArgs struct {
	// APIServerPort specifies the port the API Server should bind to. Defaults to 6443.
	ApiServerPort pulumi.IntPtrInput `pulumi:"apiServerPort"`
	// The network ranges from which Pod networks are allocated.
	Pods ClusterSpecClusterNetworkPodsPtrInput `pulumi:"pods"`
	// Domain name for services.
	ServiceDomain pulumi.StringPtrInput `pulumi:"serviceDomain"`
	// The network ranges from which service VIPs are allocated.
	Services ClusterSpecClusterNetworkServicesPtrInput `pulumi:"services"`
}

func (ClusterSpecClusterNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecClusterNetwork)(nil)).Elem()
}

func (i ClusterSpecClusterNetworkArgs) ToClusterSpecClusterNetworkOutput() ClusterSpecClusterNetworkOutput {
	return i.ToClusterSpecClusterNetworkOutputWithContext(context.Background())
}

func (i ClusterSpecClusterNetworkArgs) ToClusterSpecClusterNetworkOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecClusterNetworkOutput)
}

func (i ClusterSpecClusterNetworkArgs) ToClusterSpecClusterNetworkPtrOutput() ClusterSpecClusterNetworkPtrOutput {
	return i.ToClusterSpecClusterNetworkPtrOutputWithContext(context.Background())
}

func (i ClusterSpecClusterNetworkArgs) ToClusterSpecClusterNetworkPtrOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecClusterNetworkOutput).ToClusterSpecClusterNetworkPtrOutputWithContext(ctx)
}

// ClusterSpecClusterNetworkPtrInput is an input type that accepts ClusterSpecClusterNetworkArgs, ClusterSpecClusterNetworkPtr and ClusterSpecClusterNetworkPtrOutput values.
// You can construct a concrete instance of `ClusterSpecClusterNetworkPtrInput` via:
//
//	        ClusterSpecClusterNetworkArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecClusterNetworkPtrInput interface {
	pulumi.Input

	ToClusterSpecClusterNetworkPtrOutput() ClusterSpecClusterNetworkPtrOutput
	ToClusterSpecClusterNetworkPtrOutputWithContext(context.Context) ClusterSpecClusterNetworkPtrOutput
}

type clusterSpecClusterNetworkPtrType ClusterSpecClusterNetworkArgs

func ClusterSpecClusterNetworkPtr(v *ClusterSpecClusterNetworkArgs) ClusterSpecClusterNetworkPtrInput {
	return (*clusterSpecClusterNetworkPtrType)(v)
}

func (*clusterSpecClusterNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecClusterNetwork)(nil)).Elem()
}

func (i *clusterSpecClusterNetworkPtrType) ToClusterSpecClusterNetworkPtrOutput() ClusterSpecClusterNetworkPtrOutput {
	return i.ToClusterSpecClusterNetworkPtrOutputWithContext(context.Background())
}

func (i *clusterSpecClusterNetworkPtrType) ToClusterSpecClusterNetworkPtrOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecClusterNetworkPtrOutput)
}

// Cluster network configuration.
type ClusterSpecClusterNetworkOutput struct{ *pulumi.OutputState }

func (ClusterSpecClusterNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecClusterNetwork)(nil)).Elem()
}

func (o ClusterSpecClusterNetworkOutput) ToClusterSpecClusterNetworkOutput() ClusterSpecClusterNetworkOutput {
	return o
}

func (o ClusterSpecClusterNetworkOutput) ToClusterSpecClusterNetworkOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkOutput {
	return o
}

func (o ClusterSpecClusterNetworkOutput) ToClusterSpecClusterNetworkPtrOutput() ClusterSpecClusterNetworkPtrOutput {
	return o.ToClusterSpecClusterNetworkPtrOutputWithContext(context.Background())
}

func (o ClusterSpecClusterNetworkOutput) ToClusterSpecClusterNetworkPtrOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecClusterNetwork) *ClusterSpecClusterNetwork {
		return &v
	}).(ClusterSpecClusterNetworkPtrOutput)
}

// APIServerPort specifies the port the API Server should bind to. Defaults to 6443.
func (o ClusterSpecClusterNetworkOutput) ApiServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSpecClusterNetwork) *int { return v.ApiServerPort }).(pulumi.IntPtrOutput)
}

// The network ranges from which Pod networks are allocated.
func (o ClusterSpecClusterNetworkOutput) Pods() ClusterSpecClusterNetworkPodsPtrOutput {
	return o.ApplyT(func(v ClusterSpecClusterNetwork) *ClusterSpecClusterNetworkPods { return v.Pods }).(ClusterSpecClusterNetworkPodsPtrOutput)
}

// Domain name for services.
func (o ClusterSpecClusterNetworkOutput) ServiceDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecClusterNetwork) *string { return v.ServiceDomain }).(pulumi.StringPtrOutput)
}

// The network ranges from which service VIPs are allocated.
func (o ClusterSpecClusterNetworkOutput) Services() ClusterSpecClusterNetworkServicesPtrOutput {
	return o.ApplyT(func(v ClusterSpecClusterNetwork) *ClusterSpecClusterNetworkServices { return v.Services }).(ClusterSpecClusterNetworkServicesPtrOutput)
}

type ClusterSpecClusterNetworkPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecClusterNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecClusterNetwork)(nil)).Elem()
}

func (o ClusterSpecClusterNetworkPtrOutput) ToClusterSpecClusterNetworkPtrOutput() ClusterSpecClusterNetworkPtrOutput {
	return o
}

func (o ClusterSpecClusterNetworkPtrOutput) ToClusterSpecClusterNetworkPtrOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkPtrOutput {
	return o
}

func (o ClusterSpecClusterNetworkPtrOutput) Elem() ClusterSpecClusterNetworkOutput {
	return o.ApplyT(func(v *ClusterSpecClusterNetwork) ClusterSpecClusterNetwork {
		if v != nil {
			return *v
		}
		var ret ClusterSpecClusterNetwork
		return ret
	}).(ClusterSpecClusterNetworkOutput)
}

// APIServerPort specifies the port the API Server should bind to. Defaults to 6443.
func (o ClusterSpecClusterNetworkPtrOutput) ApiServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterSpecClusterNetwork) *int {
		if v == nil {
			return nil
		}
		return v.ApiServerPort
	}).(pulumi.IntPtrOutput)
}

// The network ranges from which Pod networks are allocated.
func (o ClusterSpecClusterNetworkPtrOutput) Pods() ClusterSpecClusterNetworkPodsPtrOutput {
	return o.ApplyT(func(v *ClusterSpecClusterNetwork) *ClusterSpecClusterNetworkPods {
		if v == nil {
			return nil
		}
		return v.Pods
	}).(ClusterSpecClusterNetworkPodsPtrOutput)
}

// Domain name for services.
func (o ClusterSpecClusterNetworkPtrOutput) ServiceDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecClusterNetwork) *string {
		if v == nil {
			return nil
		}
		return v.ServiceDomain
	}).(pulumi.StringPtrOutput)
}

// The network ranges from which service VIPs are allocated.
func (o ClusterSpecClusterNetworkPtrOutput) Services() ClusterSpecClusterNetworkServicesPtrOutput {
	return o.ApplyT(func(v *ClusterSpecClusterNetwork) *ClusterSpecClusterNetworkServices {
		if v == nil {
			return nil
		}
		return v.Services
	}).(ClusterSpecClusterNetworkServicesPtrOutput)
}

// The network ranges from which Pod networks are allocated.
type ClusterSpecClusterNetworkPods struct {
	CidrBlocks []string `pulumi:"cidrBlocks"`
}

// ClusterSpecClusterNetworkPodsInput is an input type that accepts ClusterSpecClusterNetworkPodsArgs and ClusterSpecClusterNetworkPodsOutput values.
// You can construct a concrete instance of `ClusterSpecClusterNetworkPodsInput` via:
//
//	ClusterSpecClusterNetworkPodsArgs{...}
type ClusterSpecClusterNetworkPodsInput interface {
	pulumi.Input

	ToClusterSpecClusterNetworkPodsOutput() ClusterSpecClusterNetworkPodsOutput
	ToClusterSpecClusterNetworkPodsOutputWithContext(context.Context) ClusterSpecClusterNetworkPodsOutput
}

// The network ranges from which Pod networks are allocated.
type ClusterSpecClusterNetworkPodsArgs struct {
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
}

func (ClusterSpecClusterNetworkPodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecClusterNetworkPods)(nil)).Elem()
}

func (i ClusterSpecClusterNetworkPodsArgs) ToClusterSpecClusterNetworkPodsOutput() ClusterSpecClusterNetworkPodsOutput {
	return i.ToClusterSpecClusterNetworkPodsOutputWithContext(context.Background())
}

func (i ClusterSpecClusterNetworkPodsArgs) ToClusterSpecClusterNetworkPodsOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkPodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecClusterNetworkPodsOutput)
}

func (i ClusterSpecClusterNetworkPodsArgs) ToClusterSpecClusterNetworkPodsPtrOutput() ClusterSpecClusterNetworkPodsPtrOutput {
	return i.ToClusterSpecClusterNetworkPodsPtrOutputWithContext(context.Background())
}

func (i ClusterSpecClusterNetworkPodsArgs) ToClusterSpecClusterNetworkPodsPtrOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkPodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecClusterNetworkPodsOutput).ToClusterSpecClusterNetworkPodsPtrOutputWithContext(ctx)
}

// ClusterSpecClusterNetworkPodsPtrInput is an input type that accepts ClusterSpecClusterNetworkPodsArgs, ClusterSpecClusterNetworkPodsPtr and ClusterSpecClusterNetworkPodsPtrOutput values.
// You can construct a concrete instance of `ClusterSpecClusterNetworkPodsPtrInput` via:
//
//	        ClusterSpecClusterNetworkPodsArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecClusterNetworkPodsPtrInput interface {
	pulumi.Input

	ToClusterSpecClusterNetworkPodsPtrOutput() ClusterSpecClusterNetworkPodsPtrOutput
	ToClusterSpecClusterNetworkPodsPtrOutputWithContext(context.Context) ClusterSpecClusterNetworkPodsPtrOutput
}

type clusterSpecClusterNetworkPodsPtrType ClusterSpecClusterNetworkPodsArgs

func ClusterSpecClusterNetworkPodsPtr(v *ClusterSpecClusterNetworkPodsArgs) ClusterSpecClusterNetworkPodsPtrInput {
	return (*clusterSpecClusterNetworkPodsPtrType)(v)
}

func (*clusterSpecClusterNetworkPodsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecClusterNetworkPods)(nil)).Elem()
}

func (i *clusterSpecClusterNetworkPodsPtrType) ToClusterSpecClusterNetworkPodsPtrOutput() ClusterSpecClusterNetworkPodsPtrOutput {
	return i.ToClusterSpecClusterNetworkPodsPtrOutputWithContext(context.Background())
}

func (i *clusterSpecClusterNetworkPodsPtrType) ToClusterSpecClusterNetworkPodsPtrOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkPodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecClusterNetworkPodsPtrOutput)
}

// The network ranges from which Pod networks are allocated.
type ClusterSpecClusterNetworkPodsOutput struct{ *pulumi.OutputState }

func (ClusterSpecClusterNetworkPodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecClusterNetworkPods)(nil)).Elem()
}

func (o ClusterSpecClusterNetworkPodsOutput) ToClusterSpecClusterNetworkPodsOutput() ClusterSpecClusterNetworkPodsOutput {
	return o
}

func (o ClusterSpecClusterNetworkPodsOutput) ToClusterSpecClusterNetworkPodsOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkPodsOutput {
	return o
}

func (o ClusterSpecClusterNetworkPodsOutput) ToClusterSpecClusterNetworkPodsPtrOutput() ClusterSpecClusterNetworkPodsPtrOutput {
	return o.ToClusterSpecClusterNetworkPodsPtrOutputWithContext(context.Background())
}

func (o ClusterSpecClusterNetworkPodsOutput) ToClusterSpecClusterNetworkPodsPtrOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkPodsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecClusterNetworkPods) *ClusterSpecClusterNetworkPods {
		return &v
	}).(ClusterSpecClusterNetworkPodsPtrOutput)
}

func (o ClusterSpecClusterNetworkPodsOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterSpecClusterNetworkPods) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

type ClusterSpecClusterNetworkPodsPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecClusterNetworkPodsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecClusterNetworkPods)(nil)).Elem()
}

func (o ClusterSpecClusterNetworkPodsPtrOutput) ToClusterSpecClusterNetworkPodsPtrOutput() ClusterSpecClusterNetworkPodsPtrOutput {
	return o
}

func (o ClusterSpecClusterNetworkPodsPtrOutput) ToClusterSpecClusterNetworkPodsPtrOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkPodsPtrOutput {
	return o
}

func (o ClusterSpecClusterNetworkPodsPtrOutput) Elem() ClusterSpecClusterNetworkPodsOutput {
	return o.ApplyT(func(v *ClusterSpecClusterNetworkPods) ClusterSpecClusterNetworkPods {
		if v != nil {
			return *v
		}
		var ret ClusterSpecClusterNetworkPods
		return ret
	}).(ClusterSpecClusterNetworkPodsOutput)
}

func (o ClusterSpecClusterNetworkPodsPtrOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterSpecClusterNetworkPods) []string {
		if v == nil {
			return nil
		}
		return v.CidrBlocks
	}).(pulumi.StringArrayOutput)
}

// The network ranges from which service VIPs are allocated.
type ClusterSpecClusterNetworkServices struct {
	CidrBlocks []string `pulumi:"cidrBlocks"`
}

// ClusterSpecClusterNetworkServicesInput is an input type that accepts ClusterSpecClusterNetworkServicesArgs and ClusterSpecClusterNetworkServicesOutput values.
// You can construct a concrete instance of `ClusterSpecClusterNetworkServicesInput` via:
//
//	ClusterSpecClusterNetworkServicesArgs{...}
type ClusterSpecClusterNetworkServicesInput interface {
	pulumi.Input

	ToClusterSpecClusterNetworkServicesOutput() ClusterSpecClusterNetworkServicesOutput
	ToClusterSpecClusterNetworkServicesOutputWithContext(context.Context) ClusterSpecClusterNetworkServicesOutput
}

// The network ranges from which service VIPs are allocated.
type ClusterSpecClusterNetworkServicesArgs struct {
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
}

func (ClusterSpecClusterNetworkServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecClusterNetworkServices)(nil)).Elem()
}

func (i ClusterSpecClusterNetworkServicesArgs) ToClusterSpecClusterNetworkServicesOutput() ClusterSpecClusterNetworkServicesOutput {
	return i.ToClusterSpecClusterNetworkServicesOutputWithContext(context.Background())
}

func (i ClusterSpecClusterNetworkServicesArgs) ToClusterSpecClusterNetworkServicesOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecClusterNetworkServicesOutput)
}

func (i ClusterSpecClusterNetworkServicesArgs) ToClusterSpecClusterNetworkServicesPtrOutput() ClusterSpecClusterNetworkServicesPtrOutput {
	return i.ToClusterSpecClusterNetworkServicesPtrOutputWithContext(context.Background())
}

func (i ClusterSpecClusterNetworkServicesArgs) ToClusterSpecClusterNetworkServicesPtrOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecClusterNetworkServicesOutput).ToClusterSpecClusterNetworkServicesPtrOutputWithContext(ctx)
}

// ClusterSpecClusterNetworkServicesPtrInput is an input type that accepts ClusterSpecClusterNetworkServicesArgs, ClusterSpecClusterNetworkServicesPtr and ClusterSpecClusterNetworkServicesPtrOutput values.
// You can construct a concrete instance of `ClusterSpecClusterNetworkServicesPtrInput` via:
//
//	        ClusterSpecClusterNetworkServicesArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecClusterNetworkServicesPtrInput interface {
	pulumi.Input

	ToClusterSpecClusterNetworkServicesPtrOutput() ClusterSpecClusterNetworkServicesPtrOutput
	ToClusterSpecClusterNetworkServicesPtrOutputWithContext(context.Context) ClusterSpecClusterNetworkServicesPtrOutput
}

type clusterSpecClusterNetworkServicesPtrType ClusterSpecClusterNetworkServicesArgs

func ClusterSpecClusterNetworkServicesPtr(v *ClusterSpecClusterNetworkServicesArgs) ClusterSpecClusterNetworkServicesPtrInput {
	return (*clusterSpecClusterNetworkServicesPtrType)(v)
}

func (*clusterSpecClusterNetworkServicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecClusterNetworkServices)(nil)).Elem()
}

func (i *clusterSpecClusterNetworkServicesPtrType) ToClusterSpecClusterNetworkServicesPtrOutput() ClusterSpecClusterNetworkServicesPtrOutput {
	return i.ToClusterSpecClusterNetworkServicesPtrOutputWithContext(context.Background())
}

func (i *clusterSpecClusterNetworkServicesPtrType) ToClusterSpecClusterNetworkServicesPtrOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecClusterNetworkServicesPtrOutput)
}

// The network ranges from which service VIPs are allocated.
type ClusterSpecClusterNetworkServicesOutput struct{ *pulumi.OutputState }

func (ClusterSpecClusterNetworkServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecClusterNetworkServices)(nil)).Elem()
}

func (o ClusterSpecClusterNetworkServicesOutput) ToClusterSpecClusterNetworkServicesOutput() ClusterSpecClusterNetworkServicesOutput {
	return o
}

func (o ClusterSpecClusterNetworkServicesOutput) ToClusterSpecClusterNetworkServicesOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkServicesOutput {
	return o
}

func (o ClusterSpecClusterNetworkServicesOutput) ToClusterSpecClusterNetworkServicesPtrOutput() ClusterSpecClusterNetworkServicesPtrOutput {
	return o.ToClusterSpecClusterNetworkServicesPtrOutputWithContext(context.Background())
}

func (o ClusterSpecClusterNetworkServicesOutput) ToClusterSpecClusterNetworkServicesPtrOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkServicesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecClusterNetworkServices) *ClusterSpecClusterNetworkServices {
		return &v
	}).(ClusterSpecClusterNetworkServicesPtrOutput)
}

func (o ClusterSpecClusterNetworkServicesOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterSpecClusterNetworkServices) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

type ClusterSpecClusterNetworkServicesPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecClusterNetworkServicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecClusterNetworkServices)(nil)).Elem()
}

func (o ClusterSpecClusterNetworkServicesPtrOutput) ToClusterSpecClusterNetworkServicesPtrOutput() ClusterSpecClusterNetworkServicesPtrOutput {
	return o
}

func (o ClusterSpecClusterNetworkServicesPtrOutput) ToClusterSpecClusterNetworkServicesPtrOutputWithContext(ctx context.Context) ClusterSpecClusterNetworkServicesPtrOutput {
	return o
}

func (o ClusterSpecClusterNetworkServicesPtrOutput) Elem() ClusterSpecClusterNetworkServicesOutput {
	return o.ApplyT(func(v *ClusterSpecClusterNetworkServices) ClusterSpecClusterNetworkServices {
		if v != nil {
			return *v
		}
		var ret ClusterSpecClusterNetworkServices
		return ret
	}).(ClusterSpecClusterNetworkServicesOutput)
}

func (o ClusterSpecClusterNetworkServicesPtrOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterSpecClusterNetworkServices) []string {
		if v == nil {
			return nil
		}
		return v.CidrBlocks
	}).(pulumi.StringArrayOutput)
}

// ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
type ClusterSpecControlPlaneEndpoint struct {
	// The hostname on which the API server is serving.
	Host string `pulumi:"host"`
	// The port on which the API server is serving.
	Port int `pulumi:"port"`
}

// ClusterSpecControlPlaneEndpointInput is an input type that accepts ClusterSpecControlPlaneEndpointArgs and ClusterSpecControlPlaneEndpointOutput values.
// You can construct a concrete instance of `ClusterSpecControlPlaneEndpointInput` via:
//
//	ClusterSpecControlPlaneEndpointArgs{...}
type ClusterSpecControlPlaneEndpointInput interface {
	pulumi.Input

	ToClusterSpecControlPlaneEndpointOutput() ClusterSpecControlPlaneEndpointOutput
	ToClusterSpecControlPlaneEndpointOutputWithContext(context.Context) ClusterSpecControlPlaneEndpointOutput
}

// ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
type ClusterSpecControlPlaneEndpointArgs struct {
	// The hostname on which the API server is serving.
	Host pulumi.StringInput `pulumi:"host"`
	// The port on which the API server is serving.
	Port pulumi.IntInput `pulumi:"port"`
}

func (ClusterSpecControlPlaneEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecControlPlaneEndpoint)(nil)).Elem()
}

func (i ClusterSpecControlPlaneEndpointArgs) ToClusterSpecControlPlaneEndpointOutput() ClusterSpecControlPlaneEndpointOutput {
	return i.ToClusterSpecControlPlaneEndpointOutputWithContext(context.Background())
}

func (i ClusterSpecControlPlaneEndpointArgs) ToClusterSpecControlPlaneEndpointOutputWithContext(ctx context.Context) ClusterSpecControlPlaneEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecControlPlaneEndpointOutput)
}

func (i ClusterSpecControlPlaneEndpointArgs) ToClusterSpecControlPlaneEndpointPtrOutput() ClusterSpecControlPlaneEndpointPtrOutput {
	return i.ToClusterSpecControlPlaneEndpointPtrOutputWithContext(context.Background())
}

func (i ClusterSpecControlPlaneEndpointArgs) ToClusterSpecControlPlaneEndpointPtrOutputWithContext(ctx context.Context) ClusterSpecControlPlaneEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecControlPlaneEndpointOutput).ToClusterSpecControlPlaneEndpointPtrOutputWithContext(ctx)
}

// ClusterSpecControlPlaneEndpointPtrInput is an input type that accepts ClusterSpecControlPlaneEndpointArgs, ClusterSpecControlPlaneEndpointPtr and ClusterSpecControlPlaneEndpointPtrOutput values.
// You can construct a concrete instance of `ClusterSpecControlPlaneEndpointPtrInput` via:
//
//	        ClusterSpecControlPlaneEndpointArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecControlPlaneEndpointPtrInput interface {
	pulumi.Input

	ToClusterSpecControlPlaneEndpointPtrOutput() ClusterSpecControlPlaneEndpointPtrOutput
	ToClusterSpecControlPlaneEndpointPtrOutputWithContext(context.Context) ClusterSpecControlPlaneEndpointPtrOutput
}

type clusterSpecControlPlaneEndpointPtrType ClusterSpecControlPlaneEndpointArgs

func ClusterSpecControlPlaneEndpointPtr(v *ClusterSpecControlPlaneEndpointArgs) ClusterSpecControlPlaneEndpointPtrInput {
	return (*clusterSpecControlPlaneEndpointPtrType)(v)
}

func (*clusterSpecControlPlaneEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecControlPlaneEndpoint)(nil)).Elem()
}

func (i *clusterSpecControlPlaneEndpointPtrType) ToClusterSpecControlPlaneEndpointPtrOutput() ClusterSpecControlPlaneEndpointPtrOutput {
	return i.ToClusterSpecControlPlaneEndpointPtrOutputWithContext(context.Background())
}

func (i *clusterSpecControlPlaneEndpointPtrType) ToClusterSpecControlPlaneEndpointPtrOutputWithContext(ctx context.Context) ClusterSpecControlPlaneEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecControlPlaneEndpointPtrOutput)
}

// ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
type ClusterSpecControlPlaneEndpointOutput struct{ *pulumi.OutputState }

func (ClusterSpecControlPlaneEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecControlPlaneEndpoint)(nil)).Elem()
}

func (o ClusterSpecControlPlaneEndpointOutput) ToClusterSpecControlPlaneEndpointOutput() ClusterSpecControlPlaneEndpointOutput {
	return o
}

func (o ClusterSpecControlPlaneEndpointOutput) ToClusterSpecControlPlaneEndpointOutputWithContext(ctx context.Context) ClusterSpecControlPlaneEndpointOutput {
	return o
}

func (o ClusterSpecControlPlaneEndpointOutput) ToClusterSpecControlPlaneEndpointPtrOutput() ClusterSpecControlPlaneEndpointPtrOutput {
	return o.ToClusterSpecControlPlaneEndpointPtrOutputWithContext(context.Background())
}

func (o ClusterSpecControlPlaneEndpointOutput) ToClusterSpecControlPlaneEndpointPtrOutputWithContext(ctx context.Context) ClusterSpecControlPlaneEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecControlPlaneEndpoint) *ClusterSpecControlPlaneEndpoint {
		return &v
	}).(ClusterSpecControlPlaneEndpointPtrOutput)
}

// The hostname on which the API server is serving.
func (o ClusterSpecControlPlaneEndpointOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSpecControlPlaneEndpoint) string { return v.Host }).(pulumi.StringOutput)
}

// The port on which the API server is serving.
func (o ClusterSpecControlPlaneEndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterSpecControlPlaneEndpoint) int { return v.Port }).(pulumi.IntOutput)
}

type ClusterSpecControlPlaneEndpointPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecControlPlaneEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecControlPlaneEndpoint)(nil)).Elem()
}

func (o ClusterSpecControlPlaneEndpointPtrOutput) ToClusterSpecControlPlaneEndpointPtrOutput() ClusterSpecControlPlaneEndpointPtrOutput {
	return o
}

func (o ClusterSpecControlPlaneEndpointPtrOutput) ToClusterSpecControlPlaneEndpointPtrOutputWithContext(ctx context.Context) ClusterSpecControlPlaneEndpointPtrOutput {
	return o
}

func (o ClusterSpecControlPlaneEndpointPtrOutput) Elem() ClusterSpecControlPlaneEndpointOutput {
	return o.ApplyT(func(v *ClusterSpecControlPlaneEndpoint) ClusterSpecControlPlaneEndpoint {
		if v != nil {
			return *v
		}
		var ret ClusterSpecControlPlaneEndpoint
		return ret
	}).(ClusterSpecControlPlaneEndpointOutput)
}

// The hostname on which the API server is serving.
func (o ClusterSpecControlPlaneEndpointPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecControlPlaneEndpoint) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// The port on which the API server is serving.
func (o ClusterSpecControlPlaneEndpointPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterSpecControlPlaneEndpoint) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// ControlPlaneRef is an optional reference to a provider-specific resource that holds the details for provisioning the Control Plane for a Cluster.
type ClusterSpecControlPlaneRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ClusterSpecControlPlaneRefInput is an input type that accepts ClusterSpecControlPlaneRefArgs and ClusterSpecControlPlaneRefOutput values.
// You can construct a concrete instance of `ClusterSpecControlPlaneRefInput` via:
//
//	ClusterSpecControlPlaneRefArgs{...}
type ClusterSpecControlPlaneRefInput interface {
	pulumi.Input

	ToClusterSpecControlPlaneRefOutput() ClusterSpecControlPlaneRefOutput
	ToClusterSpecControlPlaneRefOutputWithContext(context.Context) ClusterSpecControlPlaneRefOutput
}

// ControlPlaneRef is an optional reference to a provider-specific resource that holds the details for provisioning the Control Plane for a Cluster.
type ClusterSpecControlPlaneRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterSpecControlPlaneRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecControlPlaneRef)(nil)).Elem()
}

func (i ClusterSpecControlPlaneRefArgs) ToClusterSpecControlPlaneRefOutput() ClusterSpecControlPlaneRefOutput {
	return i.ToClusterSpecControlPlaneRefOutputWithContext(context.Background())
}

func (i ClusterSpecControlPlaneRefArgs) ToClusterSpecControlPlaneRefOutputWithContext(ctx context.Context) ClusterSpecControlPlaneRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecControlPlaneRefOutput)
}

func (i ClusterSpecControlPlaneRefArgs) ToClusterSpecControlPlaneRefPtrOutput() ClusterSpecControlPlaneRefPtrOutput {
	return i.ToClusterSpecControlPlaneRefPtrOutputWithContext(context.Background())
}

func (i ClusterSpecControlPlaneRefArgs) ToClusterSpecControlPlaneRefPtrOutputWithContext(ctx context.Context) ClusterSpecControlPlaneRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecControlPlaneRefOutput).ToClusterSpecControlPlaneRefPtrOutputWithContext(ctx)
}

// ClusterSpecControlPlaneRefPtrInput is an input type that accepts ClusterSpecControlPlaneRefArgs, ClusterSpecControlPlaneRefPtr and ClusterSpecControlPlaneRefPtrOutput values.
// You can construct a concrete instance of `ClusterSpecControlPlaneRefPtrInput` via:
//
//	        ClusterSpecControlPlaneRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecControlPlaneRefPtrInput interface {
	pulumi.Input

	ToClusterSpecControlPlaneRefPtrOutput() ClusterSpecControlPlaneRefPtrOutput
	ToClusterSpecControlPlaneRefPtrOutputWithContext(context.Context) ClusterSpecControlPlaneRefPtrOutput
}

type clusterSpecControlPlaneRefPtrType ClusterSpecControlPlaneRefArgs

func ClusterSpecControlPlaneRefPtr(v *ClusterSpecControlPlaneRefArgs) ClusterSpecControlPlaneRefPtrInput {
	return (*clusterSpecControlPlaneRefPtrType)(v)
}

func (*clusterSpecControlPlaneRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecControlPlaneRef)(nil)).Elem()
}

func (i *clusterSpecControlPlaneRefPtrType) ToClusterSpecControlPlaneRefPtrOutput() ClusterSpecControlPlaneRefPtrOutput {
	return i.ToClusterSpecControlPlaneRefPtrOutputWithContext(context.Background())
}

func (i *clusterSpecControlPlaneRefPtrType) ToClusterSpecControlPlaneRefPtrOutputWithContext(ctx context.Context) ClusterSpecControlPlaneRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecControlPlaneRefPtrOutput)
}

// ControlPlaneRef is an optional reference to a provider-specific resource that holds the details for provisioning the Control Plane for a Cluster.
type ClusterSpecControlPlaneRefOutput struct{ *pulumi.OutputState }

func (ClusterSpecControlPlaneRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecControlPlaneRef)(nil)).Elem()
}

func (o ClusterSpecControlPlaneRefOutput) ToClusterSpecControlPlaneRefOutput() ClusterSpecControlPlaneRefOutput {
	return o
}

func (o ClusterSpecControlPlaneRefOutput) ToClusterSpecControlPlaneRefOutputWithContext(ctx context.Context) ClusterSpecControlPlaneRefOutput {
	return o
}

func (o ClusterSpecControlPlaneRefOutput) ToClusterSpecControlPlaneRefPtrOutput() ClusterSpecControlPlaneRefPtrOutput {
	return o.ToClusterSpecControlPlaneRefPtrOutputWithContext(context.Background())
}

func (o ClusterSpecControlPlaneRefOutput) ToClusterSpecControlPlaneRefPtrOutputWithContext(ctx context.Context) ClusterSpecControlPlaneRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecControlPlaneRef) *ClusterSpecControlPlaneRef {
		return &v
	}).(ClusterSpecControlPlaneRefPtrOutput)
}

// API version of the referent.
func (o ClusterSpecControlPlaneRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecControlPlaneRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterSpecControlPlaneRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecControlPlaneRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterSpecControlPlaneRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecControlPlaneRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterSpecControlPlaneRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecControlPlaneRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterSpecControlPlaneRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecControlPlaneRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterSpecControlPlaneRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecControlPlaneRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterSpecControlPlaneRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecControlPlaneRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterSpecControlPlaneRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecControlPlaneRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecControlPlaneRef)(nil)).Elem()
}

func (o ClusterSpecControlPlaneRefPtrOutput) ToClusterSpecControlPlaneRefPtrOutput() ClusterSpecControlPlaneRefPtrOutput {
	return o
}

func (o ClusterSpecControlPlaneRefPtrOutput) ToClusterSpecControlPlaneRefPtrOutputWithContext(ctx context.Context) ClusterSpecControlPlaneRefPtrOutput {
	return o
}

func (o ClusterSpecControlPlaneRefPtrOutput) Elem() ClusterSpecControlPlaneRefOutput {
	return o.ApplyT(func(v *ClusterSpecControlPlaneRef) ClusterSpecControlPlaneRef {
		if v != nil {
			return *v
		}
		var ret ClusterSpecControlPlaneRef
		return ret
	}).(ClusterSpecControlPlaneRefOutput)
}

// API version of the referent.
func (o ClusterSpecControlPlaneRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterSpecControlPlaneRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterSpecControlPlaneRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterSpecControlPlaneRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterSpecControlPlaneRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterSpecControlPlaneRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterSpecControlPlaneRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecControlPlaneRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// InfrastructureRef is a reference to a provider-specific resource that holds the details for provisioning infrastructure for a cluster in said provider.
type ClusterSpecInfrastructureRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ClusterSpecInfrastructureRefInput is an input type that accepts ClusterSpecInfrastructureRefArgs and ClusterSpecInfrastructureRefOutput values.
// You can construct a concrete instance of `ClusterSpecInfrastructureRefInput` via:
//
//	ClusterSpecInfrastructureRefArgs{...}
type ClusterSpecInfrastructureRefInput interface {
	pulumi.Input

	ToClusterSpecInfrastructureRefOutput() ClusterSpecInfrastructureRefOutput
	ToClusterSpecInfrastructureRefOutputWithContext(context.Context) ClusterSpecInfrastructureRefOutput
}

// InfrastructureRef is a reference to a provider-specific resource that holds the details for provisioning infrastructure for a cluster in said provider.
type ClusterSpecInfrastructureRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterSpecInfrastructureRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecInfrastructureRef)(nil)).Elem()
}

func (i ClusterSpecInfrastructureRefArgs) ToClusterSpecInfrastructureRefOutput() ClusterSpecInfrastructureRefOutput {
	return i.ToClusterSpecInfrastructureRefOutputWithContext(context.Background())
}

func (i ClusterSpecInfrastructureRefArgs) ToClusterSpecInfrastructureRefOutputWithContext(ctx context.Context) ClusterSpecInfrastructureRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecInfrastructureRefOutput)
}

func (i ClusterSpecInfrastructureRefArgs) ToClusterSpecInfrastructureRefPtrOutput() ClusterSpecInfrastructureRefPtrOutput {
	return i.ToClusterSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i ClusterSpecInfrastructureRefArgs) ToClusterSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) ClusterSpecInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecInfrastructureRefOutput).ToClusterSpecInfrastructureRefPtrOutputWithContext(ctx)
}

// ClusterSpecInfrastructureRefPtrInput is an input type that accepts ClusterSpecInfrastructureRefArgs, ClusterSpecInfrastructureRefPtr and ClusterSpecInfrastructureRefPtrOutput values.
// You can construct a concrete instance of `ClusterSpecInfrastructureRefPtrInput` via:
//
//	        ClusterSpecInfrastructureRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecInfrastructureRefPtrInput interface {
	pulumi.Input

	ToClusterSpecInfrastructureRefPtrOutput() ClusterSpecInfrastructureRefPtrOutput
	ToClusterSpecInfrastructureRefPtrOutputWithContext(context.Context) ClusterSpecInfrastructureRefPtrOutput
}

type clusterSpecInfrastructureRefPtrType ClusterSpecInfrastructureRefArgs

func ClusterSpecInfrastructureRefPtr(v *ClusterSpecInfrastructureRefArgs) ClusterSpecInfrastructureRefPtrInput {
	return (*clusterSpecInfrastructureRefPtrType)(v)
}

func (*clusterSpecInfrastructureRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecInfrastructureRef)(nil)).Elem()
}

func (i *clusterSpecInfrastructureRefPtrType) ToClusterSpecInfrastructureRefPtrOutput() ClusterSpecInfrastructureRefPtrOutput {
	return i.ToClusterSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i *clusterSpecInfrastructureRefPtrType) ToClusterSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) ClusterSpecInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecInfrastructureRefPtrOutput)
}

// InfrastructureRef is a reference to a provider-specific resource that holds the details for provisioning infrastructure for a cluster in said provider.
type ClusterSpecInfrastructureRefOutput struct{ *pulumi.OutputState }

func (ClusterSpecInfrastructureRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecInfrastructureRef)(nil)).Elem()
}

func (o ClusterSpecInfrastructureRefOutput) ToClusterSpecInfrastructureRefOutput() ClusterSpecInfrastructureRefOutput {
	return o
}

func (o ClusterSpecInfrastructureRefOutput) ToClusterSpecInfrastructureRefOutputWithContext(ctx context.Context) ClusterSpecInfrastructureRefOutput {
	return o
}

func (o ClusterSpecInfrastructureRefOutput) ToClusterSpecInfrastructureRefPtrOutput() ClusterSpecInfrastructureRefPtrOutput {
	return o.ToClusterSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (o ClusterSpecInfrastructureRefOutput) ToClusterSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) ClusterSpecInfrastructureRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecInfrastructureRef) *ClusterSpecInfrastructureRef {
		return &v
	}).(ClusterSpecInfrastructureRefPtrOutput)
}

// API version of the referent.
func (o ClusterSpecInfrastructureRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecInfrastructureRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterSpecInfrastructureRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecInfrastructureRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterSpecInfrastructureRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecInfrastructureRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterSpecInfrastructureRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecInfrastructureRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterSpecInfrastructureRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecInfrastructureRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterSpecInfrastructureRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecInfrastructureRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterSpecInfrastructureRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecInfrastructureRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterSpecInfrastructureRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecInfrastructureRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecInfrastructureRef)(nil)).Elem()
}

func (o ClusterSpecInfrastructureRefPtrOutput) ToClusterSpecInfrastructureRefPtrOutput() ClusterSpecInfrastructureRefPtrOutput {
	return o
}

func (o ClusterSpecInfrastructureRefPtrOutput) ToClusterSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) ClusterSpecInfrastructureRefPtrOutput {
	return o
}

func (o ClusterSpecInfrastructureRefPtrOutput) Elem() ClusterSpecInfrastructureRefOutput {
	return o.ApplyT(func(v *ClusterSpecInfrastructureRef) ClusterSpecInfrastructureRef {
		if v != nil {
			return *v
		}
		var ret ClusterSpecInfrastructureRef
		return ret
	}).(ClusterSpecInfrastructureRefOutput)
}

// API version of the referent.
func (o ClusterSpecInfrastructureRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterSpecInfrastructureRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterSpecInfrastructureRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterSpecInfrastructureRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterSpecInfrastructureRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterSpecInfrastructureRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterSpecInfrastructureRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// This encapsulates the topology for the cluster. NOTE: It is required to enable the ClusterTopology feature gate flag to activate managed topologies support; this feature is highly experimental, and parts of it might still be not implemented.
type ClusterSpecTopology struct {
	// The name of the ClusterClass object to create the topology.
	Class string `pulumi:"class"`
	// ControlPlane describes the cluster control plane.
	ControlPlane *ClusterSpecTopologyControlPlane `pulumi:"controlPlane"`
	// RolloutAfter performs a rollout of the entire cluster one component at a time, control plane first and then machine deployments.
	//  Deprecated: This field has no function and is going to be removed in the next apiVersion.
	RolloutAfter *string `pulumi:"rolloutAfter"`
	// Variables can be used to customize the Cluster through patches. They must comply to the corresponding VariableClasses defined in the ClusterClass.
	Variables []ClusterSpecTopologyVariables `pulumi:"variables"`
	// The Kubernetes version of the cluster.
	Version string `pulumi:"version"`
	// Workers encapsulates the different constructs that form the worker nodes for the cluster.
	Workers *ClusterSpecTopologyWorkers `pulumi:"workers"`
}

// ClusterSpecTopologyInput is an input type that accepts ClusterSpecTopologyArgs and ClusterSpecTopologyOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyInput` via:
//
//	ClusterSpecTopologyArgs{...}
type ClusterSpecTopologyInput interface {
	pulumi.Input

	ToClusterSpecTopologyOutput() ClusterSpecTopologyOutput
	ToClusterSpecTopologyOutputWithContext(context.Context) ClusterSpecTopologyOutput
}

// This encapsulates the topology for the cluster. NOTE: It is required to enable the ClusterTopology feature gate flag to activate managed topologies support; this feature is highly experimental, and parts of it might still be not implemented.
type ClusterSpecTopologyArgs struct {
	// The name of the ClusterClass object to create the topology.
	Class pulumi.StringInput `pulumi:"class"`
	// ControlPlane describes the cluster control plane.
	ControlPlane ClusterSpecTopologyControlPlanePtrInput `pulumi:"controlPlane"`
	// RolloutAfter performs a rollout of the entire cluster one component at a time, control plane first and then machine deployments.
	//  Deprecated: This field has no function and is going to be removed in the next apiVersion.
	RolloutAfter pulumi.StringPtrInput `pulumi:"rolloutAfter"`
	// Variables can be used to customize the Cluster through patches. They must comply to the corresponding VariableClasses defined in the ClusterClass.
	Variables ClusterSpecTopologyVariablesArrayInput `pulumi:"variables"`
	// The Kubernetes version of the cluster.
	Version pulumi.StringInput `pulumi:"version"`
	// Workers encapsulates the different constructs that form the worker nodes for the cluster.
	Workers ClusterSpecTopologyWorkersPtrInput `pulumi:"workers"`
}

func (ClusterSpecTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopology)(nil)).Elem()
}

func (i ClusterSpecTopologyArgs) ToClusterSpecTopologyOutput() ClusterSpecTopologyOutput {
	return i.ToClusterSpecTopologyOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyArgs) ToClusterSpecTopologyOutputWithContext(ctx context.Context) ClusterSpecTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyOutput)
}

func (i ClusterSpecTopologyArgs) ToClusterSpecTopologyPtrOutput() ClusterSpecTopologyPtrOutput {
	return i.ToClusterSpecTopologyPtrOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyArgs) ToClusterSpecTopologyPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyOutput).ToClusterSpecTopologyPtrOutputWithContext(ctx)
}

// ClusterSpecTopologyPtrInput is an input type that accepts ClusterSpecTopologyArgs, ClusterSpecTopologyPtr and ClusterSpecTopologyPtrOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyPtrInput` via:
//
//	        ClusterSpecTopologyArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecTopologyPtrInput interface {
	pulumi.Input

	ToClusterSpecTopologyPtrOutput() ClusterSpecTopologyPtrOutput
	ToClusterSpecTopologyPtrOutputWithContext(context.Context) ClusterSpecTopologyPtrOutput
}

type clusterSpecTopologyPtrType ClusterSpecTopologyArgs

func ClusterSpecTopologyPtr(v *ClusterSpecTopologyArgs) ClusterSpecTopologyPtrInput {
	return (*clusterSpecTopologyPtrType)(v)
}

func (*clusterSpecTopologyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopology)(nil)).Elem()
}

func (i *clusterSpecTopologyPtrType) ToClusterSpecTopologyPtrOutput() ClusterSpecTopologyPtrOutput {
	return i.ToClusterSpecTopologyPtrOutputWithContext(context.Background())
}

func (i *clusterSpecTopologyPtrType) ToClusterSpecTopologyPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyPtrOutput)
}

// This encapsulates the topology for the cluster. NOTE: It is required to enable the ClusterTopology feature gate flag to activate managed topologies support; this feature is highly experimental, and parts of it might still be not implemented.
type ClusterSpecTopologyOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopology)(nil)).Elem()
}

func (o ClusterSpecTopologyOutput) ToClusterSpecTopologyOutput() ClusterSpecTopologyOutput {
	return o
}

func (o ClusterSpecTopologyOutput) ToClusterSpecTopologyOutputWithContext(ctx context.Context) ClusterSpecTopologyOutput {
	return o
}

func (o ClusterSpecTopologyOutput) ToClusterSpecTopologyPtrOutput() ClusterSpecTopologyPtrOutput {
	return o.ToClusterSpecTopologyPtrOutputWithContext(context.Background())
}

func (o ClusterSpecTopologyOutput) ToClusterSpecTopologyPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecTopology) *ClusterSpecTopology {
		return &v
	}).(ClusterSpecTopologyPtrOutput)
}

// The name of the ClusterClass object to create the topology.
func (o ClusterSpecTopologyOutput) Class() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSpecTopology) string { return v.Class }).(pulumi.StringOutput)
}

// ControlPlane describes the cluster control plane.
func (o ClusterSpecTopologyOutput) ControlPlane() ClusterSpecTopologyControlPlanePtrOutput {
	return o.ApplyT(func(v ClusterSpecTopology) *ClusterSpecTopologyControlPlane { return v.ControlPlane }).(ClusterSpecTopologyControlPlanePtrOutput)
}

// RolloutAfter performs a rollout of the entire cluster one component at a time, control plane first and then machine deployments.
//
//	Deprecated: This field has no function and is going to be removed in the next apiVersion.
func (o ClusterSpecTopologyOutput) RolloutAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopology) *string { return v.RolloutAfter }).(pulumi.StringPtrOutput)
}

// Variables can be used to customize the Cluster through patches. They must comply to the corresponding VariableClasses defined in the ClusterClass.
func (o ClusterSpecTopologyOutput) Variables() ClusterSpecTopologyVariablesArrayOutput {
	return o.ApplyT(func(v ClusterSpecTopology) []ClusterSpecTopologyVariables { return v.Variables }).(ClusterSpecTopologyVariablesArrayOutput)
}

// The Kubernetes version of the cluster.
func (o ClusterSpecTopologyOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSpecTopology) string { return v.Version }).(pulumi.StringOutput)
}

// Workers encapsulates the different constructs that form the worker nodes for the cluster.
func (o ClusterSpecTopologyOutput) Workers() ClusterSpecTopologyWorkersPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopology) *ClusterSpecTopologyWorkers { return v.Workers }).(ClusterSpecTopologyWorkersPtrOutput)
}

type ClusterSpecTopologyPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopology)(nil)).Elem()
}

func (o ClusterSpecTopologyPtrOutput) ToClusterSpecTopologyPtrOutput() ClusterSpecTopologyPtrOutput {
	return o
}

func (o ClusterSpecTopologyPtrOutput) ToClusterSpecTopologyPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyPtrOutput {
	return o
}

func (o ClusterSpecTopologyPtrOutput) Elem() ClusterSpecTopologyOutput {
	return o.ApplyT(func(v *ClusterSpecTopology) ClusterSpecTopology {
		if v != nil {
			return *v
		}
		var ret ClusterSpecTopology
		return ret
	}).(ClusterSpecTopologyOutput)
}

// The name of the ClusterClass object to create the topology.
func (o ClusterSpecTopologyPtrOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopology) *string {
		if v == nil {
			return nil
		}
		return &v.Class
	}).(pulumi.StringPtrOutput)
}

// ControlPlane describes the cluster control plane.
func (o ClusterSpecTopologyPtrOutput) ControlPlane() ClusterSpecTopologyControlPlanePtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopology) *ClusterSpecTopologyControlPlane {
		if v == nil {
			return nil
		}
		return v.ControlPlane
	}).(ClusterSpecTopologyControlPlanePtrOutput)
}

// RolloutAfter performs a rollout of the entire cluster one component at a time, control plane first and then machine deployments.
//
//	Deprecated: This field has no function and is going to be removed in the next apiVersion.
func (o ClusterSpecTopologyPtrOutput) RolloutAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopology) *string {
		if v == nil {
			return nil
		}
		return v.RolloutAfter
	}).(pulumi.StringPtrOutput)
}

// Variables can be used to customize the Cluster through patches. They must comply to the corresponding VariableClasses defined in the ClusterClass.
func (o ClusterSpecTopologyPtrOutput) Variables() ClusterSpecTopologyVariablesArrayOutput {
	return o.ApplyT(func(v *ClusterSpecTopology) []ClusterSpecTopologyVariables {
		if v == nil {
			return nil
		}
		return v.Variables
	}).(ClusterSpecTopologyVariablesArrayOutput)
}

// The Kubernetes version of the cluster.
func (o ClusterSpecTopologyPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopology) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// Workers encapsulates the different constructs that form the worker nodes for the cluster.
func (o ClusterSpecTopologyPtrOutput) Workers() ClusterSpecTopologyWorkersPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopology) *ClusterSpecTopologyWorkers {
		if v == nil {
			return nil
		}
		return v.Workers
	}).(ClusterSpecTopologyWorkersPtrOutput)
}

// ControlPlane describes the cluster control plane.
type ClusterSpecTopologyControlPlane struct {
	// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this control plane.
	MachineHealthCheck *ClusterSpecTopologyControlPlaneMachineHealthCheck `pulumi:"machineHealthCheck"`
	// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced by the ClusterClass is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
	Metadata *ClusterSpecTopologyControlPlaneMetadata `pulumi:"metadata"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
	NodeDeletionTimeout *string `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
	NodeDrainTimeout *string `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
	NodeVolumeDetachTimeout *string `pulumi:"nodeVolumeDetachTimeout"`
	// Replicas is the number of control plane nodes. If the value is nil, the ControlPlane object is created without the number of Replicas and it's assumed that the control plane controller does not implement support for this field. When specified against a control plane provider that lacks support for this field, this value will be ignored.
	Replicas *int `pulumi:"replicas"`
}

// ClusterSpecTopologyControlPlaneInput is an input type that accepts ClusterSpecTopologyControlPlaneArgs and ClusterSpecTopologyControlPlaneOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyControlPlaneInput` via:
//
//	ClusterSpecTopologyControlPlaneArgs{...}
type ClusterSpecTopologyControlPlaneInput interface {
	pulumi.Input

	ToClusterSpecTopologyControlPlaneOutput() ClusterSpecTopologyControlPlaneOutput
	ToClusterSpecTopologyControlPlaneOutputWithContext(context.Context) ClusterSpecTopologyControlPlaneOutput
}

// ControlPlane describes the cluster control plane.
type ClusterSpecTopologyControlPlaneArgs struct {
	// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this control plane.
	MachineHealthCheck ClusterSpecTopologyControlPlaneMachineHealthCheckPtrInput `pulumi:"machineHealthCheck"`
	// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced by the ClusterClass is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
	Metadata ClusterSpecTopologyControlPlaneMetadataPtrInput `pulumi:"metadata"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
	NodeDeletionTimeout pulumi.StringPtrInput `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
	NodeDrainTimeout pulumi.StringPtrInput `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
	NodeVolumeDetachTimeout pulumi.StringPtrInput `pulumi:"nodeVolumeDetachTimeout"`
	// Replicas is the number of control plane nodes. If the value is nil, the ControlPlane object is created without the number of Replicas and it's assumed that the control plane controller does not implement support for this field. When specified against a control plane provider that lacks support for this field, this value will be ignored.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
}

func (ClusterSpecTopologyControlPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyControlPlane)(nil)).Elem()
}

func (i ClusterSpecTopologyControlPlaneArgs) ToClusterSpecTopologyControlPlaneOutput() ClusterSpecTopologyControlPlaneOutput {
	return i.ToClusterSpecTopologyControlPlaneOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyControlPlaneArgs) ToClusterSpecTopologyControlPlaneOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlaneOutput)
}

func (i ClusterSpecTopologyControlPlaneArgs) ToClusterSpecTopologyControlPlanePtrOutput() ClusterSpecTopologyControlPlanePtrOutput {
	return i.ToClusterSpecTopologyControlPlanePtrOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyControlPlaneArgs) ToClusterSpecTopologyControlPlanePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlaneOutput).ToClusterSpecTopologyControlPlanePtrOutputWithContext(ctx)
}

// ClusterSpecTopologyControlPlanePtrInput is an input type that accepts ClusterSpecTopologyControlPlaneArgs, ClusterSpecTopologyControlPlanePtr and ClusterSpecTopologyControlPlanePtrOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyControlPlanePtrInput` via:
//
//	        ClusterSpecTopologyControlPlaneArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecTopologyControlPlanePtrInput interface {
	pulumi.Input

	ToClusterSpecTopologyControlPlanePtrOutput() ClusterSpecTopologyControlPlanePtrOutput
	ToClusterSpecTopologyControlPlanePtrOutputWithContext(context.Context) ClusterSpecTopologyControlPlanePtrOutput
}

type clusterSpecTopologyControlPlanePtrType ClusterSpecTopologyControlPlaneArgs

func ClusterSpecTopologyControlPlanePtr(v *ClusterSpecTopologyControlPlaneArgs) ClusterSpecTopologyControlPlanePtrInput {
	return (*clusterSpecTopologyControlPlanePtrType)(v)
}

func (*clusterSpecTopologyControlPlanePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyControlPlane)(nil)).Elem()
}

func (i *clusterSpecTopologyControlPlanePtrType) ToClusterSpecTopologyControlPlanePtrOutput() ClusterSpecTopologyControlPlanePtrOutput {
	return i.ToClusterSpecTopologyControlPlanePtrOutputWithContext(context.Background())
}

func (i *clusterSpecTopologyControlPlanePtrType) ToClusterSpecTopologyControlPlanePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlanePtrOutput)
}

// ControlPlane describes the cluster control plane.
type ClusterSpecTopologyControlPlaneOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyControlPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyControlPlane)(nil)).Elem()
}

func (o ClusterSpecTopologyControlPlaneOutput) ToClusterSpecTopologyControlPlaneOutput() ClusterSpecTopologyControlPlaneOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneOutput) ToClusterSpecTopologyControlPlaneOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneOutput) ToClusterSpecTopologyControlPlanePtrOutput() ClusterSpecTopologyControlPlanePtrOutput {
	return o.ToClusterSpecTopologyControlPlanePtrOutputWithContext(context.Background())
}

func (o ClusterSpecTopologyControlPlaneOutput) ToClusterSpecTopologyControlPlanePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlanePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecTopologyControlPlane) *ClusterSpecTopologyControlPlane {
		return &v
	}).(ClusterSpecTopologyControlPlanePtrOutput)
}

// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this control plane.
func (o ClusterSpecTopologyControlPlaneOutput) MachineHealthCheck() ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlane) *ClusterSpecTopologyControlPlaneMachineHealthCheck {
		return v.MachineHealthCheck
	}).(ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput)
}

// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced by the ClusterClass is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
func (o ClusterSpecTopologyControlPlaneOutput) Metadata() ClusterSpecTopologyControlPlaneMetadataPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlane) *ClusterSpecTopologyControlPlaneMetadata { return v.Metadata }).(ClusterSpecTopologyControlPlaneMetadataPtrOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
func (o ClusterSpecTopologyControlPlaneOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlane) *string { return v.NodeDeletionTimeout }).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
func (o ClusterSpecTopologyControlPlaneOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlane) *string { return v.NodeDrainTimeout }).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
func (o ClusterSpecTopologyControlPlaneOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlane) *string { return v.NodeVolumeDetachTimeout }).(pulumi.StringPtrOutput)
}

// Replicas is the number of control plane nodes. If the value is nil, the ControlPlane object is created without the number of Replicas and it's assumed that the control plane controller does not implement support for this field. When specified against a control plane provider that lacks support for this field, this value will be ignored.
func (o ClusterSpecTopologyControlPlaneOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlane) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

type ClusterSpecTopologyControlPlanePtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyControlPlanePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyControlPlane)(nil)).Elem()
}

func (o ClusterSpecTopologyControlPlanePtrOutput) ToClusterSpecTopologyControlPlanePtrOutput() ClusterSpecTopologyControlPlanePtrOutput {
	return o
}

func (o ClusterSpecTopologyControlPlanePtrOutput) ToClusterSpecTopologyControlPlanePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlanePtrOutput {
	return o
}

func (o ClusterSpecTopologyControlPlanePtrOutput) Elem() ClusterSpecTopologyControlPlaneOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlane) ClusterSpecTopologyControlPlane {
		if v != nil {
			return *v
		}
		var ret ClusterSpecTopologyControlPlane
		return ret
	}).(ClusterSpecTopologyControlPlaneOutput)
}

// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this control plane.
func (o ClusterSpecTopologyControlPlanePtrOutput) MachineHealthCheck() ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlane) *ClusterSpecTopologyControlPlaneMachineHealthCheck {
		if v == nil {
			return nil
		}
		return v.MachineHealthCheck
	}).(ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput)
}

// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced by the ClusterClass is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
func (o ClusterSpecTopologyControlPlanePtrOutput) Metadata() ClusterSpecTopologyControlPlaneMetadataPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlane) *ClusterSpecTopologyControlPlaneMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(ClusterSpecTopologyControlPlaneMetadataPtrOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
func (o ClusterSpecTopologyControlPlanePtrOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlane) *string {
		if v == nil {
			return nil
		}
		return v.NodeDeletionTimeout
	}).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
func (o ClusterSpecTopologyControlPlanePtrOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlane) *string {
		if v == nil {
			return nil
		}
		return v.NodeDrainTimeout
	}).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
func (o ClusterSpecTopologyControlPlanePtrOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlane) *string {
		if v == nil {
			return nil
		}
		return v.NodeVolumeDetachTimeout
	}).(pulumi.StringPtrOutput)
}

// Replicas is the number of control plane nodes. If the value is nil, the ControlPlane object is created without the number of Replicas and it's assumed that the control plane controller does not implement support for this field. When specified against a control plane provider that lacks support for this field, this value will be ignored.
func (o ClusterSpecTopologyControlPlanePtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlane) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this control plane.
type ClusterSpecTopologyControlPlaneMachineHealthCheck struct {
	// Enable controls if a MachineHealthCheck should be created for the target machines.
	//  If false: No MachineHealthCheck will be created.
	//  If not set(default): A MachineHealthCheck will be created if it is defined here or in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.
	//  If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will block if `enable` is true and no MachineHealthCheck definition is available.
	Enable *bool `pulumi:"enable"`
	// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
	MaxUnhealthy interface{} `pulumi:"maxUnhealthy"`
	// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
	NodeStartupTimeout *string `pulumi:"nodeStartupTimeout"`
	// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
	//  This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
	RemediationTemplate *ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate `pulumi:"remediationTemplate"`
	// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
	UnhealthyConditions []ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditions `pulumi:"unhealthyConditions"`
	// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
	UnhealthyRange *string `pulumi:"unhealthyRange"`
}

// ClusterSpecTopologyControlPlaneMachineHealthCheckInput is an input type that accepts ClusterSpecTopologyControlPlaneMachineHealthCheckArgs and ClusterSpecTopologyControlPlaneMachineHealthCheckOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyControlPlaneMachineHealthCheckInput` via:
//
//	ClusterSpecTopologyControlPlaneMachineHealthCheckArgs{...}
type ClusterSpecTopologyControlPlaneMachineHealthCheckInput interface {
	pulumi.Input

	ToClusterSpecTopologyControlPlaneMachineHealthCheckOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckOutput
	ToClusterSpecTopologyControlPlaneMachineHealthCheckOutputWithContext(context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckOutput
}

// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this control plane.
type ClusterSpecTopologyControlPlaneMachineHealthCheckArgs struct {
	// Enable controls if a MachineHealthCheck should be created for the target machines.
	//  If false: No MachineHealthCheck will be created.
	//  If not set(default): A MachineHealthCheck will be created if it is defined here or in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.
	//  If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will block if `enable` is true and no MachineHealthCheck definition is available.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
	MaxUnhealthy pulumi.Input `pulumi:"maxUnhealthy"`
	// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
	NodeStartupTimeout pulumi.StringPtrInput `pulumi:"nodeStartupTimeout"`
	// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
	//  This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
	RemediationTemplate ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrInput `pulumi:"remediationTemplate"`
	// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
	UnhealthyConditions ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayInput `pulumi:"unhealthyConditions"`
	// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
	UnhealthyRange pulumi.StringPtrInput `pulumi:"unhealthyRange"`
}

func (ClusterSpecTopologyControlPlaneMachineHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyControlPlaneMachineHealthCheck)(nil)).Elem()
}

func (i ClusterSpecTopologyControlPlaneMachineHealthCheckArgs) ToClusterSpecTopologyControlPlaneMachineHealthCheckOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckOutput {
	return i.ToClusterSpecTopologyControlPlaneMachineHealthCheckOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyControlPlaneMachineHealthCheckArgs) ToClusterSpecTopologyControlPlaneMachineHealthCheckOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlaneMachineHealthCheckOutput)
}

func (i ClusterSpecTopologyControlPlaneMachineHealthCheckArgs) ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput {
	return i.ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyControlPlaneMachineHealthCheckArgs) ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlaneMachineHealthCheckOutput).ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutputWithContext(ctx)
}

// ClusterSpecTopologyControlPlaneMachineHealthCheckPtrInput is an input type that accepts ClusterSpecTopologyControlPlaneMachineHealthCheckArgs, ClusterSpecTopologyControlPlaneMachineHealthCheckPtr and ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyControlPlaneMachineHealthCheckPtrInput` via:
//
//	        ClusterSpecTopologyControlPlaneMachineHealthCheckArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecTopologyControlPlaneMachineHealthCheckPtrInput interface {
	pulumi.Input

	ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput
	ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutputWithContext(context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput
}

type clusterSpecTopologyControlPlaneMachineHealthCheckPtrType ClusterSpecTopologyControlPlaneMachineHealthCheckArgs

func ClusterSpecTopologyControlPlaneMachineHealthCheckPtr(v *ClusterSpecTopologyControlPlaneMachineHealthCheckArgs) ClusterSpecTopologyControlPlaneMachineHealthCheckPtrInput {
	return (*clusterSpecTopologyControlPlaneMachineHealthCheckPtrType)(v)
}

func (*clusterSpecTopologyControlPlaneMachineHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyControlPlaneMachineHealthCheck)(nil)).Elem()
}

func (i *clusterSpecTopologyControlPlaneMachineHealthCheckPtrType) ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput {
	return i.ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutputWithContext(context.Background())
}

func (i *clusterSpecTopologyControlPlaneMachineHealthCheckPtrType) ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput)
}

// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this control plane.
type ClusterSpecTopologyControlPlaneMachineHealthCheckOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyControlPlaneMachineHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyControlPlaneMachineHealthCheck)(nil)).Elem()
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput {
	return o.ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutputWithContext(context.Background())
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecTopologyControlPlaneMachineHealthCheck) *ClusterSpecTopologyControlPlaneMachineHealthCheck {
		return &v
	}).(ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput)
}

// Enable controls if a MachineHealthCheck should be created for the target machines.
//
//	If false: No MachineHealthCheck will be created.
//	If not set(default): A MachineHealthCheck will be created if it is defined here or in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.
//	If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will block if `enable` is true and no MachineHealthCheck definition is available.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheck) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckOutput) MaxUnhealthy() pulumi.AnyOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheck) interface{} { return v.MaxUnhealthy }).(pulumi.AnyOutput)
}

// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckOutput) NodeStartupTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheck) *string { return v.NodeStartupTimeout }).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckOutput) RemediationTemplate() ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheck) *ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate {
		return v.RemediationTemplate
	}).(ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput)
}

// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckOutput) UnhealthyConditions() ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheck) []ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditions {
		return v.UnhealthyConditions
	}).(ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput)
}

// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckOutput) UnhealthyRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheck) *string { return v.UnhealthyRange }).(pulumi.StringPtrOutput)
}

type ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyControlPlaneMachineHealthCheck)(nil)).Elem()
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput) Elem() ClusterSpecTopologyControlPlaneMachineHealthCheckOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheck) ClusterSpecTopologyControlPlaneMachineHealthCheck {
		if v != nil {
			return *v
		}
		var ret ClusterSpecTopologyControlPlaneMachineHealthCheck
		return ret
	}).(ClusterSpecTopologyControlPlaneMachineHealthCheckOutput)
}

// Enable controls if a MachineHealthCheck should be created for the target machines.
//
//	If false: No MachineHealthCheck will be created.
//	If not set(default): A MachineHealthCheck will be created if it is defined here or in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.
//	If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will block if `enable` is true and no MachineHealthCheck definition is available.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheck) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput) MaxUnhealthy() pulumi.AnyOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheck) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnhealthy
	}).(pulumi.AnyOutput)
}

// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput) NodeStartupTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.NodeStartupTimeout
	}).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput) RemediationTemplate() ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheck) *ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate {
		if v == nil {
			return nil
		}
		return v.RemediationTemplate
	}).(ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput)
}

// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput) UnhealthyConditions() ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheck) []ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditions {
		if v == nil {
			return nil
		}
		return v.UnhealthyConditions
	}).(ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput)
}

// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput) UnhealthyRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.UnhealthyRange
	}).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateInput is an input type that accepts ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs and ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateInput` via:
//
//	ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs{...}
type ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateInput interface {
	pulumi.Input

	ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput
	ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutputWithContext(context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (i ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs) ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput {
	return i.ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs) ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput)
}

func (i ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs) ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return i.ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs) ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput).ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx)
}

// ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrInput is an input type that accepts ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs, ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtr and ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrInput` via:
//
//	        ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrInput interface {
	pulumi.Input

	ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput
	ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput
}

type clusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrType ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs

func ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtr(v *ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs) ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrInput {
	return (*clusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrType)(v)
}

func (*clusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (i *clusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrType) ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return i.ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Background())
}

func (i *clusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrType) ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Background())
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate {
		return &v
	}).(ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput)
}

// API version of the referent.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string {
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string {
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string {
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) Elem() ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate {
		if v != nil {
			return *v
		}
		var ret ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate
		return ret
	}).(ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput)
}

// API version of the referent.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditions struct {
	Status  string `pulumi:"status"`
	Timeout string `pulumi:"timeout"`
	Type    string `pulumi:"type"`
}

// ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsInput is an input type that accepts ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArgs and ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsInput` via:
//
//	ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArgs{...}
type ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsInput interface {
	pulumi.Input

	ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput
	ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutputWithContext(context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArgs struct {
	Status  pulumi.StringInput `pulumi:"status"`
	Timeout pulumi.StringInput `pulumi:"timeout"`
	Type    pulumi.StringInput `pulumi:"type"`
}

func (ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (i ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArgs) ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput {
	return i.ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArgs) ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput)
}

// ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayInput is an input type that accepts ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArray and ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayInput` via:
//
//	ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArray{ ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArgs{...} }
type ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayInput interface {
	pulumi.Input

	ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput
	ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput
}

type ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArray []ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsInput

func (ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (i ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArray) ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput {
	return i.ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArray) ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput)
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditions) string { return v.Status }).(pulumi.StringOutput)
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditions) string { return v.Timeout }).(pulumi.StringOutput)
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput() ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput) ToClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput) Index(i pulumi.IntInput) ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditions {
		return vs[0].([]ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditions)[vs[1].(int)]
	}).(ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput)
}

// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced by the ClusterClass is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
type ClusterSpecTopologyControlPlaneMetadata struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations map[string]string `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels map[string]string `pulumi:"labels"`
}

// ClusterSpecTopologyControlPlaneMetadataInput is an input type that accepts ClusterSpecTopologyControlPlaneMetadataArgs and ClusterSpecTopologyControlPlaneMetadataOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyControlPlaneMetadataInput` via:
//
//	ClusterSpecTopologyControlPlaneMetadataArgs{...}
type ClusterSpecTopologyControlPlaneMetadataInput interface {
	pulumi.Input

	ToClusterSpecTopologyControlPlaneMetadataOutput() ClusterSpecTopologyControlPlaneMetadataOutput
	ToClusterSpecTopologyControlPlaneMetadataOutputWithContext(context.Context) ClusterSpecTopologyControlPlaneMetadataOutput
}

// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced by the ClusterClass is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
type ClusterSpecTopologyControlPlaneMetadataArgs struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (ClusterSpecTopologyControlPlaneMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyControlPlaneMetadata)(nil)).Elem()
}

func (i ClusterSpecTopologyControlPlaneMetadataArgs) ToClusterSpecTopologyControlPlaneMetadataOutput() ClusterSpecTopologyControlPlaneMetadataOutput {
	return i.ToClusterSpecTopologyControlPlaneMetadataOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyControlPlaneMetadataArgs) ToClusterSpecTopologyControlPlaneMetadataOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlaneMetadataOutput)
}

func (i ClusterSpecTopologyControlPlaneMetadataArgs) ToClusterSpecTopologyControlPlaneMetadataPtrOutput() ClusterSpecTopologyControlPlaneMetadataPtrOutput {
	return i.ToClusterSpecTopologyControlPlaneMetadataPtrOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyControlPlaneMetadataArgs) ToClusterSpecTopologyControlPlaneMetadataPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlaneMetadataOutput).ToClusterSpecTopologyControlPlaneMetadataPtrOutputWithContext(ctx)
}

// ClusterSpecTopologyControlPlaneMetadataPtrInput is an input type that accepts ClusterSpecTopologyControlPlaneMetadataArgs, ClusterSpecTopologyControlPlaneMetadataPtr and ClusterSpecTopologyControlPlaneMetadataPtrOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyControlPlaneMetadataPtrInput` via:
//
//	        ClusterSpecTopologyControlPlaneMetadataArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecTopologyControlPlaneMetadataPtrInput interface {
	pulumi.Input

	ToClusterSpecTopologyControlPlaneMetadataPtrOutput() ClusterSpecTopologyControlPlaneMetadataPtrOutput
	ToClusterSpecTopologyControlPlaneMetadataPtrOutputWithContext(context.Context) ClusterSpecTopologyControlPlaneMetadataPtrOutput
}

type clusterSpecTopologyControlPlaneMetadataPtrType ClusterSpecTopologyControlPlaneMetadataArgs

func ClusterSpecTopologyControlPlaneMetadataPtr(v *ClusterSpecTopologyControlPlaneMetadataArgs) ClusterSpecTopologyControlPlaneMetadataPtrInput {
	return (*clusterSpecTopologyControlPlaneMetadataPtrType)(v)
}

func (*clusterSpecTopologyControlPlaneMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyControlPlaneMetadata)(nil)).Elem()
}

func (i *clusterSpecTopologyControlPlaneMetadataPtrType) ToClusterSpecTopologyControlPlaneMetadataPtrOutput() ClusterSpecTopologyControlPlaneMetadataPtrOutput {
	return i.ToClusterSpecTopologyControlPlaneMetadataPtrOutputWithContext(context.Background())
}

func (i *clusterSpecTopologyControlPlaneMetadataPtrType) ToClusterSpecTopologyControlPlaneMetadataPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyControlPlaneMetadataPtrOutput)
}

// Metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane if the ControlPlaneTemplate referenced by the ClusterClass is machine based. If not, it is applied only to the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
type ClusterSpecTopologyControlPlaneMetadataOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyControlPlaneMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyControlPlaneMetadata)(nil)).Elem()
}

func (o ClusterSpecTopologyControlPlaneMetadataOutput) ToClusterSpecTopologyControlPlaneMetadataOutput() ClusterSpecTopologyControlPlaneMetadataOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMetadataOutput) ToClusterSpecTopologyControlPlaneMetadataOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMetadataOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMetadataOutput) ToClusterSpecTopologyControlPlaneMetadataPtrOutput() ClusterSpecTopologyControlPlaneMetadataPtrOutput {
	return o.ToClusterSpecTopologyControlPlaneMetadataPtrOutputWithContext(context.Background())
}

func (o ClusterSpecTopologyControlPlaneMetadataOutput) ToClusterSpecTopologyControlPlaneMetadataPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecTopologyControlPlaneMetadata) *ClusterSpecTopologyControlPlaneMetadata {
		return &v
	}).(ClusterSpecTopologyControlPlaneMetadataPtrOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o ClusterSpecTopologyControlPlaneMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o ClusterSpecTopologyControlPlaneMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterSpecTopologyControlPlaneMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type ClusterSpecTopologyControlPlaneMetadataPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyControlPlaneMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyControlPlaneMetadata)(nil)).Elem()
}

func (o ClusterSpecTopologyControlPlaneMetadataPtrOutput) ToClusterSpecTopologyControlPlaneMetadataPtrOutput() ClusterSpecTopologyControlPlaneMetadataPtrOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMetadataPtrOutput) ToClusterSpecTopologyControlPlaneMetadataPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyControlPlaneMetadataPtrOutput {
	return o
}

func (o ClusterSpecTopologyControlPlaneMetadataPtrOutput) Elem() ClusterSpecTopologyControlPlaneMetadataOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMetadata) ClusterSpecTopologyControlPlaneMetadata {
		if v != nil {
			return *v
		}
		var ret ClusterSpecTopologyControlPlaneMetadata
		return ret
	}).(ClusterSpecTopologyControlPlaneMetadataOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o ClusterSpecTopologyControlPlaneMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o ClusterSpecTopologyControlPlaneMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyControlPlaneMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
type ClusterSpecTopologyControlPlaneMetadataAnnotations struct {
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
type ClusterSpecTopologyControlPlaneMetadataLabels struct {
}

// ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a Variable definition in the ClusterClass `status` variables.
type ClusterSpecTopologyVariables struct {
	// DefinitionFrom specifies where the definition of this Variable is from. DefinitionFrom is `inline` when the definition is from the ClusterClass `.spec.variables` or the name of a patch defined in the ClusterClass `.spec.patches` where the patch is external and provides external variables. This field is mandatory if the variable has `DefinitionsConflict: true` in ClusterClass `status.variables[]`
	DefinitionFrom *string `pulumi:"definitionFrom"`
	// Name of the variable.
	Name string `pulumi:"name"`
	// Value of the variable. Note: the value will be validated against the schema of the corresponding ClusterClassVariable from the ClusterClass. Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools, i.e. it is not possible to have no type field. Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
	Value map[string]interface{} `pulumi:"value"`
}

// ClusterSpecTopologyVariablesInput is an input type that accepts ClusterSpecTopologyVariablesArgs and ClusterSpecTopologyVariablesOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyVariablesInput` via:
//
//	ClusterSpecTopologyVariablesArgs{...}
type ClusterSpecTopologyVariablesInput interface {
	pulumi.Input

	ToClusterSpecTopologyVariablesOutput() ClusterSpecTopologyVariablesOutput
	ToClusterSpecTopologyVariablesOutputWithContext(context.Context) ClusterSpecTopologyVariablesOutput
}

// ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a Variable definition in the ClusterClass `status` variables.
type ClusterSpecTopologyVariablesArgs struct {
	// DefinitionFrom specifies where the definition of this Variable is from. DefinitionFrom is `inline` when the definition is from the ClusterClass `.spec.variables` or the name of a patch defined in the ClusterClass `.spec.patches` where the patch is external and provides external variables. This field is mandatory if the variable has `DefinitionsConflict: true` in ClusterClass `status.variables[]`
	DefinitionFrom pulumi.StringPtrInput `pulumi:"definitionFrom"`
	// Name of the variable.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the variable. Note: the value will be validated against the schema of the corresponding ClusterClassVariable from the ClusterClass. Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools, i.e. it is not possible to have no type field. Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
	Value pulumi.MapInput `pulumi:"value"`
}

func (ClusterSpecTopologyVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyVariables)(nil)).Elem()
}

func (i ClusterSpecTopologyVariablesArgs) ToClusterSpecTopologyVariablesOutput() ClusterSpecTopologyVariablesOutput {
	return i.ToClusterSpecTopologyVariablesOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyVariablesArgs) ToClusterSpecTopologyVariablesOutputWithContext(ctx context.Context) ClusterSpecTopologyVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyVariablesOutput)
}

// ClusterSpecTopologyVariablesArrayInput is an input type that accepts ClusterSpecTopologyVariablesArray and ClusterSpecTopologyVariablesArrayOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyVariablesArrayInput` via:
//
//	ClusterSpecTopologyVariablesArray{ ClusterSpecTopologyVariablesArgs{...} }
type ClusterSpecTopologyVariablesArrayInput interface {
	pulumi.Input

	ToClusterSpecTopologyVariablesArrayOutput() ClusterSpecTopologyVariablesArrayOutput
	ToClusterSpecTopologyVariablesArrayOutputWithContext(context.Context) ClusterSpecTopologyVariablesArrayOutput
}

type ClusterSpecTopologyVariablesArray []ClusterSpecTopologyVariablesInput

func (ClusterSpecTopologyVariablesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSpecTopologyVariables)(nil)).Elem()
}

func (i ClusterSpecTopologyVariablesArray) ToClusterSpecTopologyVariablesArrayOutput() ClusterSpecTopologyVariablesArrayOutput {
	return i.ToClusterSpecTopologyVariablesArrayOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyVariablesArray) ToClusterSpecTopologyVariablesArrayOutputWithContext(ctx context.Context) ClusterSpecTopologyVariablesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyVariablesArrayOutput)
}

// ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a Variable definition in the ClusterClass `status` variables.
type ClusterSpecTopologyVariablesOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyVariables)(nil)).Elem()
}

func (o ClusterSpecTopologyVariablesOutput) ToClusterSpecTopologyVariablesOutput() ClusterSpecTopologyVariablesOutput {
	return o
}

func (o ClusterSpecTopologyVariablesOutput) ToClusterSpecTopologyVariablesOutputWithContext(ctx context.Context) ClusterSpecTopologyVariablesOutput {
	return o
}

// DefinitionFrom specifies where the definition of this Variable is from. DefinitionFrom is `inline` when the definition is from the ClusterClass `.spec.variables` or the name of a patch defined in the ClusterClass `.spec.patches` where the patch is external and provides external variables. This field is mandatory if the variable has `DefinitionsConflict: true` in ClusterClass `status.variables[]`
func (o ClusterSpecTopologyVariablesOutput) DefinitionFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyVariables) *string { return v.DefinitionFrom }).(pulumi.StringPtrOutput)
}

// Name of the variable.
func (o ClusterSpecTopologyVariablesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSpecTopologyVariables) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the variable. Note: the value will be validated against the schema of the corresponding ClusterClassVariable from the ClusterClass. Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools, i.e. it is not possible to have no type field. Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
func (o ClusterSpecTopologyVariablesOutput) Value() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterSpecTopologyVariables) map[string]interface{} { return v.Value }).(pulumi.MapOutput)
}

type ClusterSpecTopologyVariablesArrayOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyVariablesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSpecTopologyVariables)(nil)).Elem()
}

func (o ClusterSpecTopologyVariablesArrayOutput) ToClusterSpecTopologyVariablesArrayOutput() ClusterSpecTopologyVariablesArrayOutput {
	return o
}

func (o ClusterSpecTopologyVariablesArrayOutput) ToClusterSpecTopologyVariablesArrayOutputWithContext(ctx context.Context) ClusterSpecTopologyVariablesArrayOutput {
	return o
}

func (o ClusterSpecTopologyVariablesArrayOutput) Index(i pulumi.IntInput) ClusterSpecTopologyVariablesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSpecTopologyVariables {
		return vs[0].([]ClusterSpecTopologyVariables)[vs[1].(int)]
	}).(ClusterSpecTopologyVariablesOutput)
}

// Workers encapsulates the different constructs that form the worker nodes for the cluster.
type ClusterSpecTopologyWorkers struct {
	// MachineDeployments is a list of machine deployments in the cluster.
	MachineDeployments []ClusterSpecTopologyWorkersMachineDeployments `pulumi:"machineDeployments"`
}

// ClusterSpecTopologyWorkersInput is an input type that accepts ClusterSpecTopologyWorkersArgs and ClusterSpecTopologyWorkersOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersInput` via:
//
//	ClusterSpecTopologyWorkersArgs{...}
type ClusterSpecTopologyWorkersInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersOutput() ClusterSpecTopologyWorkersOutput
	ToClusterSpecTopologyWorkersOutputWithContext(context.Context) ClusterSpecTopologyWorkersOutput
}

// Workers encapsulates the different constructs that form the worker nodes for the cluster.
type ClusterSpecTopologyWorkersArgs struct {
	// MachineDeployments is a list of machine deployments in the cluster.
	MachineDeployments ClusterSpecTopologyWorkersMachineDeploymentsArrayInput `pulumi:"machineDeployments"`
}

func (ClusterSpecTopologyWorkersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkers)(nil)).Elem()
}

func (i ClusterSpecTopologyWorkersArgs) ToClusterSpecTopologyWorkersOutput() ClusterSpecTopologyWorkersOutput {
	return i.ToClusterSpecTopologyWorkersOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersArgs) ToClusterSpecTopologyWorkersOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersOutput)
}

func (i ClusterSpecTopologyWorkersArgs) ToClusterSpecTopologyWorkersPtrOutput() ClusterSpecTopologyWorkersPtrOutput {
	return i.ToClusterSpecTopologyWorkersPtrOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersArgs) ToClusterSpecTopologyWorkersPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersOutput).ToClusterSpecTopologyWorkersPtrOutputWithContext(ctx)
}

// ClusterSpecTopologyWorkersPtrInput is an input type that accepts ClusterSpecTopologyWorkersArgs, ClusterSpecTopologyWorkersPtr and ClusterSpecTopologyWorkersPtrOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersPtrInput` via:
//
//	        ClusterSpecTopologyWorkersArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecTopologyWorkersPtrInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersPtrOutput() ClusterSpecTopologyWorkersPtrOutput
	ToClusterSpecTopologyWorkersPtrOutputWithContext(context.Context) ClusterSpecTopologyWorkersPtrOutput
}

type clusterSpecTopologyWorkersPtrType ClusterSpecTopologyWorkersArgs

func ClusterSpecTopologyWorkersPtr(v *ClusterSpecTopologyWorkersArgs) ClusterSpecTopologyWorkersPtrInput {
	return (*clusterSpecTopologyWorkersPtrType)(v)
}

func (*clusterSpecTopologyWorkersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkers)(nil)).Elem()
}

func (i *clusterSpecTopologyWorkersPtrType) ToClusterSpecTopologyWorkersPtrOutput() ClusterSpecTopologyWorkersPtrOutput {
	return i.ToClusterSpecTopologyWorkersPtrOutputWithContext(context.Background())
}

func (i *clusterSpecTopologyWorkersPtrType) ToClusterSpecTopologyWorkersPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersPtrOutput)
}

// Workers encapsulates the different constructs that form the worker nodes for the cluster.
type ClusterSpecTopologyWorkersOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkers)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersOutput) ToClusterSpecTopologyWorkersOutput() ClusterSpecTopologyWorkersOutput {
	return o
}

func (o ClusterSpecTopologyWorkersOutput) ToClusterSpecTopologyWorkersOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersOutput {
	return o
}

func (o ClusterSpecTopologyWorkersOutput) ToClusterSpecTopologyWorkersPtrOutput() ClusterSpecTopologyWorkersPtrOutput {
	return o.ToClusterSpecTopologyWorkersPtrOutputWithContext(context.Background())
}

func (o ClusterSpecTopologyWorkersOutput) ToClusterSpecTopologyWorkersPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecTopologyWorkers) *ClusterSpecTopologyWorkers {
		return &v
	}).(ClusterSpecTopologyWorkersPtrOutput)
}

// MachineDeployments is a list of machine deployments in the cluster.
func (o ClusterSpecTopologyWorkersOutput) MachineDeployments() ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkers) []ClusterSpecTopologyWorkersMachineDeployments {
		return v.MachineDeployments
	}).(ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput)
}

type ClusterSpecTopologyWorkersPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkers)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersPtrOutput) ToClusterSpecTopologyWorkersPtrOutput() ClusterSpecTopologyWorkersPtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersPtrOutput) ToClusterSpecTopologyWorkersPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersPtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersPtrOutput) Elem() ClusterSpecTopologyWorkersOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkers) ClusterSpecTopologyWorkers {
		if v != nil {
			return *v
		}
		var ret ClusterSpecTopologyWorkers
		return ret
	}).(ClusterSpecTopologyWorkersOutput)
}

// MachineDeployments is a list of machine deployments in the cluster.
func (o ClusterSpecTopologyWorkersPtrOutput) MachineDeployments() ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkers) []ClusterSpecTopologyWorkersMachineDeployments {
		if v == nil {
			return nil
		}
		return v.MachineDeployments
	}).(ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput)
}

// MachineDeploymentTopology specifies the different parameters for a set of worker nodes in the topology. This set of nodes is managed by a MachineDeployment object whose lifecycle is managed by the Cluster controller.
type ClusterSpecTopologyWorkersMachineDeployments struct {
	// Class is the name of the MachineDeploymentClass used to create the set of worker nodes. This should match one of the deployment classes defined in the ClusterClass object mentioned in the `Cluster.Spec.Class` field.
	Class string `pulumi:"class"`
	// FailureDomain is the failure domain the machines will be created in. Must match a key in the FailureDomains map stored on the cluster object.
	FailureDomain *string `pulumi:"failureDomain"`
	// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this MachineDeployment.
	MachineHealthCheck *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck `pulumi:"machineHealthCheck"`
	// Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
	Metadata *ClusterSpecTopologyWorkersMachineDeploymentsMetadata `pulumi:"metadata"`
	// Minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready)
	MinReadySeconds *int `pulumi:"minReadySeconds"`
	// Name is the unique identifier for this MachineDeploymentTopology. The value is used with other unique identifiers to create a MachineDeployment's Name (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length, the values are hashed together.
	Name string `pulumi:"name"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
	NodeDeletionTimeout *string `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
	NodeDrainTimeout *string `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
	NodeVolumeDetachTimeout *string `pulumi:"nodeVolumeDetachTimeout"`
	// Replicas is the number of worker nodes belonging to this set. If the value is nil, the MachineDeployment is created without the number of Replicas (defaulting to 1) and it's assumed that an external entity (like cluster autoscaler) is responsible for the management of this value.
	Replicas *int `pulumi:"replicas"`
	// The deployment strategy to use to replace existing machines with new ones.
	Strategy *ClusterSpecTopologyWorkersMachineDeploymentsStrategy `pulumi:"strategy"`
	// Variables can be used to customize the MachineDeployment through patches.
	Variables *ClusterSpecTopologyWorkersMachineDeploymentsVariables `pulumi:"variables"`
}

// ClusterSpecTopologyWorkersMachineDeploymentsInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsArgs and ClusterSpecTopologyWorkersMachineDeploymentsOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsInput` via:
//
//	ClusterSpecTopologyWorkersMachineDeploymentsArgs{...}
type ClusterSpecTopologyWorkersMachineDeploymentsInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsOutput() ClusterSpecTopologyWorkersMachineDeploymentsOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsOutput
}

// MachineDeploymentTopology specifies the different parameters for a set of worker nodes in the topology. This set of nodes is managed by a MachineDeployment object whose lifecycle is managed by the Cluster controller.
type ClusterSpecTopologyWorkersMachineDeploymentsArgs struct {
	// Class is the name of the MachineDeploymentClass used to create the set of worker nodes. This should match one of the deployment classes defined in the ClusterClass object mentioned in the `Cluster.Spec.Class` field.
	Class pulumi.StringInput `pulumi:"class"`
	// FailureDomain is the failure domain the machines will be created in. Must match a key in the FailureDomains map stored on the cluster object.
	FailureDomain pulumi.StringPtrInput `pulumi:"failureDomain"`
	// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this MachineDeployment.
	MachineHealthCheck ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrInput `pulumi:"machineHealthCheck"`
	// Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
	Metadata ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrInput `pulumi:"metadata"`
	// Minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready)
	MinReadySeconds pulumi.IntPtrInput `pulumi:"minReadySeconds"`
	// Name is the unique identifier for this MachineDeploymentTopology. The value is used with other unique identifiers to create a MachineDeployment's Name (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length, the values are hashed together.
	Name pulumi.StringInput `pulumi:"name"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
	NodeDeletionTimeout pulumi.StringPtrInput `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
	NodeDrainTimeout pulumi.StringPtrInput `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
	NodeVolumeDetachTimeout pulumi.StringPtrInput `pulumi:"nodeVolumeDetachTimeout"`
	// Replicas is the number of worker nodes belonging to this set. If the value is nil, the MachineDeployment is created without the number of Replicas (defaulting to 1) and it's assumed that an external entity (like cluster autoscaler) is responsible for the management of this value.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// The deployment strategy to use to replace existing machines with new ones.
	Strategy ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrInput `pulumi:"strategy"`
	// Variables can be used to customize the MachineDeployment through patches.
	Variables ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrInput `pulumi:"variables"`
}

func (ClusterSpecTopologyWorkersMachineDeploymentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeployments)(nil)).Elem()
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsArgs) ToClusterSpecTopologyWorkersMachineDeploymentsOutput() ClusterSpecTopologyWorkersMachineDeploymentsOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsArgs) ToClusterSpecTopologyWorkersMachineDeploymentsOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsOutput)
}

// ClusterSpecTopologyWorkersMachineDeploymentsArrayInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsArray and ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsArrayInput` via:
//
//	ClusterSpecTopologyWorkersMachineDeploymentsArray{ ClusterSpecTopologyWorkersMachineDeploymentsArgs{...} }
type ClusterSpecTopologyWorkersMachineDeploymentsArrayInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsArrayOutput() ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsArrayOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput
}

type ClusterSpecTopologyWorkersMachineDeploymentsArray []ClusterSpecTopologyWorkersMachineDeploymentsInput

func (ClusterSpecTopologyWorkersMachineDeploymentsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSpecTopologyWorkersMachineDeployments)(nil)).Elem()
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsArray) ToClusterSpecTopologyWorkersMachineDeploymentsArrayOutput() ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsArrayOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsArray) ToClusterSpecTopologyWorkersMachineDeploymentsArrayOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput)
}

// MachineDeploymentTopology specifies the different parameters for a set of worker nodes in the topology. This set of nodes is managed by a MachineDeployment object whose lifecycle is managed by the Cluster controller.
type ClusterSpecTopologyWorkersMachineDeploymentsOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeployments)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) ToClusterSpecTopologyWorkersMachineDeploymentsOutput() ClusterSpecTopologyWorkersMachineDeploymentsOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) ToClusterSpecTopologyWorkersMachineDeploymentsOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsOutput {
	return o
}

// Class is the name of the MachineDeploymentClass used to create the set of worker nodes. This should match one of the deployment classes defined in the ClusterClass object mentioned in the `Cluster.Spec.Class` field.
func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) Class() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeployments) string { return v.Class }).(pulumi.StringOutput)
}

// FailureDomain is the failure domain the machines will be created in. Must match a key in the FailureDomains map stored on the cluster object.
func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) FailureDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeployments) *string { return v.FailureDomain }).(pulumi.StringPtrOutput)
}

// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this MachineDeployment.
func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) MachineHealthCheck() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeployments) *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck {
		return v.MachineHealthCheck
	}).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput)
}

// Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) Metadata() ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeployments) *ClusterSpecTopologyWorkersMachineDeploymentsMetadata {
		return v.Metadata
	}).(ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput)
}

// Minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready)
func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) MinReadySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeployments) *int { return v.MinReadySeconds }).(pulumi.IntPtrOutput)
}

// Name is the unique identifier for this MachineDeploymentTopology. The value is used with other unique identifiers to create a MachineDeployment's Name (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length, the values are hashed together.
func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeployments) string { return v.Name }).(pulumi.StringOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeployments) *string { return v.NodeDeletionTimeout }).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeployments) *string { return v.NodeDrainTimeout }).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeployments) *string { return v.NodeVolumeDetachTimeout }).(pulumi.StringPtrOutput)
}

// Replicas is the number of worker nodes belonging to this set. If the value is nil, the MachineDeployment is created without the number of Replicas (defaulting to 1) and it's assumed that an external entity (like cluster autoscaler) is responsible for the management of this value.
func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeployments) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// The deployment strategy to use to replace existing machines with new ones.
func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) Strategy() ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeployments) *ClusterSpecTopologyWorkersMachineDeploymentsStrategy {
		return v.Strategy
	}).(ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput)
}

// Variables can be used to customize the MachineDeployment through patches.
func (o ClusterSpecTopologyWorkersMachineDeploymentsOutput) Variables() ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeployments) *ClusterSpecTopologyWorkersMachineDeploymentsVariables {
		return v.Variables
	}).(ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput)
}

type ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSpecTopologyWorkersMachineDeployments)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput) ToClusterSpecTopologyWorkersMachineDeploymentsArrayOutput() ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput) ToClusterSpecTopologyWorkersMachineDeploymentsArrayOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput) Index(i pulumi.IntInput) ClusterSpecTopologyWorkersMachineDeploymentsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSpecTopologyWorkersMachineDeployments {
		return vs[0].([]ClusterSpecTopologyWorkersMachineDeployments)[vs[1].(int)]
	}).(ClusterSpecTopologyWorkersMachineDeploymentsOutput)
}

// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this MachineDeployment.
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck struct {
	// Enable controls if a MachineHealthCheck should be created for the target machines.
	//  If false: No MachineHealthCheck will be created.
	//  If not set(default): A MachineHealthCheck will be created if it is defined here or in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.
	//  If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will block if `enable` is true and no MachineHealthCheck definition is available.
	Enable *bool `pulumi:"enable"`
	// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
	MaxUnhealthy interface{} `pulumi:"maxUnhealthy"`
	// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
	NodeStartupTimeout *string `pulumi:"nodeStartupTimeout"`
	// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
	//  This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
	RemediationTemplate *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate `pulumi:"remediationTemplate"`
	// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
	UnhealthyConditions []ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions `pulumi:"unhealthyConditions"`
	// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
	UnhealthyRange *string `pulumi:"unhealthyRange"`
}

// ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs and ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckInput` via:
//
//	ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs{...}
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput
}

// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this MachineDeployment.
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs struct {
	// Enable controls if a MachineHealthCheck should be created for the target machines.
	//  If false: No MachineHealthCheck will be created.
	//  If not set(default): A MachineHealthCheck will be created if it is defined here or in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.
	//  If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will block if `enable` is true and no MachineHealthCheck definition is available.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
	MaxUnhealthy pulumi.Input `pulumi:"maxUnhealthy"`
	// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
	NodeStartupTimeout pulumi.StringPtrInput `pulumi:"nodeStartupTimeout"`
	// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
	//  This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
	RemediationTemplate ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrInput `pulumi:"remediationTemplate"`
	// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
	UnhealthyConditions ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayInput `pulumi:"unhealthyConditions"`
	// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
	UnhealthyRange pulumi.StringPtrInput `pulumi:"unhealthyRange"`
}

func (ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck)(nil)).Elem()
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput)
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput).ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(ctx)
}

// ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs, ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtr and ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrInput` via:
//
//	        ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput
}

type clusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrType ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs

func ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtr(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrInput {
	return (*clusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrType)(v)
}

func (*clusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck)(nil)).Elem()
}

func (i *clusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrType) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(context.Background())
}

func (i *clusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrType) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput)
}

// MachineHealthCheck allows to enable, disable and override the MachineHealthCheck configuration in the ClusterClass for this MachineDeployment.
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return o.ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(context.Background())
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck {
		return &v
	}).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput)
}

// Enable controls if a MachineHealthCheck should be created for the target machines.
//
//	If false: No MachineHealthCheck will be created.
//	If not set(default): A MachineHealthCheck will be created if it is defined here or in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.
//	If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will block if `enable` is true and no MachineHealthCheck definition is available.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput) MaxUnhealthy() pulumi.AnyOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) interface{} {
		return v.MaxUnhealthy
	}).(pulumi.AnyOutput)
}

// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput) NodeStartupTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) *string {
		return v.NodeStartupTimeout
	}).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput) RemediationTemplate() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate {
		return v.RemediationTemplate
	}).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput)
}

// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput) UnhealthyConditions() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) []ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions {
		return v.UnhealthyConditions
	}).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput)
}

// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput) UnhealthyRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) *string {
		return v.UnhealthyRange
	}).(pulumi.StringPtrOutput)
}

type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput) Elem() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck {
		if v != nil {
			return *v
		}
		var ret ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck
		return ret
	}).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput)
}

// Enable controls if a MachineHealthCheck should be created for the target machines.
//
//	If false: No MachineHealthCheck will be created.
//	If not set(default): A MachineHealthCheck will be created if it is defined here or in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.
//	If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will block if `enable` is true and no MachineHealthCheck definition is available.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput) MaxUnhealthy() pulumi.AnyOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnhealthy
	}).(pulumi.AnyOutput)
}

// Machines older than this duration without a node will be considered to have failed and will be remediated. If you wish to disable this feature, set the value explicitly to 0.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput) NodeStartupTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.NodeStartupTimeout
	}).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput) RemediationTemplate() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate {
		if v == nil {
			return nil
		}
		return v.RemediationTemplate
	}).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput)
}

// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy. The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput) UnhealthyConditions() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) []ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions {
		if v == nil {
			return nil
		}
		return v.UnhealthyConditions
	}).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput)
}

// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput) UnhealthyRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.UnhealthyRange
	}).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs and ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateInput` via:
//
//	ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs{...}
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput)
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput).ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx)
}

// ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs, ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtr and ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrInput` via:
//
//	        ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput
}

type clusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrType ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs

func ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtr(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrInput {
	return (*clusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrType)(v)
}

func (*clusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (i *clusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrType) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Background())
}

func (i *clusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrType) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(context.Background())
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate {
		return &v
	}).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput)
}

// API version of the referent.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) Elem() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate {
		if v != nil {
			return *v
		}
		var ret ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate
		return ret
	}).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput)
}

// API version of the referent.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions struct {
	Status  string `pulumi:"status"`
	Timeout string `pulumi:"timeout"`
	Type    string `pulumi:"type"`
}

// ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs and ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsInput` via:
//
//	ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs{...}
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs struct {
	Status  pulumi.StringInput `pulumi:"status"`
	Timeout pulumi.StringInput `pulumi:"timeout"`
	Type    pulumi.StringInput `pulumi:"type"`
}

func (ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput)
}

// ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray and ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayInput` via:
//
//	ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray{ ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs{...} }
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput
}

type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray []ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsInput

func (ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput)
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions) string {
		return v.Status
	}).(pulumi.StringOutput)
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions) string {
		return v.Timeout
	}).(pulumi.StringOutput)
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput() ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput) Index(i pulumi.IntInput) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions {
		return vs[0].([]ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditions)[vs[1].(int)]
	}).(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput)
}

// Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
type ClusterSpecTopologyWorkersMachineDeploymentsMetadata struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations map[string]string `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels map[string]string `pulumi:"labels"`
}

// ClusterSpecTopologyWorkersMachineDeploymentsMetadataInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs and ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsMetadataInput` via:
//
//	ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs{...}
type ClusterSpecTopologyWorkersMachineDeploymentsMetadataInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput() ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsMetadataOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput
}

// Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
type ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMetadata)(nil)).Elem()
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput() ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsMetadataOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMetadataOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput)
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs) ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput).ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutputWithContext(ctx)
}

// ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs, ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtr and ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrInput` via:
//
//	        ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput
}

type clusterSpecTopologyWorkersMachineDeploymentsMetadataPtrType ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs

func ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtr(v *ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs) ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrInput {
	return (*clusterSpecTopologyWorkersMachineDeploymentsMetadataPtrType)(v)
}

func (*clusterSpecTopologyWorkersMachineDeploymentsMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkersMachineDeploymentsMetadata)(nil)).Elem()
}

func (i *clusterSpecTopologyWorkersMachineDeploymentsMetadataPtrType) ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutputWithContext(context.Background())
}

func (i *clusterSpecTopologyWorkersMachineDeploymentsMetadataPtrType) ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput)
}

// Metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
type ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMetadata)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput() ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMetadataOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput {
	return o.ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutputWithContext(context.Background())
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecTopologyWorkersMachineDeploymentsMetadata) *ClusterSpecTopologyWorkersMachineDeploymentsMetadata {
		return &v
	}).(ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkersMachineDeploymentsMetadata)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput) ToClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput) Elem() ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMetadata) ClusterSpecTopologyWorkersMachineDeploymentsMetadata {
		if v != nil {
			return *v
		}
		var ret ClusterSpecTopologyWorkersMachineDeploymentsMetadata
		return ret
	}).(ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
type ClusterSpecTopologyWorkersMachineDeploymentsMetadataAnnotations struct {
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
type ClusterSpecTopologyWorkersMachineDeploymentsMetadataLabels struct {
}

// The deployment strategy to use to replace existing machines with new ones.
type ClusterSpecTopologyWorkersMachineDeploymentsStrategy struct {
	// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
	RollingUpdate *ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate `pulumi:"rollingUpdate"`
	// Type of deployment. Default is RollingUpdate.
	Type *string `pulumi:"type"`
}

// ClusterSpecTopologyWorkersMachineDeploymentsStrategyInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs and ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsStrategyInput` via:
//
//	ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs{...}
type ClusterSpecTopologyWorkersMachineDeploymentsStrategyInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsStrategyOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput
}

// The deployment strategy to use to replace existing machines with new ones.
type ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs struct {
	// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
	RollingUpdate ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrInput `pulumi:"rollingUpdate"`
	// Type of deployment. Default is RollingUpdate.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsStrategy)(nil)).Elem()
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsStrategyOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput)
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput).ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutputWithContext(ctx)
}

// ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs, ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtr and ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrInput` via:
//
//	        ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput
}

type clusterSpecTopologyWorkersMachineDeploymentsStrategyPtrType ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs

func ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtr(v *ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs) ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrInput {
	return (*clusterSpecTopologyWorkersMachineDeploymentsStrategyPtrType)(v)
}

func (*clusterSpecTopologyWorkersMachineDeploymentsStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkersMachineDeploymentsStrategy)(nil)).Elem()
}

func (i *clusterSpecTopologyWorkersMachineDeploymentsStrategyPtrType) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutputWithContext(context.Background())
}

func (i *clusterSpecTopologyWorkersMachineDeploymentsStrategyPtrType) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput)
}

// The deployment strategy to use to replace existing machines with new ones.
type ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsStrategy)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput {
	return o.ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutputWithContext(context.Background())
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecTopologyWorkersMachineDeploymentsStrategy) *ClusterSpecTopologyWorkersMachineDeploymentsStrategy {
		return &v
	}).(ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput)
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput) RollingUpdate() ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsStrategy) *ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate {
		return v.RollingUpdate
	}).(ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput)
}

// Type of deployment. Default is RollingUpdate.
func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsStrategy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkersMachineDeploymentsStrategy)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput) Elem() ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsStrategy) ClusterSpecTopologyWorkersMachineDeploymentsStrategy {
		if v != nil {
			return *v
		}
		var ret ClusterSpecTopologyWorkersMachineDeploymentsStrategy
		return ret
	}).(ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput)
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput) RollingUpdate() ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsStrategy) *ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate {
		if v == nil {
			return nil
		}
		return v.RollingUpdate
	}).(ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput)
}

// Type of deployment. Default is RollingUpdate.
func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
type ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate struct {
	// DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are "Random, "Newest", "Oldest" When no value is supplied, the default DeletePolicy of MachineSet is used
	DeletePolicy *string `pulumi:"deletePolicy"`
	// The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.
	MaxSurge interface{} `pulumi:"maxSurge"`
	// The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.
	MaxUnavailable interface{} `pulumi:"maxUnavailable"`
}

// ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs and ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateInput` via:
//
//	ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs{...}
type ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
type ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs struct {
	// DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are "Random, "Newest", "Oldest" When no value is supplied, the default DeletePolicy of MachineSet is used
	DeletePolicy pulumi.StringPtrInput `pulumi:"deletePolicy"`
	// The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.
	MaxSurge pulumi.Input `pulumi:"maxSurge"`
	// The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.
	MaxUnavailable pulumi.Input `pulumi:"maxUnavailable"`
}

func (ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate)(nil)).Elem()
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput)
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput).ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(ctx)
}

// ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs, ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtr and ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrInput` via:
//
//	        ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput
}

type clusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrType ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs

func ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtr(v *ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs) ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrInput {
	return (*clusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrType)(v)
}

func (*clusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate)(nil)).Elem()
}

func (i *clusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrType) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i *clusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrType) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput)
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
type ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return o.ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate) *ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate {
		return &v
	}).(ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput)
}

// DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are "Random, "Newest", "Oldest" When no value is supplied, the default DeletePolicy of MachineSet is used
func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput) DeletePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate) *string {
		return v.DeletePolicy
	}).(pulumi.StringPtrOutput)
}

// The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.
func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate) interface{} {
		return v.MaxSurge
	}).(pulumi.AnyOutput)
}

// The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.
func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate) interface{} {
		return v.MaxUnavailable
	}).(pulumi.AnyOutput)
}

type ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) ToClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) Elem() ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate) ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate {
		if v != nil {
			return *v
		}
		var ret ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate
		return ret
	}).(ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput)
}

// DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are "Random, "Newest", "Oldest" When no value is supplied, the default DeletePolicy of MachineSet is used
func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) DeletePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate) *string {
		if v == nil {
			return nil
		}
		return v.DeletePolicy
	}).(pulumi.StringPtrOutput)
}

// The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.
func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.AnyOutput)
}

// The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.
func (o ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.AnyOutput)
}

// Variables can be used to customize the MachineDeployment through patches.
type ClusterSpecTopologyWorkersMachineDeploymentsVariables struct {
	// Overrides can be used to override Cluster level variables.
	Overrides []ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverrides `pulumi:"overrides"`
}

// ClusterSpecTopologyWorkersMachineDeploymentsVariablesInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs and ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsVariablesInput` via:
//
//	ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs{...}
type ClusterSpecTopologyWorkersMachineDeploymentsVariablesInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput
}

// Variables can be used to customize the MachineDeployment through patches.
type ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs struct {
	// Overrides can be used to override Cluster level variables.
	Overrides ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayInput `pulumi:"overrides"`
}

func (ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsVariables)(nil)).Elem()
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput)
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput).ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutputWithContext(ctx)
}

// ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs, ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtr and ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrInput` via:
//
//	        ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput
}

type clusterSpecTopologyWorkersMachineDeploymentsVariablesPtrType ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs

func ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtr(v *ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs) ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrInput {
	return (*clusterSpecTopologyWorkersMachineDeploymentsVariablesPtrType)(v)
}

func (*clusterSpecTopologyWorkersMachineDeploymentsVariablesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkersMachineDeploymentsVariables)(nil)).Elem()
}

func (i *clusterSpecTopologyWorkersMachineDeploymentsVariablesPtrType) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutputWithContext(context.Background())
}

func (i *clusterSpecTopologyWorkersMachineDeploymentsVariablesPtrType) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput)
}

// Variables can be used to customize the MachineDeployment through patches.
type ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsVariables)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput {
	return o.ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutputWithContext(context.Background())
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpecTopologyWorkersMachineDeploymentsVariables) *ClusterSpecTopologyWorkersMachineDeploymentsVariables {
		return &v
	}).(ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput)
}

// Overrides can be used to override Cluster level variables.
func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput) Overrides() ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsVariables) []ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverrides {
		return v.Overrides
	}).(ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput)
}

type ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpecTopologyWorkersMachineDeploymentsVariables)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput) Elem() ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsVariables) ClusterSpecTopologyWorkersMachineDeploymentsVariables {
		if v != nil {
			return *v
		}
		var ret ClusterSpecTopologyWorkersMachineDeploymentsVariables
		return ret
	}).(ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput)
}

// Overrides can be used to override Cluster level variables.
func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput) Overrides() ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput {
	return o.ApplyT(func(v *ClusterSpecTopologyWorkersMachineDeploymentsVariables) []ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverrides {
		if v == nil {
			return nil
		}
		return v.Overrides
	}).(ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput)
}

// ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a Variable definition in the ClusterClass `status` variables.
type ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverrides struct {
	// DefinitionFrom specifies where the definition of this Variable is from. DefinitionFrom is `inline` when the definition is from the ClusterClass `.spec.variables` or the name of a patch defined in the ClusterClass `.spec.patches` where the patch is external and provides external variables. This field is mandatory if the variable has `DefinitionsConflict: true` in ClusterClass `status.variables[]`
	DefinitionFrom *string `pulumi:"definitionFrom"`
	// Name of the variable.
	Name string `pulumi:"name"`
	// Value of the variable. Note: the value will be validated against the schema of the corresponding ClusterClassVariable from the ClusterClass. Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools, i.e. it is not possible to have no type field. Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
	Value map[string]interface{} `pulumi:"value"`
}

// ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArgs and ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesInput` via:
//
//	ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArgs{...}
type ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput
}

// ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a Variable definition in the ClusterClass `status` variables.
type ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArgs struct {
	// DefinitionFrom specifies where the definition of this Variable is from. DefinitionFrom is `inline` when the definition is from the ClusterClass `.spec.variables` or the name of a patch defined in the ClusterClass `.spec.patches` where the patch is external and provides external variables. This field is mandatory if the variable has `DefinitionsConflict: true` in ClusterClass `status.variables[]`
	DefinitionFrom pulumi.StringPtrInput `pulumi:"definitionFrom"`
	// Name of the variable.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the variable. Note: the value will be validated against the schema of the corresponding ClusterClassVariable from the ClusterClass. Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools, i.e. it is not possible to have no type field. Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
	Value pulumi.MapInput `pulumi:"value"`
}

func (ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverrides)(nil)).Elem()
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArgs) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArgs) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput)
}

// ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayInput is an input type that accepts ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArray and ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput values.
// You can construct a concrete instance of `ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayInput` via:
//
//	ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArray{ ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArgs{...} }
type ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayInput interface {
	pulumi.Input

	ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput
	ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutputWithContext(context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput
}

type ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArray []ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesInput

func (ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverrides)(nil)).Elem()
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArray) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput {
	return i.ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutputWithContext(context.Background())
}

func (i ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArray) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput)
}

// ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a Variable definition in the ClusterClass `status` variables.
type ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverrides)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput {
	return o
}

// DefinitionFrom specifies where the definition of this Variable is from. DefinitionFrom is `inline` when the definition is from the ClusterClass `.spec.variables` or the name of a patch defined in the ClusterClass `.spec.patches` where the patch is external and provides external variables. This field is mandatory if the variable has `DefinitionsConflict: true` in ClusterClass `status.variables[]`
func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput) DefinitionFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverrides) *string {
		return v.DefinitionFrom
	}).(pulumi.StringPtrOutput)
}

// Name of the variable.
func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverrides) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the variable. Note: the value will be validated against the schema of the corresponding ClusterClassVariable from the ClusterClass. Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools, i.e. it is not possible to have no type field. Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput) Value() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverrides) map[string]interface{} {
		return v.Value
	}).(pulumi.MapOutput)
}

type ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput struct{ *pulumi.OutputState }

func (ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverrides)(nil)).Elem()
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput() ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput) ToClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutputWithContext(ctx context.Context) ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput {
	return o
}

func (o ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput) Index(i pulumi.IntInput) ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverrides {
		return vs[0].([]ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverrides)[vs[1].(int)]
	}).(ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput)
}

// ClusterStatus defines the observed state of Cluster.
type ClusterStatus struct {
	// Conditions defines current service state of the cluster.
	Conditions []ClusterStatusConditions `pulumi:"conditions"`
	// ControlPlaneReady defines if the control plane is ready.
	ControlPlaneReady *bool `pulumi:"controlPlaneReady"`
	// FailureDomains is a slice of failure domain objects synced from the infrastructure provider.
	FailureDomains map[string]ClusterStatusFailureDomains `pulumi:"failureDomains"`
	// FailureMessage indicates that there is a fatal problem reconciling the state, and will be set to a descriptive error message.
	FailureMessage *string `pulumi:"failureMessage"`
	// FailureReason indicates that there is a fatal problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.
	FailureReason *string `pulumi:"failureReason"`
	// InfrastructureReady is the state of the infrastructure provider.
	InfrastructureReady *bool `pulumi:"infrastructureReady"`
	// ObservedGeneration is the latest generation observed by the controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc.
	Phase *string `pulumi:"phase"`
}

// ClusterStatusInput is an input type that accepts ClusterStatusArgs and ClusterStatusOutput values.
// You can construct a concrete instance of `ClusterStatusInput` via:
//
//	ClusterStatusArgs{...}
type ClusterStatusInput interface {
	pulumi.Input

	ToClusterStatusOutput() ClusterStatusOutput
	ToClusterStatusOutputWithContext(context.Context) ClusterStatusOutput
}

// ClusterStatus defines the observed state of Cluster.
type ClusterStatusArgs struct {
	// Conditions defines current service state of the cluster.
	Conditions ClusterStatusConditionsArrayInput `pulumi:"conditions"`
	// ControlPlaneReady defines if the control plane is ready.
	ControlPlaneReady pulumi.BoolPtrInput `pulumi:"controlPlaneReady"`
	// FailureDomains is a slice of failure domain objects synced from the infrastructure provider.
	FailureDomains ClusterStatusFailureDomainsMapInput `pulumi:"failureDomains"`
	// FailureMessage indicates that there is a fatal problem reconciling the state, and will be set to a descriptive error message.
	FailureMessage pulumi.StringPtrInput `pulumi:"failureMessage"`
	// FailureReason indicates that there is a fatal problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.
	FailureReason pulumi.StringPtrInput `pulumi:"failureReason"`
	// InfrastructureReady is the state of the infrastructure provider.
	InfrastructureReady pulumi.BoolPtrInput `pulumi:"infrastructureReady"`
	// ObservedGeneration is the latest generation observed by the controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
}

func (ClusterStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStatus)(nil)).Elem()
}

func (i ClusterStatusArgs) ToClusterStatusOutput() ClusterStatusOutput {
	return i.ToClusterStatusOutputWithContext(context.Background())
}

func (i ClusterStatusArgs) ToClusterStatusOutputWithContext(ctx context.Context) ClusterStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStatusOutput)
}

func (i ClusterStatusArgs) ToClusterStatusPtrOutput() ClusterStatusPtrOutput {
	return i.ToClusterStatusPtrOutputWithContext(context.Background())
}

func (i ClusterStatusArgs) ToClusterStatusPtrOutputWithContext(ctx context.Context) ClusterStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStatusOutput).ToClusterStatusPtrOutputWithContext(ctx)
}

// ClusterStatusPtrInput is an input type that accepts ClusterStatusArgs, ClusterStatusPtr and ClusterStatusPtrOutput values.
// You can construct a concrete instance of `ClusterStatusPtrInput` via:
//
//	        ClusterStatusArgs{...}
//
//	or:
//
//	        nil
type ClusterStatusPtrInput interface {
	pulumi.Input

	ToClusterStatusPtrOutput() ClusterStatusPtrOutput
	ToClusterStatusPtrOutputWithContext(context.Context) ClusterStatusPtrOutput
}

type clusterStatusPtrType ClusterStatusArgs

func ClusterStatusPtr(v *ClusterStatusArgs) ClusterStatusPtrInput {
	return (*clusterStatusPtrType)(v)
}

func (*clusterStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStatus)(nil)).Elem()
}

func (i *clusterStatusPtrType) ToClusterStatusPtrOutput() ClusterStatusPtrOutput {
	return i.ToClusterStatusPtrOutputWithContext(context.Background())
}

func (i *clusterStatusPtrType) ToClusterStatusPtrOutputWithContext(ctx context.Context) ClusterStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStatusPtrOutput)
}

// ClusterStatus defines the observed state of Cluster.
type ClusterStatusOutput struct{ *pulumi.OutputState }

func (ClusterStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStatus)(nil)).Elem()
}

func (o ClusterStatusOutput) ToClusterStatusOutput() ClusterStatusOutput {
	return o
}

func (o ClusterStatusOutput) ToClusterStatusOutputWithContext(ctx context.Context) ClusterStatusOutput {
	return o
}

func (o ClusterStatusOutput) ToClusterStatusPtrOutput() ClusterStatusPtrOutput {
	return o.ToClusterStatusPtrOutputWithContext(context.Background())
}

func (o ClusterStatusOutput) ToClusterStatusPtrOutputWithContext(ctx context.Context) ClusterStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterStatus) *ClusterStatus {
		return &v
	}).(ClusterStatusPtrOutput)
}

// Conditions defines current service state of the cluster.
func (o ClusterStatusOutput) Conditions() ClusterStatusConditionsArrayOutput {
	return o.ApplyT(func(v ClusterStatus) []ClusterStatusConditions { return v.Conditions }).(ClusterStatusConditionsArrayOutput)
}

// ControlPlaneReady defines if the control plane is ready.
func (o ClusterStatusOutput) ControlPlaneReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterStatus) *bool { return v.ControlPlaneReady }).(pulumi.BoolPtrOutput)
}

// FailureDomains is a slice of failure domain objects synced from the infrastructure provider.
func (o ClusterStatusOutput) FailureDomains() ClusterStatusFailureDomainsMapOutput {
	return o.ApplyT(func(v ClusterStatus) map[string]ClusterStatusFailureDomains { return v.FailureDomains }).(ClusterStatusFailureDomainsMapOutput)
}

// FailureMessage indicates that there is a fatal problem reconciling the state, and will be set to a descriptive error message.
func (o ClusterStatusOutput) FailureMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterStatus) *string { return v.FailureMessage }).(pulumi.StringPtrOutput)
}

// FailureReason indicates that there is a fatal problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.
func (o ClusterStatusOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterStatus) *string { return v.FailureReason }).(pulumi.StringPtrOutput)
}

// InfrastructureReady is the state of the infrastructure provider.
func (o ClusterStatusOutput) InfrastructureReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterStatus) *bool { return v.InfrastructureReady }).(pulumi.BoolPtrOutput)
}

// ObservedGeneration is the latest generation observed by the controller.
func (o ClusterStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc.
func (o ClusterStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

type ClusterStatusPtrOutput struct{ *pulumi.OutputState }

func (ClusterStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStatus)(nil)).Elem()
}

func (o ClusterStatusPtrOutput) ToClusterStatusPtrOutput() ClusterStatusPtrOutput {
	return o
}

func (o ClusterStatusPtrOutput) ToClusterStatusPtrOutputWithContext(ctx context.Context) ClusterStatusPtrOutput {
	return o
}

func (o ClusterStatusPtrOutput) Elem() ClusterStatusOutput {
	return o.ApplyT(func(v *ClusterStatus) ClusterStatus {
		if v != nil {
			return *v
		}
		var ret ClusterStatus
		return ret
	}).(ClusterStatusOutput)
}

// Conditions defines current service state of the cluster.
func (o ClusterStatusPtrOutput) Conditions() ClusterStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ClusterStatus) []ClusterStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ClusterStatusConditionsArrayOutput)
}

// ControlPlaneReady defines if the control plane is ready.
func (o ClusterStatusPtrOutput) ControlPlaneReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterStatus) *bool {
		if v == nil {
			return nil
		}
		return v.ControlPlaneReady
	}).(pulumi.BoolPtrOutput)
}

// FailureDomains is a slice of failure domain objects synced from the infrastructure provider.
func (o ClusterStatusPtrOutput) FailureDomains() ClusterStatusFailureDomainsMapOutput {
	return o.ApplyT(func(v *ClusterStatus) map[string]ClusterStatusFailureDomains {
		if v == nil {
			return nil
		}
		return v.FailureDomains
	}).(ClusterStatusFailureDomainsMapOutput)
}

// FailureMessage indicates that there is a fatal problem reconciling the state, and will be set to a descriptive error message.
func (o ClusterStatusPtrOutput) FailureMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStatus) *string {
		if v == nil {
			return nil
		}
		return v.FailureMessage
	}).(pulumi.StringPtrOutput)
}

// FailureReason indicates that there is a fatal problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.
func (o ClusterStatusPtrOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStatus) *string {
		if v == nil {
			return nil
		}
		return v.FailureReason
	}).(pulumi.StringPtrOutput)
}

// InfrastructureReady is the state of the infrastructure provider.
func (o ClusterStatusPtrOutput) InfrastructureReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterStatus) *bool {
		if v == nil {
			return nil
		}
		return v.InfrastructureReady
	}).(pulumi.BoolPtrOutput)
}

// ObservedGeneration is the latest generation observed by the controller.
func (o ClusterStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc.
func (o ClusterStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type ClusterStatusConditions struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason *string `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity *string `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type string `pulumi:"type"`
}

// ClusterStatusConditionsInput is an input type that accepts ClusterStatusConditionsArgs and ClusterStatusConditionsOutput values.
// You can construct a concrete instance of `ClusterStatusConditionsInput` via:
//
//	ClusterStatusConditionsArgs{...}
type ClusterStatusConditionsInput interface {
	pulumi.Input

	ToClusterStatusConditionsOutput() ClusterStatusConditionsOutput
	ToClusterStatusConditionsOutputWithContext(context.Context) ClusterStatusConditionsOutput
}

// Condition defines an observation of a Cluster API resource operational state.
type ClusterStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStatusConditions)(nil)).Elem()
}

func (i ClusterStatusConditionsArgs) ToClusterStatusConditionsOutput() ClusterStatusConditionsOutput {
	return i.ToClusterStatusConditionsOutputWithContext(context.Background())
}

func (i ClusterStatusConditionsArgs) ToClusterStatusConditionsOutputWithContext(ctx context.Context) ClusterStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStatusConditionsOutput)
}

// ClusterStatusConditionsArrayInput is an input type that accepts ClusterStatusConditionsArray and ClusterStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ClusterStatusConditionsArrayInput` via:
//
//	ClusterStatusConditionsArray{ ClusterStatusConditionsArgs{...} }
type ClusterStatusConditionsArrayInput interface {
	pulumi.Input

	ToClusterStatusConditionsArrayOutput() ClusterStatusConditionsArrayOutput
	ToClusterStatusConditionsArrayOutputWithContext(context.Context) ClusterStatusConditionsArrayOutput
}

type ClusterStatusConditionsArray []ClusterStatusConditionsInput

func (ClusterStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterStatusConditions)(nil)).Elem()
}

func (i ClusterStatusConditionsArray) ToClusterStatusConditionsArrayOutput() ClusterStatusConditionsArrayOutput {
	return i.ToClusterStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ClusterStatusConditionsArray) ToClusterStatusConditionsArrayOutputWithContext(ctx context.Context) ClusterStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStatusConditionsArrayOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type ClusterStatusConditionsOutput struct{ *pulumi.OutputState }

func (ClusterStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStatusConditions)(nil)).Elem()
}

func (o ClusterStatusConditionsOutput) ToClusterStatusConditionsOutput() ClusterStatusConditionsOutput {
	return o
}

func (o ClusterStatusConditionsOutput) ToClusterStatusConditionsOutputWithContext(ctx context.Context) ClusterStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
func (o ClusterStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A human readable message indicating details about the transition. This field may be empty.
func (o ClusterStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
func (o ClusterStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
func (o ClusterStatusConditionsOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterStatusConditions) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o ClusterStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
func (o ClusterStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterStatusConditions)(nil)).Elem()
}

func (o ClusterStatusConditionsArrayOutput) ToClusterStatusConditionsArrayOutput() ClusterStatusConditionsArrayOutput {
	return o
}

func (o ClusterStatusConditionsArrayOutput) ToClusterStatusConditionsArrayOutputWithContext(ctx context.Context) ClusterStatusConditionsArrayOutput {
	return o
}

func (o ClusterStatusConditionsArrayOutput) Index(i pulumi.IntInput) ClusterStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterStatusConditions {
		return vs[0].([]ClusterStatusConditions)[vs[1].(int)]
	}).(ClusterStatusConditionsOutput)
}

// FailureDomainSpec is the Schema for Cluster API failure domains. It allows controllers to understand how many failure domains a cluster can optionally span across.
type ClusterStatusFailureDomains struct {
	// Attributes is a free form map of attributes an infrastructure provider might use or require.
	Attributes map[string]string `pulumi:"attributes"`
	// ControlPlane determines if this failure domain is suitable for use by control plane machines.
	ControlPlane *bool `pulumi:"controlPlane"`
}

// ClusterStatusFailureDomainsInput is an input type that accepts ClusterStatusFailureDomainsArgs and ClusterStatusFailureDomainsOutput values.
// You can construct a concrete instance of `ClusterStatusFailureDomainsInput` via:
//
//	ClusterStatusFailureDomainsArgs{...}
type ClusterStatusFailureDomainsInput interface {
	pulumi.Input

	ToClusterStatusFailureDomainsOutput() ClusterStatusFailureDomainsOutput
	ToClusterStatusFailureDomainsOutputWithContext(context.Context) ClusterStatusFailureDomainsOutput
}

// FailureDomainSpec is the Schema for Cluster API failure domains. It allows controllers to understand how many failure domains a cluster can optionally span across.
type ClusterStatusFailureDomainsArgs struct {
	// Attributes is a free form map of attributes an infrastructure provider might use or require.
	Attributes pulumi.StringMapInput `pulumi:"attributes"`
	// ControlPlane determines if this failure domain is suitable for use by control plane machines.
	ControlPlane pulumi.BoolPtrInput `pulumi:"controlPlane"`
}

func (ClusterStatusFailureDomainsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStatusFailureDomains)(nil)).Elem()
}

func (i ClusterStatusFailureDomainsArgs) ToClusterStatusFailureDomainsOutput() ClusterStatusFailureDomainsOutput {
	return i.ToClusterStatusFailureDomainsOutputWithContext(context.Background())
}

func (i ClusterStatusFailureDomainsArgs) ToClusterStatusFailureDomainsOutputWithContext(ctx context.Context) ClusterStatusFailureDomainsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStatusFailureDomainsOutput)
}

// ClusterStatusFailureDomainsMapInput is an input type that accepts ClusterStatusFailureDomainsMap and ClusterStatusFailureDomainsMapOutput values.
// You can construct a concrete instance of `ClusterStatusFailureDomainsMapInput` via:
//
//	ClusterStatusFailureDomainsMap{ "key": ClusterStatusFailureDomainsArgs{...} }
type ClusterStatusFailureDomainsMapInput interface {
	pulumi.Input

	ToClusterStatusFailureDomainsMapOutput() ClusterStatusFailureDomainsMapOutput
	ToClusterStatusFailureDomainsMapOutputWithContext(context.Context) ClusterStatusFailureDomainsMapOutput
}

type ClusterStatusFailureDomainsMap map[string]ClusterStatusFailureDomainsInput

func (ClusterStatusFailureDomainsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ClusterStatusFailureDomains)(nil)).Elem()
}

func (i ClusterStatusFailureDomainsMap) ToClusterStatusFailureDomainsMapOutput() ClusterStatusFailureDomainsMapOutput {
	return i.ToClusterStatusFailureDomainsMapOutputWithContext(context.Background())
}

func (i ClusterStatusFailureDomainsMap) ToClusterStatusFailureDomainsMapOutputWithContext(ctx context.Context) ClusterStatusFailureDomainsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStatusFailureDomainsMapOutput)
}

// FailureDomainSpec is the Schema for Cluster API failure domains. It allows controllers to understand how many failure domains a cluster can optionally span across.
type ClusterStatusFailureDomainsOutput struct{ *pulumi.OutputState }

func (ClusterStatusFailureDomainsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStatusFailureDomains)(nil)).Elem()
}

func (o ClusterStatusFailureDomainsOutput) ToClusterStatusFailureDomainsOutput() ClusterStatusFailureDomainsOutput {
	return o
}

func (o ClusterStatusFailureDomainsOutput) ToClusterStatusFailureDomainsOutputWithContext(ctx context.Context) ClusterStatusFailureDomainsOutput {
	return o
}

// Attributes is a free form map of attributes an infrastructure provider might use or require.
func (o ClusterStatusFailureDomainsOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterStatusFailureDomains) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

// ControlPlane determines if this failure domain is suitable for use by control plane machines.
func (o ClusterStatusFailureDomainsOutput) ControlPlane() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterStatusFailureDomains) *bool { return v.ControlPlane }).(pulumi.BoolPtrOutput)
}

type ClusterStatusFailureDomainsMapOutput struct{ *pulumi.OutputState }

func (ClusterStatusFailureDomainsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ClusterStatusFailureDomains)(nil)).Elem()
}

func (o ClusterStatusFailureDomainsMapOutput) ToClusterStatusFailureDomainsMapOutput() ClusterStatusFailureDomainsMapOutput {
	return o
}

func (o ClusterStatusFailureDomainsMapOutput) ToClusterStatusFailureDomainsMapOutputWithContext(ctx context.Context) ClusterStatusFailureDomainsMapOutput {
	return o
}

func (o ClusterStatusFailureDomainsMapOutput) MapIndex(k pulumi.StringInput) ClusterStatusFailureDomainsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ClusterStatusFailureDomains {
		return vs[0].(map[string]ClusterStatusFailureDomains)[vs[1].(string)]
	}).(ClusterStatusFailureDomainsOutput)
}

// Attributes is a free form map of attributes an infrastructure provider might use or require.
type ClusterStatusFailureDomainsAttributes struct {
}

// Machine is the Schema for the machines API.
type MachineType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// MachineSpec defines the desired state of Machine.
	Spec *MachineSpec `pulumi:"spec"`
	// MachineStatus defines the observed state of Machine.
	Status *MachineStatus `pulumi:"status"`
}

// MachineDeployment is the Schema for the machinedeployments API.
type MachineDeploymentType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// MachineDeploymentSpec defines the desired state of MachineDeployment.
	Spec *MachineDeploymentSpec `pulumi:"spec"`
	// MachineDeploymentStatus defines the observed state of MachineDeployment.
	Status *MachineDeploymentStatus `pulumi:"status"`
}

type MachineDeploymentMetadata struct {
}

// MachineDeploymentSpec defines the desired state of MachineDeployment.
type MachineDeploymentSpec struct {
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName string `pulumi:"clusterName"`
	// MinReadySeconds is the minimum number of seconds for which a Node for a newly created machine should be ready before considering the replica available. Defaults to 0 (machine will be considered available as soon as the Node is ready)
	MinReadySeconds *int `pulumi:"minReadySeconds"`
	// Indicates that the deployment is paused.
	Paused *bool `pulumi:"paused"`
	// The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
	ProgressDeadlineSeconds *int `pulumi:"progressDeadlineSeconds"`
	// Number of desired machines. This is a pointer to distinguish between explicit zero and not specified.
	//  Defaults to: * if the Kubernetes autoscaler min size and max size annotations are set: - if it's a new MachineDeployment, use min size - if the replicas field of the old MachineDeployment is < min size, use min size - if the replicas field of the old MachineDeployment is > max size, use max size - if the replicas field of the old MachineDeployment is in the (min size, max size) range, keep the value from the oldMD * otherwise use 1 Note: Defaulting will be run whenever the replicas field is not set: * A new MachineDeployment is created with replicas not set. * On an existing MachineDeployment the replicas field was first set and is now unset. Those cases are especially relevant for the following Kubernetes autoscaler use cases: * A new MachineDeployment is created and replicas should be managed by the autoscaler * An existing MachineDeployment which initially wasn't controlled by the autoscaler should be later controlled by the autoscaler
	Replicas *int `pulumi:"replicas"`
	// The number of old MachineSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
	RevisionHistoryLimit *int `pulumi:"revisionHistoryLimit"`
	// RolloutAfter is a field to indicate a rollout should be performed after the specified time even if no changes have been made to the MachineDeployment. Example: In the YAML the time can be specified in the RFC3339 format. To specify the rolloutAfter target as March 9, 2023, at 9 am UTC use "2023-03-09T09:00:00Z".
	RolloutAfter *string `pulumi:"rolloutAfter"`
	// Label selector for machines. Existing MachineSets whose machines are selected by this will be the ones affected by this deployment. It must match the machine template's labels.
	Selector MachineDeploymentSpecSelector `pulumi:"selector"`
	// The deployment strategy to use to replace existing machines with new ones.
	Strategy *MachineDeploymentSpecStrategy `pulumi:"strategy"`
	// Template describes the machines that will be created.
	Template MachineDeploymentSpecTemplate `pulumi:"template"`
}

// MachineDeploymentSpecInput is an input type that accepts MachineDeploymentSpecArgs and MachineDeploymentSpecOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecInput` via:
//
//	MachineDeploymentSpecArgs{...}
type MachineDeploymentSpecInput interface {
	pulumi.Input

	ToMachineDeploymentSpecOutput() MachineDeploymentSpecOutput
	ToMachineDeploymentSpecOutputWithContext(context.Context) MachineDeploymentSpecOutput
}

// MachineDeploymentSpec defines the desired state of MachineDeployment.
type MachineDeploymentSpecArgs struct {
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// MinReadySeconds is the minimum number of seconds for which a Node for a newly created machine should be ready before considering the replica available. Defaults to 0 (machine will be considered available as soon as the Node is ready)
	MinReadySeconds pulumi.IntPtrInput `pulumi:"minReadySeconds"`
	// Indicates that the deployment is paused.
	Paused pulumi.BoolPtrInput `pulumi:"paused"`
	// The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
	ProgressDeadlineSeconds pulumi.IntPtrInput `pulumi:"progressDeadlineSeconds"`
	// Number of desired machines. This is a pointer to distinguish between explicit zero and not specified.
	//  Defaults to: * if the Kubernetes autoscaler min size and max size annotations are set: - if it's a new MachineDeployment, use min size - if the replicas field of the old MachineDeployment is < min size, use min size - if the replicas field of the old MachineDeployment is > max size, use max size - if the replicas field of the old MachineDeployment is in the (min size, max size) range, keep the value from the oldMD * otherwise use 1 Note: Defaulting will be run whenever the replicas field is not set: * A new MachineDeployment is created with replicas not set. * On an existing MachineDeployment the replicas field was first set and is now unset. Those cases are especially relevant for the following Kubernetes autoscaler use cases: * A new MachineDeployment is created and replicas should be managed by the autoscaler * An existing MachineDeployment which initially wasn't controlled by the autoscaler should be later controlled by the autoscaler
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// The number of old MachineSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
	RevisionHistoryLimit pulumi.IntPtrInput `pulumi:"revisionHistoryLimit"`
	// RolloutAfter is a field to indicate a rollout should be performed after the specified time even if no changes have been made to the MachineDeployment. Example: In the YAML the time can be specified in the RFC3339 format. To specify the rolloutAfter target as March 9, 2023, at 9 am UTC use "2023-03-09T09:00:00Z".
	RolloutAfter pulumi.StringPtrInput `pulumi:"rolloutAfter"`
	// Label selector for machines. Existing MachineSets whose machines are selected by this will be the ones affected by this deployment. It must match the machine template's labels.
	Selector MachineDeploymentSpecSelectorInput `pulumi:"selector"`
	// The deployment strategy to use to replace existing machines with new ones.
	Strategy MachineDeploymentSpecStrategyPtrInput `pulumi:"strategy"`
	// Template describes the machines that will be created.
	Template MachineDeploymentSpecTemplateInput `pulumi:"template"`
}

func (MachineDeploymentSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpec)(nil)).Elem()
}

func (i MachineDeploymentSpecArgs) ToMachineDeploymentSpecOutput() MachineDeploymentSpecOutput {
	return i.ToMachineDeploymentSpecOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecArgs) ToMachineDeploymentSpecOutputWithContext(ctx context.Context) MachineDeploymentSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecOutput)
}

func (i MachineDeploymentSpecArgs) ToMachineDeploymentSpecPtrOutput() MachineDeploymentSpecPtrOutput {
	return i.ToMachineDeploymentSpecPtrOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecArgs) ToMachineDeploymentSpecPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecOutput).ToMachineDeploymentSpecPtrOutputWithContext(ctx)
}

// MachineDeploymentSpecPtrInput is an input type that accepts MachineDeploymentSpecArgs, MachineDeploymentSpecPtr and MachineDeploymentSpecPtrOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecPtrInput` via:
//
//	        MachineDeploymentSpecArgs{...}
//
//	or:
//
//	        nil
type MachineDeploymentSpecPtrInput interface {
	pulumi.Input

	ToMachineDeploymentSpecPtrOutput() MachineDeploymentSpecPtrOutput
	ToMachineDeploymentSpecPtrOutputWithContext(context.Context) MachineDeploymentSpecPtrOutput
}

type machineDeploymentSpecPtrType MachineDeploymentSpecArgs

func MachineDeploymentSpecPtr(v *MachineDeploymentSpecArgs) MachineDeploymentSpecPtrInput {
	return (*machineDeploymentSpecPtrType)(v)
}

func (*machineDeploymentSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpec)(nil)).Elem()
}

func (i *machineDeploymentSpecPtrType) ToMachineDeploymentSpecPtrOutput() MachineDeploymentSpecPtrOutput {
	return i.ToMachineDeploymentSpecPtrOutputWithContext(context.Background())
}

func (i *machineDeploymentSpecPtrType) ToMachineDeploymentSpecPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecPtrOutput)
}

// MachineDeploymentSpec defines the desired state of MachineDeployment.
type MachineDeploymentSpecOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpec)(nil)).Elem()
}

func (o MachineDeploymentSpecOutput) ToMachineDeploymentSpecOutput() MachineDeploymentSpecOutput {
	return o
}

func (o MachineDeploymentSpecOutput) ToMachineDeploymentSpecOutputWithContext(ctx context.Context) MachineDeploymentSpecOutput {
	return o
}

func (o MachineDeploymentSpecOutput) ToMachineDeploymentSpecPtrOutput() MachineDeploymentSpecPtrOutput {
	return o.ToMachineDeploymentSpecPtrOutputWithContext(context.Background())
}

func (o MachineDeploymentSpecOutput) ToMachineDeploymentSpecPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineDeploymentSpec) *MachineDeploymentSpec {
		return &v
	}).(MachineDeploymentSpecPtrOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachineDeploymentSpecOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v MachineDeploymentSpec) string { return v.ClusterName }).(pulumi.StringOutput)
}

// MinReadySeconds is the minimum number of seconds for which a Node for a newly created machine should be ready before considering the replica available. Defaults to 0 (machine will be considered available as soon as the Node is ready)
func (o MachineDeploymentSpecOutput) MinReadySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpec) *int { return v.MinReadySeconds }).(pulumi.IntPtrOutput)
}

// Indicates that the deployment is paused.
func (o MachineDeploymentSpecOutput) Paused() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpec) *bool { return v.Paused }).(pulumi.BoolPtrOutput)
}

// The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
func (o MachineDeploymentSpecOutput) ProgressDeadlineSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpec) *int { return v.ProgressDeadlineSeconds }).(pulumi.IntPtrOutput)
}

// Number of desired machines. This is a pointer to distinguish between explicit zero and not specified.
//
//	Defaults to: * if the Kubernetes autoscaler min size and max size annotations are set: - if it's a new MachineDeployment, use min size - if the replicas field of the old MachineDeployment is < min size, use min size - if the replicas field of the old MachineDeployment is > max size, use max size - if the replicas field of the old MachineDeployment is in the (min size, max size) range, keep the value from the oldMD * otherwise use 1 Note: Defaulting will be run whenever the replicas field is not set: * A new MachineDeployment is created with replicas not set. * On an existing MachineDeployment the replicas field was first set and is now unset. Those cases are especially relevant for the following Kubernetes autoscaler use cases: * A new MachineDeployment is created and replicas should be managed by the autoscaler * An existing MachineDeployment which initially wasn't controlled by the autoscaler should be later controlled by the autoscaler
func (o MachineDeploymentSpecOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpec) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// The number of old MachineSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
func (o MachineDeploymentSpecOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpec) *int { return v.RevisionHistoryLimit }).(pulumi.IntPtrOutput)
}

// RolloutAfter is a field to indicate a rollout should be performed after the specified time even if no changes have been made to the MachineDeployment. Example: In the YAML the time can be specified in the RFC3339 format. To specify the rolloutAfter target as March 9, 2023, at 9 am UTC use "2023-03-09T09:00:00Z".
func (o MachineDeploymentSpecOutput) RolloutAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpec) *string { return v.RolloutAfter }).(pulumi.StringPtrOutput)
}

// Label selector for machines. Existing MachineSets whose machines are selected by this will be the ones affected by this deployment. It must match the machine template's labels.
func (o MachineDeploymentSpecOutput) Selector() MachineDeploymentSpecSelectorOutput {
	return o.ApplyT(func(v MachineDeploymentSpec) MachineDeploymentSpecSelector { return v.Selector }).(MachineDeploymentSpecSelectorOutput)
}

// The deployment strategy to use to replace existing machines with new ones.
func (o MachineDeploymentSpecOutput) Strategy() MachineDeploymentSpecStrategyPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpec) *MachineDeploymentSpecStrategy { return v.Strategy }).(MachineDeploymentSpecStrategyPtrOutput)
}

// Template describes the machines that will be created.
func (o MachineDeploymentSpecOutput) Template() MachineDeploymentSpecTemplateOutput {
	return o.ApplyT(func(v MachineDeploymentSpec) MachineDeploymentSpecTemplate { return v.Template }).(MachineDeploymentSpecTemplateOutput)
}

type MachineDeploymentSpecPtrOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpec)(nil)).Elem()
}

func (o MachineDeploymentSpecPtrOutput) ToMachineDeploymentSpecPtrOutput() MachineDeploymentSpecPtrOutput {
	return o
}

func (o MachineDeploymentSpecPtrOutput) ToMachineDeploymentSpecPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecPtrOutput {
	return o
}

func (o MachineDeploymentSpecPtrOutput) Elem() MachineDeploymentSpecOutput {
	return o.ApplyT(func(v *MachineDeploymentSpec) MachineDeploymentSpec {
		if v != nil {
			return *v
		}
		var ret MachineDeploymentSpec
		return ret
	}).(MachineDeploymentSpecOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachineDeploymentSpecPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// MinReadySeconds is the minimum number of seconds for which a Node for a newly created machine should be ready before considering the replica available. Defaults to 0 (machine will be considered available as soon as the Node is ready)
func (o MachineDeploymentSpecPtrOutput) MinReadySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpec) *int {
		if v == nil {
			return nil
		}
		return v.MinReadySeconds
	}).(pulumi.IntPtrOutput)
}

// Indicates that the deployment is paused.
func (o MachineDeploymentSpecPtrOutput) Paused() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Paused
	}).(pulumi.BoolPtrOutput)
}

// The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
func (o MachineDeploymentSpecPtrOutput) ProgressDeadlineSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpec) *int {
		if v == nil {
			return nil
		}
		return v.ProgressDeadlineSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of desired machines. This is a pointer to distinguish between explicit zero and not specified.
//
//	Defaults to: * if the Kubernetes autoscaler min size and max size annotations are set: - if it's a new MachineDeployment, use min size - if the replicas field of the old MachineDeployment is < min size, use min size - if the replicas field of the old MachineDeployment is > max size, use max size - if the replicas field of the old MachineDeployment is in the (min size, max size) range, keep the value from the oldMD * otherwise use 1 Note: Defaulting will be run whenever the replicas field is not set: * A new MachineDeployment is created with replicas not set. * On an existing MachineDeployment the replicas field was first set and is now unset. Those cases are especially relevant for the following Kubernetes autoscaler use cases: * A new MachineDeployment is created and replicas should be managed by the autoscaler * An existing MachineDeployment which initially wasn't controlled by the autoscaler should be later controlled by the autoscaler
func (o MachineDeploymentSpecPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpec) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// The number of old MachineSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
func (o MachineDeploymentSpecPtrOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpec) *int {
		if v == nil {
			return nil
		}
		return v.RevisionHistoryLimit
	}).(pulumi.IntPtrOutput)
}

// RolloutAfter is a field to indicate a rollout should be performed after the specified time even if no changes have been made to the MachineDeployment. Example: In the YAML the time can be specified in the RFC3339 format. To specify the rolloutAfter target as March 9, 2023, at 9 am UTC use "2023-03-09T09:00:00Z".
func (o MachineDeploymentSpecPtrOutput) RolloutAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpec) *string {
		if v == nil {
			return nil
		}
		return v.RolloutAfter
	}).(pulumi.StringPtrOutput)
}

// Label selector for machines. Existing MachineSets whose machines are selected by this will be the ones affected by this deployment. It must match the machine template's labels.
func (o MachineDeploymentSpecPtrOutput) Selector() MachineDeploymentSpecSelectorPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpec) *MachineDeploymentSpecSelector {
		if v == nil {
			return nil
		}
		return &v.Selector
	}).(MachineDeploymentSpecSelectorPtrOutput)
}

// The deployment strategy to use to replace existing machines with new ones.
func (o MachineDeploymentSpecPtrOutput) Strategy() MachineDeploymentSpecStrategyPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpec) *MachineDeploymentSpecStrategy {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(MachineDeploymentSpecStrategyPtrOutput)
}

// Template describes the machines that will be created.
func (o MachineDeploymentSpecPtrOutput) Template() MachineDeploymentSpecTemplatePtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpec) *MachineDeploymentSpecTemplate {
		if v == nil {
			return nil
		}
		return &v.Template
	}).(MachineDeploymentSpecTemplatePtrOutput)
}

// Label selector for machines. Existing MachineSets whose machines are selected by this will be the ones affected by this deployment. It must match the machine template's labels.
type MachineDeploymentSpecSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []MachineDeploymentSpecSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// MachineDeploymentSpecSelectorInput is an input type that accepts MachineDeploymentSpecSelectorArgs and MachineDeploymentSpecSelectorOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecSelectorInput` via:
//
//	MachineDeploymentSpecSelectorArgs{...}
type MachineDeploymentSpecSelectorInput interface {
	pulumi.Input

	ToMachineDeploymentSpecSelectorOutput() MachineDeploymentSpecSelectorOutput
	ToMachineDeploymentSpecSelectorOutputWithContext(context.Context) MachineDeploymentSpecSelectorOutput
}

// Label selector for machines. Existing MachineSets whose machines are selected by this will be the ones affected by this deployment. It must match the machine template's labels.
type MachineDeploymentSpecSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions MachineDeploymentSpecSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (MachineDeploymentSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecSelector)(nil)).Elem()
}

func (i MachineDeploymentSpecSelectorArgs) ToMachineDeploymentSpecSelectorOutput() MachineDeploymentSpecSelectorOutput {
	return i.ToMachineDeploymentSpecSelectorOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecSelectorArgs) ToMachineDeploymentSpecSelectorOutputWithContext(ctx context.Context) MachineDeploymentSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecSelectorOutput)
}

func (i MachineDeploymentSpecSelectorArgs) ToMachineDeploymentSpecSelectorPtrOutput() MachineDeploymentSpecSelectorPtrOutput {
	return i.ToMachineDeploymentSpecSelectorPtrOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecSelectorArgs) ToMachineDeploymentSpecSelectorPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecSelectorOutput).ToMachineDeploymentSpecSelectorPtrOutputWithContext(ctx)
}

// MachineDeploymentSpecSelectorPtrInput is an input type that accepts MachineDeploymentSpecSelectorArgs, MachineDeploymentSpecSelectorPtr and MachineDeploymentSpecSelectorPtrOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecSelectorPtrInput` via:
//
//	        MachineDeploymentSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type MachineDeploymentSpecSelectorPtrInput interface {
	pulumi.Input

	ToMachineDeploymentSpecSelectorPtrOutput() MachineDeploymentSpecSelectorPtrOutput
	ToMachineDeploymentSpecSelectorPtrOutputWithContext(context.Context) MachineDeploymentSpecSelectorPtrOutput
}

type machineDeploymentSpecSelectorPtrType MachineDeploymentSpecSelectorArgs

func MachineDeploymentSpecSelectorPtr(v *MachineDeploymentSpecSelectorArgs) MachineDeploymentSpecSelectorPtrInput {
	return (*machineDeploymentSpecSelectorPtrType)(v)
}

func (*machineDeploymentSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecSelector)(nil)).Elem()
}

func (i *machineDeploymentSpecSelectorPtrType) ToMachineDeploymentSpecSelectorPtrOutput() MachineDeploymentSpecSelectorPtrOutput {
	return i.ToMachineDeploymentSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *machineDeploymentSpecSelectorPtrType) ToMachineDeploymentSpecSelectorPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecSelectorPtrOutput)
}

// Label selector for machines. Existing MachineSets whose machines are selected by this will be the ones affected by this deployment. It must match the machine template's labels.
type MachineDeploymentSpecSelectorOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecSelector)(nil)).Elem()
}

func (o MachineDeploymentSpecSelectorOutput) ToMachineDeploymentSpecSelectorOutput() MachineDeploymentSpecSelectorOutput {
	return o
}

func (o MachineDeploymentSpecSelectorOutput) ToMachineDeploymentSpecSelectorOutputWithContext(ctx context.Context) MachineDeploymentSpecSelectorOutput {
	return o
}

func (o MachineDeploymentSpecSelectorOutput) ToMachineDeploymentSpecSelectorPtrOutput() MachineDeploymentSpecSelectorPtrOutput {
	return o.ToMachineDeploymentSpecSelectorPtrOutputWithContext(context.Background())
}

func (o MachineDeploymentSpecSelectorOutput) ToMachineDeploymentSpecSelectorPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineDeploymentSpecSelector) *MachineDeploymentSpecSelector {
		return &v
	}).(MachineDeploymentSpecSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o MachineDeploymentSpecSelectorOutput) MatchExpressions() MachineDeploymentSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v MachineDeploymentSpecSelector) []MachineDeploymentSpecSelectorMatchExpressions {
		return v.MatchExpressions
	}).(MachineDeploymentSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o MachineDeploymentSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachineDeploymentSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type MachineDeploymentSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecSelector)(nil)).Elem()
}

func (o MachineDeploymentSpecSelectorPtrOutput) ToMachineDeploymentSpecSelectorPtrOutput() MachineDeploymentSpecSelectorPtrOutput {
	return o
}

func (o MachineDeploymentSpecSelectorPtrOutput) ToMachineDeploymentSpecSelectorPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecSelectorPtrOutput {
	return o
}

func (o MachineDeploymentSpecSelectorPtrOutput) Elem() MachineDeploymentSpecSelectorOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecSelector) MachineDeploymentSpecSelector {
		if v != nil {
			return *v
		}
		var ret MachineDeploymentSpecSelector
		return ret
	}).(MachineDeploymentSpecSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o MachineDeploymentSpecSelectorPtrOutput) MatchExpressions() MachineDeploymentSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecSelector) []MachineDeploymentSpecSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(MachineDeploymentSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o MachineDeploymentSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type MachineDeploymentSpecSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// MachineDeploymentSpecSelectorMatchExpressionsInput is an input type that accepts MachineDeploymentSpecSelectorMatchExpressionsArgs and MachineDeploymentSpecSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecSelectorMatchExpressionsInput` via:
//
//	MachineDeploymentSpecSelectorMatchExpressionsArgs{...}
type MachineDeploymentSpecSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToMachineDeploymentSpecSelectorMatchExpressionsOutput() MachineDeploymentSpecSelectorMatchExpressionsOutput
	ToMachineDeploymentSpecSelectorMatchExpressionsOutputWithContext(context.Context) MachineDeploymentSpecSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type MachineDeploymentSpecSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (MachineDeploymentSpecSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i MachineDeploymentSpecSelectorMatchExpressionsArgs) ToMachineDeploymentSpecSelectorMatchExpressionsOutput() MachineDeploymentSpecSelectorMatchExpressionsOutput {
	return i.ToMachineDeploymentSpecSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecSelectorMatchExpressionsArgs) ToMachineDeploymentSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) MachineDeploymentSpecSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecSelectorMatchExpressionsOutput)
}

// MachineDeploymentSpecSelectorMatchExpressionsArrayInput is an input type that accepts MachineDeploymentSpecSelectorMatchExpressionsArray and MachineDeploymentSpecSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecSelectorMatchExpressionsArrayInput` via:
//
//	MachineDeploymentSpecSelectorMatchExpressionsArray{ MachineDeploymentSpecSelectorMatchExpressionsArgs{...} }
type MachineDeploymentSpecSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToMachineDeploymentSpecSelectorMatchExpressionsArrayOutput() MachineDeploymentSpecSelectorMatchExpressionsArrayOutput
	ToMachineDeploymentSpecSelectorMatchExpressionsArrayOutputWithContext(context.Context) MachineDeploymentSpecSelectorMatchExpressionsArrayOutput
}

type MachineDeploymentSpecSelectorMatchExpressionsArray []MachineDeploymentSpecSelectorMatchExpressionsInput

func (MachineDeploymentSpecSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineDeploymentSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i MachineDeploymentSpecSelectorMatchExpressionsArray) ToMachineDeploymentSpecSelectorMatchExpressionsArrayOutput() MachineDeploymentSpecSelectorMatchExpressionsArrayOutput {
	return i.ToMachineDeploymentSpecSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecSelectorMatchExpressionsArray) ToMachineDeploymentSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) MachineDeploymentSpecSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type MachineDeploymentSpecSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o MachineDeploymentSpecSelectorMatchExpressionsOutput) ToMachineDeploymentSpecSelectorMatchExpressionsOutput() MachineDeploymentSpecSelectorMatchExpressionsOutput {
	return o
}

func (o MachineDeploymentSpecSelectorMatchExpressionsOutput) ToMachineDeploymentSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) MachineDeploymentSpecSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o MachineDeploymentSpecSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v MachineDeploymentSpecSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o MachineDeploymentSpecSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MachineDeploymentSpecSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o MachineDeploymentSpecSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MachineDeploymentSpecSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type MachineDeploymentSpecSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineDeploymentSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o MachineDeploymentSpecSelectorMatchExpressionsArrayOutput) ToMachineDeploymentSpecSelectorMatchExpressionsArrayOutput() MachineDeploymentSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o MachineDeploymentSpecSelectorMatchExpressionsArrayOutput) ToMachineDeploymentSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) MachineDeploymentSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o MachineDeploymentSpecSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) MachineDeploymentSpecSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineDeploymentSpecSelectorMatchExpressions {
		return vs[0].([]MachineDeploymentSpecSelectorMatchExpressions)[vs[1].(int)]
	}).(MachineDeploymentSpecSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type MachineDeploymentSpecSelectorMatchLabels struct {
}

// The deployment strategy to use to replace existing machines with new ones.
type MachineDeploymentSpecStrategy struct {
	// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
	RollingUpdate *MachineDeploymentSpecStrategyRollingUpdate `pulumi:"rollingUpdate"`
	// Type of deployment. Default is RollingUpdate.
	Type *string `pulumi:"type"`
}

// MachineDeploymentSpecStrategyInput is an input type that accepts MachineDeploymentSpecStrategyArgs and MachineDeploymentSpecStrategyOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecStrategyInput` via:
//
//	MachineDeploymentSpecStrategyArgs{...}
type MachineDeploymentSpecStrategyInput interface {
	pulumi.Input

	ToMachineDeploymentSpecStrategyOutput() MachineDeploymentSpecStrategyOutput
	ToMachineDeploymentSpecStrategyOutputWithContext(context.Context) MachineDeploymentSpecStrategyOutput
}

// The deployment strategy to use to replace existing machines with new ones.
type MachineDeploymentSpecStrategyArgs struct {
	// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
	RollingUpdate MachineDeploymentSpecStrategyRollingUpdatePtrInput `pulumi:"rollingUpdate"`
	// Type of deployment. Default is RollingUpdate.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (MachineDeploymentSpecStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecStrategy)(nil)).Elem()
}

func (i MachineDeploymentSpecStrategyArgs) ToMachineDeploymentSpecStrategyOutput() MachineDeploymentSpecStrategyOutput {
	return i.ToMachineDeploymentSpecStrategyOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecStrategyArgs) ToMachineDeploymentSpecStrategyOutputWithContext(ctx context.Context) MachineDeploymentSpecStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecStrategyOutput)
}

func (i MachineDeploymentSpecStrategyArgs) ToMachineDeploymentSpecStrategyPtrOutput() MachineDeploymentSpecStrategyPtrOutput {
	return i.ToMachineDeploymentSpecStrategyPtrOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecStrategyArgs) ToMachineDeploymentSpecStrategyPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecStrategyOutput).ToMachineDeploymentSpecStrategyPtrOutputWithContext(ctx)
}

// MachineDeploymentSpecStrategyPtrInput is an input type that accepts MachineDeploymentSpecStrategyArgs, MachineDeploymentSpecStrategyPtr and MachineDeploymentSpecStrategyPtrOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecStrategyPtrInput` via:
//
//	        MachineDeploymentSpecStrategyArgs{...}
//
//	or:
//
//	        nil
type MachineDeploymentSpecStrategyPtrInput interface {
	pulumi.Input

	ToMachineDeploymentSpecStrategyPtrOutput() MachineDeploymentSpecStrategyPtrOutput
	ToMachineDeploymentSpecStrategyPtrOutputWithContext(context.Context) MachineDeploymentSpecStrategyPtrOutput
}

type machineDeploymentSpecStrategyPtrType MachineDeploymentSpecStrategyArgs

func MachineDeploymentSpecStrategyPtr(v *MachineDeploymentSpecStrategyArgs) MachineDeploymentSpecStrategyPtrInput {
	return (*machineDeploymentSpecStrategyPtrType)(v)
}

func (*machineDeploymentSpecStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecStrategy)(nil)).Elem()
}

func (i *machineDeploymentSpecStrategyPtrType) ToMachineDeploymentSpecStrategyPtrOutput() MachineDeploymentSpecStrategyPtrOutput {
	return i.ToMachineDeploymentSpecStrategyPtrOutputWithContext(context.Background())
}

func (i *machineDeploymentSpecStrategyPtrType) ToMachineDeploymentSpecStrategyPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecStrategyPtrOutput)
}

// The deployment strategy to use to replace existing machines with new ones.
type MachineDeploymentSpecStrategyOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecStrategy)(nil)).Elem()
}

func (o MachineDeploymentSpecStrategyOutput) ToMachineDeploymentSpecStrategyOutput() MachineDeploymentSpecStrategyOutput {
	return o
}

func (o MachineDeploymentSpecStrategyOutput) ToMachineDeploymentSpecStrategyOutputWithContext(ctx context.Context) MachineDeploymentSpecStrategyOutput {
	return o
}

func (o MachineDeploymentSpecStrategyOutput) ToMachineDeploymentSpecStrategyPtrOutput() MachineDeploymentSpecStrategyPtrOutput {
	return o.ToMachineDeploymentSpecStrategyPtrOutputWithContext(context.Background())
}

func (o MachineDeploymentSpecStrategyOutput) ToMachineDeploymentSpecStrategyPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineDeploymentSpecStrategy) *MachineDeploymentSpecStrategy {
		return &v
	}).(MachineDeploymentSpecStrategyPtrOutput)
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
func (o MachineDeploymentSpecStrategyOutput) RollingUpdate() MachineDeploymentSpecStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecStrategy) *MachineDeploymentSpecStrategyRollingUpdate {
		return v.RollingUpdate
	}).(MachineDeploymentSpecStrategyRollingUpdatePtrOutput)
}

// Type of deployment. Default is RollingUpdate.
func (o MachineDeploymentSpecStrategyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecStrategy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type MachineDeploymentSpecStrategyPtrOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecStrategy)(nil)).Elem()
}

func (o MachineDeploymentSpecStrategyPtrOutput) ToMachineDeploymentSpecStrategyPtrOutput() MachineDeploymentSpecStrategyPtrOutput {
	return o
}

func (o MachineDeploymentSpecStrategyPtrOutput) ToMachineDeploymentSpecStrategyPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecStrategyPtrOutput {
	return o
}

func (o MachineDeploymentSpecStrategyPtrOutput) Elem() MachineDeploymentSpecStrategyOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecStrategy) MachineDeploymentSpecStrategy {
		if v != nil {
			return *v
		}
		var ret MachineDeploymentSpecStrategy
		return ret
	}).(MachineDeploymentSpecStrategyOutput)
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
func (o MachineDeploymentSpecStrategyPtrOutput) RollingUpdate() MachineDeploymentSpecStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecStrategy) *MachineDeploymentSpecStrategyRollingUpdate {
		if v == nil {
			return nil
		}
		return v.RollingUpdate
	}).(MachineDeploymentSpecStrategyRollingUpdatePtrOutput)
}

// Type of deployment. Default is RollingUpdate.
func (o MachineDeploymentSpecStrategyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
type MachineDeploymentSpecStrategyRollingUpdate struct {
	// DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are "Random, "Newest", "Oldest" When no value is supplied, the default DeletePolicy of MachineSet is used
	DeletePolicy *string `pulumi:"deletePolicy"`
	// The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.
	MaxSurge interface{} `pulumi:"maxSurge"`
	// The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.
	MaxUnavailable interface{} `pulumi:"maxUnavailable"`
}

// MachineDeploymentSpecStrategyRollingUpdateInput is an input type that accepts MachineDeploymentSpecStrategyRollingUpdateArgs and MachineDeploymentSpecStrategyRollingUpdateOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecStrategyRollingUpdateInput` via:
//
//	MachineDeploymentSpecStrategyRollingUpdateArgs{...}
type MachineDeploymentSpecStrategyRollingUpdateInput interface {
	pulumi.Input

	ToMachineDeploymentSpecStrategyRollingUpdateOutput() MachineDeploymentSpecStrategyRollingUpdateOutput
	ToMachineDeploymentSpecStrategyRollingUpdateOutputWithContext(context.Context) MachineDeploymentSpecStrategyRollingUpdateOutput
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
type MachineDeploymentSpecStrategyRollingUpdateArgs struct {
	// DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are "Random, "Newest", "Oldest" When no value is supplied, the default DeletePolicy of MachineSet is used
	DeletePolicy pulumi.StringPtrInput `pulumi:"deletePolicy"`
	// The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.
	MaxSurge pulumi.Input `pulumi:"maxSurge"`
	// The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.
	MaxUnavailable pulumi.Input `pulumi:"maxUnavailable"`
}

func (MachineDeploymentSpecStrategyRollingUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecStrategyRollingUpdate)(nil)).Elem()
}

func (i MachineDeploymentSpecStrategyRollingUpdateArgs) ToMachineDeploymentSpecStrategyRollingUpdateOutput() MachineDeploymentSpecStrategyRollingUpdateOutput {
	return i.ToMachineDeploymentSpecStrategyRollingUpdateOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecStrategyRollingUpdateArgs) ToMachineDeploymentSpecStrategyRollingUpdateOutputWithContext(ctx context.Context) MachineDeploymentSpecStrategyRollingUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecStrategyRollingUpdateOutput)
}

func (i MachineDeploymentSpecStrategyRollingUpdateArgs) ToMachineDeploymentSpecStrategyRollingUpdatePtrOutput() MachineDeploymentSpecStrategyRollingUpdatePtrOutput {
	return i.ToMachineDeploymentSpecStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecStrategyRollingUpdateArgs) ToMachineDeploymentSpecStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) MachineDeploymentSpecStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecStrategyRollingUpdateOutput).ToMachineDeploymentSpecStrategyRollingUpdatePtrOutputWithContext(ctx)
}

// MachineDeploymentSpecStrategyRollingUpdatePtrInput is an input type that accepts MachineDeploymentSpecStrategyRollingUpdateArgs, MachineDeploymentSpecStrategyRollingUpdatePtr and MachineDeploymentSpecStrategyRollingUpdatePtrOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecStrategyRollingUpdatePtrInput` via:
//
//	        MachineDeploymentSpecStrategyRollingUpdateArgs{...}
//
//	or:
//
//	        nil
type MachineDeploymentSpecStrategyRollingUpdatePtrInput interface {
	pulumi.Input

	ToMachineDeploymentSpecStrategyRollingUpdatePtrOutput() MachineDeploymentSpecStrategyRollingUpdatePtrOutput
	ToMachineDeploymentSpecStrategyRollingUpdatePtrOutputWithContext(context.Context) MachineDeploymentSpecStrategyRollingUpdatePtrOutput
}

type machineDeploymentSpecStrategyRollingUpdatePtrType MachineDeploymentSpecStrategyRollingUpdateArgs

func MachineDeploymentSpecStrategyRollingUpdatePtr(v *MachineDeploymentSpecStrategyRollingUpdateArgs) MachineDeploymentSpecStrategyRollingUpdatePtrInput {
	return (*machineDeploymentSpecStrategyRollingUpdatePtrType)(v)
}

func (*machineDeploymentSpecStrategyRollingUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecStrategyRollingUpdate)(nil)).Elem()
}

func (i *machineDeploymentSpecStrategyRollingUpdatePtrType) ToMachineDeploymentSpecStrategyRollingUpdatePtrOutput() MachineDeploymentSpecStrategyRollingUpdatePtrOutput {
	return i.ToMachineDeploymentSpecStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i *machineDeploymentSpecStrategyRollingUpdatePtrType) ToMachineDeploymentSpecStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) MachineDeploymentSpecStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecStrategyRollingUpdatePtrOutput)
}

// Rolling update config params. Present only if MachineDeploymentStrategyType = RollingUpdate.
type MachineDeploymentSpecStrategyRollingUpdateOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecStrategyRollingUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecStrategyRollingUpdate)(nil)).Elem()
}

func (o MachineDeploymentSpecStrategyRollingUpdateOutput) ToMachineDeploymentSpecStrategyRollingUpdateOutput() MachineDeploymentSpecStrategyRollingUpdateOutput {
	return o
}

func (o MachineDeploymentSpecStrategyRollingUpdateOutput) ToMachineDeploymentSpecStrategyRollingUpdateOutputWithContext(ctx context.Context) MachineDeploymentSpecStrategyRollingUpdateOutput {
	return o
}

func (o MachineDeploymentSpecStrategyRollingUpdateOutput) ToMachineDeploymentSpecStrategyRollingUpdatePtrOutput() MachineDeploymentSpecStrategyRollingUpdatePtrOutput {
	return o.ToMachineDeploymentSpecStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (o MachineDeploymentSpecStrategyRollingUpdateOutput) ToMachineDeploymentSpecStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) MachineDeploymentSpecStrategyRollingUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineDeploymentSpecStrategyRollingUpdate) *MachineDeploymentSpecStrategyRollingUpdate {
		return &v
	}).(MachineDeploymentSpecStrategyRollingUpdatePtrOutput)
}

// DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are "Random, "Newest", "Oldest" When no value is supplied, the default DeletePolicy of MachineSet is used
func (o MachineDeploymentSpecStrategyRollingUpdateOutput) DeletePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecStrategyRollingUpdate) *string { return v.DeletePolicy }).(pulumi.StringPtrOutput)
}

// The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.
func (o MachineDeploymentSpecStrategyRollingUpdateOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v MachineDeploymentSpecStrategyRollingUpdate) interface{} { return v.MaxSurge }).(pulumi.AnyOutput)
}

// The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.
func (o MachineDeploymentSpecStrategyRollingUpdateOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v MachineDeploymentSpecStrategyRollingUpdate) interface{} { return v.MaxUnavailable }).(pulumi.AnyOutput)
}

type MachineDeploymentSpecStrategyRollingUpdatePtrOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecStrategyRollingUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecStrategyRollingUpdate)(nil)).Elem()
}

func (o MachineDeploymentSpecStrategyRollingUpdatePtrOutput) ToMachineDeploymentSpecStrategyRollingUpdatePtrOutput() MachineDeploymentSpecStrategyRollingUpdatePtrOutput {
	return o
}

func (o MachineDeploymentSpecStrategyRollingUpdatePtrOutput) ToMachineDeploymentSpecStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) MachineDeploymentSpecStrategyRollingUpdatePtrOutput {
	return o
}

func (o MachineDeploymentSpecStrategyRollingUpdatePtrOutput) Elem() MachineDeploymentSpecStrategyRollingUpdateOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecStrategyRollingUpdate) MachineDeploymentSpecStrategyRollingUpdate {
		if v != nil {
			return *v
		}
		var ret MachineDeploymentSpecStrategyRollingUpdate
		return ret
	}).(MachineDeploymentSpecStrategyRollingUpdateOutput)
}

// DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling. Valid values are "Random, "Newest", "Oldest" When no value is supplied, the default DeletePolicy of MachineSet is used
func (o MachineDeploymentSpecStrategyRollingUpdatePtrOutput) DeletePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecStrategyRollingUpdate) *string {
		if v == nil {
			return nil
		}
		return v.DeletePolicy
	}).(pulumi.StringPtrOutput)
}

// The maximum number of machines that can be scheduled above the desired number of machines. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 1. Example: when this is set to 30%, the new MachineSet can be scaled up immediately when the rolling update starts, such that the total number of old and new machines do not exceed 130% of desired machines. Once old machines have been killed, new MachineSet can be scaled up further, ensuring that total number of machines running at any time during the update is at most 130% of desired machines.
func (o MachineDeploymentSpecStrategyRollingUpdatePtrOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.AnyOutput)
}

// The maximum number of machines that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired machines (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 0. Example: when this is set to 30%, the old MachineSet can be scaled down to 70% of desired machines immediately when the rolling update starts. Once new machines are ready, old MachineSet can be scaled down further, followed by scaling up the new MachineSet, ensuring that the total number of machines available at all times during the update is at least 70% of desired machines.
func (o MachineDeploymentSpecStrategyRollingUpdatePtrOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.AnyOutput)
}

// Template describes the machines that will be created.
type MachineDeploymentSpecTemplate struct {
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *MachineDeploymentSpecTemplateMetadata `pulumi:"metadata"`
	// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec *MachineDeploymentSpecTemplateSpec `pulumi:"spec"`
}

// MachineDeploymentSpecTemplateInput is an input type that accepts MachineDeploymentSpecTemplateArgs and MachineDeploymentSpecTemplateOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecTemplateInput` via:
//
//	MachineDeploymentSpecTemplateArgs{...}
type MachineDeploymentSpecTemplateInput interface {
	pulumi.Input

	ToMachineDeploymentSpecTemplateOutput() MachineDeploymentSpecTemplateOutput
	ToMachineDeploymentSpecTemplateOutputWithContext(context.Context) MachineDeploymentSpecTemplateOutput
}

// Template describes the machines that will be created.
type MachineDeploymentSpecTemplateArgs struct {
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata MachineDeploymentSpecTemplateMetadataPtrInput `pulumi:"metadata"`
	// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec MachineDeploymentSpecTemplateSpecPtrInput `pulumi:"spec"`
}

func (MachineDeploymentSpecTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecTemplate)(nil)).Elem()
}

func (i MachineDeploymentSpecTemplateArgs) ToMachineDeploymentSpecTemplateOutput() MachineDeploymentSpecTemplateOutput {
	return i.ToMachineDeploymentSpecTemplateOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecTemplateArgs) ToMachineDeploymentSpecTemplateOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateOutput)
}

func (i MachineDeploymentSpecTemplateArgs) ToMachineDeploymentSpecTemplatePtrOutput() MachineDeploymentSpecTemplatePtrOutput {
	return i.ToMachineDeploymentSpecTemplatePtrOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecTemplateArgs) ToMachineDeploymentSpecTemplatePtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateOutput).ToMachineDeploymentSpecTemplatePtrOutputWithContext(ctx)
}

// MachineDeploymentSpecTemplatePtrInput is an input type that accepts MachineDeploymentSpecTemplateArgs, MachineDeploymentSpecTemplatePtr and MachineDeploymentSpecTemplatePtrOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecTemplatePtrInput` via:
//
//	        MachineDeploymentSpecTemplateArgs{...}
//
//	or:
//
//	        nil
type MachineDeploymentSpecTemplatePtrInput interface {
	pulumi.Input

	ToMachineDeploymentSpecTemplatePtrOutput() MachineDeploymentSpecTemplatePtrOutput
	ToMachineDeploymentSpecTemplatePtrOutputWithContext(context.Context) MachineDeploymentSpecTemplatePtrOutput
}

type machineDeploymentSpecTemplatePtrType MachineDeploymentSpecTemplateArgs

func MachineDeploymentSpecTemplatePtr(v *MachineDeploymentSpecTemplateArgs) MachineDeploymentSpecTemplatePtrInput {
	return (*machineDeploymentSpecTemplatePtrType)(v)
}

func (*machineDeploymentSpecTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecTemplate)(nil)).Elem()
}

func (i *machineDeploymentSpecTemplatePtrType) ToMachineDeploymentSpecTemplatePtrOutput() MachineDeploymentSpecTemplatePtrOutput {
	return i.ToMachineDeploymentSpecTemplatePtrOutputWithContext(context.Background())
}

func (i *machineDeploymentSpecTemplatePtrType) ToMachineDeploymentSpecTemplatePtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplatePtrOutput)
}

// Template describes the machines that will be created.
type MachineDeploymentSpecTemplateOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecTemplate)(nil)).Elem()
}

func (o MachineDeploymentSpecTemplateOutput) ToMachineDeploymentSpecTemplateOutput() MachineDeploymentSpecTemplateOutput {
	return o
}

func (o MachineDeploymentSpecTemplateOutput) ToMachineDeploymentSpecTemplateOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateOutput {
	return o
}

func (o MachineDeploymentSpecTemplateOutput) ToMachineDeploymentSpecTemplatePtrOutput() MachineDeploymentSpecTemplatePtrOutput {
	return o.ToMachineDeploymentSpecTemplatePtrOutputWithContext(context.Background())
}

func (o MachineDeploymentSpecTemplateOutput) ToMachineDeploymentSpecTemplatePtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineDeploymentSpecTemplate) *MachineDeploymentSpecTemplate {
		return &v
	}).(MachineDeploymentSpecTemplatePtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o MachineDeploymentSpecTemplateOutput) Metadata() MachineDeploymentSpecTemplateMetadataPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplate) *MachineDeploymentSpecTemplateMetadata { return v.Metadata }).(MachineDeploymentSpecTemplateMetadataPtrOutput)
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
func (o MachineDeploymentSpecTemplateOutput) Spec() MachineDeploymentSpecTemplateSpecPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplate) *MachineDeploymentSpecTemplateSpec { return v.Spec }).(MachineDeploymentSpecTemplateSpecPtrOutput)
}

type MachineDeploymentSpecTemplatePtrOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecTemplate)(nil)).Elem()
}

func (o MachineDeploymentSpecTemplatePtrOutput) ToMachineDeploymentSpecTemplatePtrOutput() MachineDeploymentSpecTemplatePtrOutput {
	return o
}

func (o MachineDeploymentSpecTemplatePtrOutput) ToMachineDeploymentSpecTemplatePtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplatePtrOutput {
	return o
}

func (o MachineDeploymentSpecTemplatePtrOutput) Elem() MachineDeploymentSpecTemplateOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplate) MachineDeploymentSpecTemplate {
		if v != nil {
			return *v
		}
		var ret MachineDeploymentSpecTemplate
		return ret
	}).(MachineDeploymentSpecTemplateOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o MachineDeploymentSpecTemplatePtrOutput) Metadata() MachineDeploymentSpecTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplate) *MachineDeploymentSpecTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(MachineDeploymentSpecTemplateMetadataPtrOutput)
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
func (o MachineDeploymentSpecTemplatePtrOutput) Spec() MachineDeploymentSpecTemplateSpecPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplate) *MachineDeploymentSpecTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(MachineDeploymentSpecTemplateSpecPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type MachineDeploymentSpecTemplateMetadata struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations map[string]string `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels map[string]string `pulumi:"labels"`
}

// MachineDeploymentSpecTemplateMetadataInput is an input type that accepts MachineDeploymentSpecTemplateMetadataArgs and MachineDeploymentSpecTemplateMetadataOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecTemplateMetadataInput` via:
//
//	MachineDeploymentSpecTemplateMetadataArgs{...}
type MachineDeploymentSpecTemplateMetadataInput interface {
	pulumi.Input

	ToMachineDeploymentSpecTemplateMetadataOutput() MachineDeploymentSpecTemplateMetadataOutput
	ToMachineDeploymentSpecTemplateMetadataOutputWithContext(context.Context) MachineDeploymentSpecTemplateMetadataOutput
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type MachineDeploymentSpecTemplateMetadataArgs struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (MachineDeploymentSpecTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecTemplateMetadata)(nil)).Elem()
}

func (i MachineDeploymentSpecTemplateMetadataArgs) ToMachineDeploymentSpecTemplateMetadataOutput() MachineDeploymentSpecTemplateMetadataOutput {
	return i.ToMachineDeploymentSpecTemplateMetadataOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecTemplateMetadataArgs) ToMachineDeploymentSpecTemplateMetadataOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateMetadataOutput)
}

func (i MachineDeploymentSpecTemplateMetadataArgs) ToMachineDeploymentSpecTemplateMetadataPtrOutput() MachineDeploymentSpecTemplateMetadataPtrOutput {
	return i.ToMachineDeploymentSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecTemplateMetadataArgs) ToMachineDeploymentSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateMetadataOutput).ToMachineDeploymentSpecTemplateMetadataPtrOutputWithContext(ctx)
}

// MachineDeploymentSpecTemplateMetadataPtrInput is an input type that accepts MachineDeploymentSpecTemplateMetadataArgs, MachineDeploymentSpecTemplateMetadataPtr and MachineDeploymentSpecTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecTemplateMetadataPtrInput` via:
//
//	        MachineDeploymentSpecTemplateMetadataArgs{...}
//
//	or:
//
//	        nil
type MachineDeploymentSpecTemplateMetadataPtrInput interface {
	pulumi.Input

	ToMachineDeploymentSpecTemplateMetadataPtrOutput() MachineDeploymentSpecTemplateMetadataPtrOutput
	ToMachineDeploymentSpecTemplateMetadataPtrOutputWithContext(context.Context) MachineDeploymentSpecTemplateMetadataPtrOutput
}

type machineDeploymentSpecTemplateMetadataPtrType MachineDeploymentSpecTemplateMetadataArgs

func MachineDeploymentSpecTemplateMetadataPtr(v *MachineDeploymentSpecTemplateMetadataArgs) MachineDeploymentSpecTemplateMetadataPtrInput {
	return (*machineDeploymentSpecTemplateMetadataPtrType)(v)
}

func (*machineDeploymentSpecTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecTemplateMetadata)(nil)).Elem()
}

func (i *machineDeploymentSpecTemplateMetadataPtrType) ToMachineDeploymentSpecTemplateMetadataPtrOutput() MachineDeploymentSpecTemplateMetadataPtrOutput {
	return i.ToMachineDeploymentSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *machineDeploymentSpecTemplateMetadataPtrType) ToMachineDeploymentSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateMetadataPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type MachineDeploymentSpecTemplateMetadataOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecTemplateMetadata)(nil)).Elem()
}

func (o MachineDeploymentSpecTemplateMetadataOutput) ToMachineDeploymentSpecTemplateMetadataOutput() MachineDeploymentSpecTemplateMetadataOutput {
	return o
}

func (o MachineDeploymentSpecTemplateMetadataOutput) ToMachineDeploymentSpecTemplateMetadataOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateMetadataOutput {
	return o
}

func (o MachineDeploymentSpecTemplateMetadataOutput) ToMachineDeploymentSpecTemplateMetadataPtrOutput() MachineDeploymentSpecTemplateMetadataPtrOutput {
	return o.ToMachineDeploymentSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o MachineDeploymentSpecTemplateMetadataOutput) ToMachineDeploymentSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineDeploymentSpecTemplateMetadata) *MachineDeploymentSpecTemplateMetadata {
		return &v
	}).(MachineDeploymentSpecTemplateMetadataPtrOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o MachineDeploymentSpecTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o MachineDeploymentSpecTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type MachineDeploymentSpecTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecTemplateMetadata)(nil)).Elem()
}

func (o MachineDeploymentSpecTemplateMetadataPtrOutput) ToMachineDeploymentSpecTemplateMetadataPtrOutput() MachineDeploymentSpecTemplateMetadataPtrOutput {
	return o
}

func (o MachineDeploymentSpecTemplateMetadataPtrOutput) ToMachineDeploymentSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateMetadataPtrOutput {
	return o
}

func (o MachineDeploymentSpecTemplateMetadataPtrOutput) Elem() MachineDeploymentSpecTemplateMetadataOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateMetadata) MachineDeploymentSpecTemplateMetadata {
		if v != nil {
			return *v
		}
		var ret MachineDeploymentSpecTemplateMetadata
		return ret
	}).(MachineDeploymentSpecTemplateMetadataOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o MachineDeploymentSpecTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o MachineDeploymentSpecTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
type MachineDeploymentSpecTemplateMetadataAnnotations struct {
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
type MachineDeploymentSpecTemplateMetadataLabels struct {
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type MachineDeploymentSpecTemplateSpec struct {
	// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
	Bootstrap MachineDeploymentSpecTemplateSpecBootstrap `pulumi:"bootstrap"`
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName string `pulumi:"clusterName"`
	// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
	FailureDomain *string `pulumi:"failureDomain"`
	// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
	InfrastructureRef MachineDeploymentSpecTemplateSpecInfrastructureRef `pulumi:"infrastructureRef"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
	NodeDeletionTimeout *string `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
	NodeDrainTimeout *string `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
	NodeVolumeDetachTimeout *string `pulumi:"nodeVolumeDetachTimeout"`
	// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
	ProviderID *string `pulumi:"providerID"`
	// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
	Version *string `pulumi:"version"`
}

// MachineDeploymentSpecTemplateSpecInput is an input type that accepts MachineDeploymentSpecTemplateSpecArgs and MachineDeploymentSpecTemplateSpecOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecTemplateSpecInput` via:
//
//	MachineDeploymentSpecTemplateSpecArgs{...}
type MachineDeploymentSpecTemplateSpecInput interface {
	pulumi.Input

	ToMachineDeploymentSpecTemplateSpecOutput() MachineDeploymentSpecTemplateSpecOutput
	ToMachineDeploymentSpecTemplateSpecOutputWithContext(context.Context) MachineDeploymentSpecTemplateSpecOutput
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type MachineDeploymentSpecTemplateSpecArgs struct {
	// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
	Bootstrap MachineDeploymentSpecTemplateSpecBootstrapInput `pulumi:"bootstrap"`
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
	FailureDomain pulumi.StringPtrInput `pulumi:"failureDomain"`
	// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
	InfrastructureRef MachineDeploymentSpecTemplateSpecInfrastructureRefInput `pulumi:"infrastructureRef"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
	NodeDeletionTimeout pulumi.StringPtrInput `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
	NodeDrainTimeout pulumi.StringPtrInput `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
	NodeVolumeDetachTimeout pulumi.StringPtrInput `pulumi:"nodeVolumeDetachTimeout"`
	// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
	ProviderID pulumi.StringPtrInput `pulumi:"providerID"`
	// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (MachineDeploymentSpecTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecTemplateSpec)(nil)).Elem()
}

func (i MachineDeploymentSpecTemplateSpecArgs) ToMachineDeploymentSpecTemplateSpecOutput() MachineDeploymentSpecTemplateSpecOutput {
	return i.ToMachineDeploymentSpecTemplateSpecOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecTemplateSpecArgs) ToMachineDeploymentSpecTemplateSpecOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateSpecOutput)
}

func (i MachineDeploymentSpecTemplateSpecArgs) ToMachineDeploymentSpecTemplateSpecPtrOutput() MachineDeploymentSpecTemplateSpecPtrOutput {
	return i.ToMachineDeploymentSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecTemplateSpecArgs) ToMachineDeploymentSpecTemplateSpecPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateSpecOutput).ToMachineDeploymentSpecTemplateSpecPtrOutputWithContext(ctx)
}

// MachineDeploymentSpecTemplateSpecPtrInput is an input type that accepts MachineDeploymentSpecTemplateSpecArgs, MachineDeploymentSpecTemplateSpecPtr and MachineDeploymentSpecTemplateSpecPtrOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecTemplateSpecPtrInput` via:
//
//	        MachineDeploymentSpecTemplateSpecArgs{...}
//
//	or:
//
//	        nil
type MachineDeploymentSpecTemplateSpecPtrInput interface {
	pulumi.Input

	ToMachineDeploymentSpecTemplateSpecPtrOutput() MachineDeploymentSpecTemplateSpecPtrOutput
	ToMachineDeploymentSpecTemplateSpecPtrOutputWithContext(context.Context) MachineDeploymentSpecTemplateSpecPtrOutput
}

type machineDeploymentSpecTemplateSpecPtrType MachineDeploymentSpecTemplateSpecArgs

func MachineDeploymentSpecTemplateSpecPtr(v *MachineDeploymentSpecTemplateSpecArgs) MachineDeploymentSpecTemplateSpecPtrInput {
	return (*machineDeploymentSpecTemplateSpecPtrType)(v)
}

func (*machineDeploymentSpecTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecTemplateSpec)(nil)).Elem()
}

func (i *machineDeploymentSpecTemplateSpecPtrType) ToMachineDeploymentSpecTemplateSpecPtrOutput() MachineDeploymentSpecTemplateSpecPtrOutput {
	return i.ToMachineDeploymentSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *machineDeploymentSpecTemplateSpecPtrType) ToMachineDeploymentSpecTemplateSpecPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateSpecPtrOutput)
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type MachineDeploymentSpecTemplateSpecOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecTemplateSpec)(nil)).Elem()
}

func (o MachineDeploymentSpecTemplateSpecOutput) ToMachineDeploymentSpecTemplateSpecOutput() MachineDeploymentSpecTemplateSpecOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecOutput) ToMachineDeploymentSpecTemplateSpecOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecOutput) ToMachineDeploymentSpecTemplateSpecPtrOutput() MachineDeploymentSpecTemplateSpecPtrOutput {
	return o.ToMachineDeploymentSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (o MachineDeploymentSpecTemplateSpecOutput) ToMachineDeploymentSpecTemplateSpecPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineDeploymentSpecTemplateSpec) *MachineDeploymentSpecTemplateSpec {
		return &v
	}).(MachineDeploymentSpecTemplateSpecPtrOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
func (o MachineDeploymentSpecTemplateSpecOutput) Bootstrap() MachineDeploymentSpecTemplateSpecBootstrapOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpec) MachineDeploymentSpecTemplateSpecBootstrap {
		return v.Bootstrap
	}).(MachineDeploymentSpecTemplateSpecBootstrapOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachineDeploymentSpecTemplateSpecOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpec) string { return v.ClusterName }).(pulumi.StringOutput)
}

// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
func (o MachineDeploymentSpecTemplateSpecOutput) FailureDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpec) *string { return v.FailureDomain }).(pulumi.StringPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
func (o MachineDeploymentSpecTemplateSpecOutput) InfrastructureRef() MachineDeploymentSpecTemplateSpecInfrastructureRefOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpec) MachineDeploymentSpecTemplateSpecInfrastructureRef {
		return v.InfrastructureRef
	}).(MachineDeploymentSpecTemplateSpecInfrastructureRefOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
func (o MachineDeploymentSpecTemplateSpecOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpec) *string { return v.NodeDeletionTimeout }).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
func (o MachineDeploymentSpecTemplateSpecOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpec) *string { return v.NodeDrainTimeout }).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
func (o MachineDeploymentSpecTemplateSpecOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpec) *string { return v.NodeVolumeDetachTimeout }).(pulumi.StringPtrOutput)
}

// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
func (o MachineDeploymentSpecTemplateSpecOutput) ProviderID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpec) *string { return v.ProviderID }).(pulumi.StringPtrOutput)
}

// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
func (o MachineDeploymentSpecTemplateSpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MachineDeploymentSpecTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecTemplateSpec)(nil)).Elem()
}

func (o MachineDeploymentSpecTemplateSpecPtrOutput) ToMachineDeploymentSpecTemplateSpecPtrOutput() MachineDeploymentSpecTemplateSpecPtrOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecPtrOutput) ToMachineDeploymentSpecTemplateSpecPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecPtrOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecPtrOutput) Elem() MachineDeploymentSpecTemplateSpecOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpec) MachineDeploymentSpecTemplateSpec {
		if v != nil {
			return *v
		}
		var ret MachineDeploymentSpecTemplateSpec
		return ret
	}).(MachineDeploymentSpecTemplateSpecOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
func (o MachineDeploymentSpecTemplateSpecPtrOutput) Bootstrap() MachineDeploymentSpecTemplateSpecBootstrapPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpec) *MachineDeploymentSpecTemplateSpecBootstrap {
		if v == nil {
			return nil
		}
		return &v.Bootstrap
	}).(MachineDeploymentSpecTemplateSpecBootstrapPtrOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachineDeploymentSpecTemplateSpecPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
func (o MachineDeploymentSpecTemplateSpecPtrOutput) FailureDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.FailureDomain
	}).(pulumi.StringPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
func (o MachineDeploymentSpecTemplateSpecPtrOutput) InfrastructureRef() MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpec) *MachineDeploymentSpecTemplateSpecInfrastructureRef {
		if v == nil {
			return nil
		}
		return &v.InfrastructureRef
	}).(MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
func (o MachineDeploymentSpecTemplateSpecPtrOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.NodeDeletionTimeout
	}).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
func (o MachineDeploymentSpecTemplateSpecPtrOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.NodeDrainTimeout
	}).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
func (o MachineDeploymentSpecTemplateSpecPtrOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.NodeVolumeDetachTimeout
	}).(pulumi.StringPtrOutput)
}

// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
func (o MachineDeploymentSpecTemplateSpecPtrOutput) ProviderID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.ProviderID
	}).(pulumi.StringPtrOutput)
}

// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
func (o MachineDeploymentSpecTemplateSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
type MachineDeploymentSpecTemplateSpecBootstrap struct {
	// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
	ConfigRef *MachineDeploymentSpecTemplateSpecBootstrapConfigRef `pulumi:"configRef"`
	// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
	DataSecretName *string `pulumi:"dataSecretName"`
}

// MachineDeploymentSpecTemplateSpecBootstrapInput is an input type that accepts MachineDeploymentSpecTemplateSpecBootstrapArgs and MachineDeploymentSpecTemplateSpecBootstrapOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecTemplateSpecBootstrapInput` via:
//
//	MachineDeploymentSpecTemplateSpecBootstrapArgs{...}
type MachineDeploymentSpecTemplateSpecBootstrapInput interface {
	pulumi.Input

	ToMachineDeploymentSpecTemplateSpecBootstrapOutput() MachineDeploymentSpecTemplateSpecBootstrapOutput
	ToMachineDeploymentSpecTemplateSpecBootstrapOutputWithContext(context.Context) MachineDeploymentSpecTemplateSpecBootstrapOutput
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
type MachineDeploymentSpecTemplateSpecBootstrapArgs struct {
	// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
	ConfigRef MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrInput `pulumi:"configRef"`
	// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
	DataSecretName pulumi.StringPtrInput `pulumi:"dataSecretName"`
}

func (MachineDeploymentSpecTemplateSpecBootstrapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecTemplateSpecBootstrap)(nil)).Elem()
}

func (i MachineDeploymentSpecTemplateSpecBootstrapArgs) ToMachineDeploymentSpecTemplateSpecBootstrapOutput() MachineDeploymentSpecTemplateSpecBootstrapOutput {
	return i.ToMachineDeploymentSpecTemplateSpecBootstrapOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecTemplateSpecBootstrapArgs) ToMachineDeploymentSpecTemplateSpecBootstrapOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecBootstrapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateSpecBootstrapOutput)
}

func (i MachineDeploymentSpecTemplateSpecBootstrapArgs) ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutput() MachineDeploymentSpecTemplateSpecBootstrapPtrOutput {
	return i.ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecTemplateSpecBootstrapArgs) ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecBootstrapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateSpecBootstrapOutput).ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutputWithContext(ctx)
}

// MachineDeploymentSpecTemplateSpecBootstrapPtrInput is an input type that accepts MachineDeploymentSpecTemplateSpecBootstrapArgs, MachineDeploymentSpecTemplateSpecBootstrapPtr and MachineDeploymentSpecTemplateSpecBootstrapPtrOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecTemplateSpecBootstrapPtrInput` via:
//
//	        MachineDeploymentSpecTemplateSpecBootstrapArgs{...}
//
//	or:
//
//	        nil
type MachineDeploymentSpecTemplateSpecBootstrapPtrInput interface {
	pulumi.Input

	ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutput() MachineDeploymentSpecTemplateSpecBootstrapPtrOutput
	ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutputWithContext(context.Context) MachineDeploymentSpecTemplateSpecBootstrapPtrOutput
}

type machineDeploymentSpecTemplateSpecBootstrapPtrType MachineDeploymentSpecTemplateSpecBootstrapArgs

func MachineDeploymentSpecTemplateSpecBootstrapPtr(v *MachineDeploymentSpecTemplateSpecBootstrapArgs) MachineDeploymentSpecTemplateSpecBootstrapPtrInput {
	return (*machineDeploymentSpecTemplateSpecBootstrapPtrType)(v)
}

func (*machineDeploymentSpecTemplateSpecBootstrapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecTemplateSpecBootstrap)(nil)).Elem()
}

func (i *machineDeploymentSpecTemplateSpecBootstrapPtrType) ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutput() MachineDeploymentSpecTemplateSpecBootstrapPtrOutput {
	return i.ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutputWithContext(context.Background())
}

func (i *machineDeploymentSpecTemplateSpecBootstrapPtrType) ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecBootstrapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateSpecBootstrapPtrOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
type MachineDeploymentSpecTemplateSpecBootstrapOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecTemplateSpecBootstrapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecTemplateSpecBootstrap)(nil)).Elem()
}

func (o MachineDeploymentSpecTemplateSpecBootstrapOutput) ToMachineDeploymentSpecTemplateSpecBootstrapOutput() MachineDeploymentSpecTemplateSpecBootstrapOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecBootstrapOutput) ToMachineDeploymentSpecTemplateSpecBootstrapOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecBootstrapOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecBootstrapOutput) ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutput() MachineDeploymentSpecTemplateSpecBootstrapPtrOutput {
	return o.ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutputWithContext(context.Background())
}

func (o MachineDeploymentSpecTemplateSpecBootstrapOutput) ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecBootstrapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineDeploymentSpecTemplateSpecBootstrap) *MachineDeploymentSpecTemplateSpecBootstrap {
		return &v
	}).(MachineDeploymentSpecTemplateSpecBootstrapPtrOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
func (o MachineDeploymentSpecTemplateSpecBootstrapOutput) ConfigRef() MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecBootstrap) *MachineDeploymentSpecTemplateSpecBootstrapConfigRef {
		return v.ConfigRef
	}).(MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput)
}

// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
func (o MachineDeploymentSpecTemplateSpecBootstrapOutput) DataSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecBootstrap) *string { return v.DataSecretName }).(pulumi.StringPtrOutput)
}

type MachineDeploymentSpecTemplateSpecBootstrapPtrOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecTemplateSpecBootstrapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecTemplateSpecBootstrap)(nil)).Elem()
}

func (o MachineDeploymentSpecTemplateSpecBootstrapPtrOutput) ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutput() MachineDeploymentSpecTemplateSpecBootstrapPtrOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecBootstrapPtrOutput) ToMachineDeploymentSpecTemplateSpecBootstrapPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecBootstrapPtrOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecBootstrapPtrOutput) Elem() MachineDeploymentSpecTemplateSpecBootstrapOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecBootstrap) MachineDeploymentSpecTemplateSpecBootstrap {
		if v != nil {
			return *v
		}
		var ret MachineDeploymentSpecTemplateSpecBootstrap
		return ret
	}).(MachineDeploymentSpecTemplateSpecBootstrapOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
func (o MachineDeploymentSpecTemplateSpecBootstrapPtrOutput) ConfigRef() MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecBootstrap) *MachineDeploymentSpecTemplateSpecBootstrapConfigRef {
		if v == nil {
			return nil
		}
		return v.ConfigRef
	}).(MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput)
}

// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
func (o MachineDeploymentSpecTemplateSpecBootstrapPtrOutput) DataSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecBootstrap) *string {
		if v == nil {
			return nil
		}
		return v.DataSecretName
	}).(pulumi.StringPtrOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
type MachineDeploymentSpecTemplateSpecBootstrapConfigRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// MachineDeploymentSpecTemplateSpecBootstrapConfigRefInput is an input type that accepts MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs and MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecTemplateSpecBootstrapConfigRefInput` via:
//
//	MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs{...}
type MachineDeploymentSpecTemplateSpecBootstrapConfigRefInput interface {
	pulumi.Input

	ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput() MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput
	ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefOutputWithContext(context.Context) MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
type MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecTemplateSpecBootstrapConfigRef)(nil)).Elem()
}

func (i MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs) ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput() MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput {
	return i.ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs) ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput)
}

func (i MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs) ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput() MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return i.ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs) ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput).ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx)
}

// MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrInput is an input type that accepts MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs, MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtr and MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrInput` via:
//
//	        MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs{...}
//
//	or:
//
//	        nil
type MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrInput interface {
	pulumi.Input

	ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput() MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput
	ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(context.Context) MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput
}

type machineDeploymentSpecTemplateSpecBootstrapConfigRefPtrType MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs

func MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtr(v *MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs) MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrInput {
	return (*machineDeploymentSpecTemplateSpecBootstrapConfigRefPtrType)(v)
}

func (*machineDeploymentSpecTemplateSpecBootstrapConfigRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecTemplateSpecBootstrapConfigRef)(nil)).Elem()
}

func (i *machineDeploymentSpecTemplateSpecBootstrapConfigRefPtrType) ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput() MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return i.ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(context.Background())
}

func (i *machineDeploymentSpecTemplateSpecBootstrapConfigRefPtrType) ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
type MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecTemplateSpecBootstrapConfigRef)(nil)).Elem()
}

func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput) ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput() MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput) ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput) ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput() MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o.ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(context.Background())
}

func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput) ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *MachineDeploymentSpecTemplateSpecBootstrapConfigRef {
		return &v
	}).(MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput)
}

// API version of the referent.
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecTemplateSpecBootstrapConfigRef)(nil)).Elem()
}

func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput) ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput() MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput) ToMachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput) Elem() MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecBootstrapConfigRef) MachineDeploymentSpecTemplateSpecBootstrapConfigRef {
		if v != nil {
			return *v
		}
		var ret MachineDeploymentSpecTemplateSpecBootstrapConfigRef
		return ret
	}).(MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput)
}

// API version of the referent.
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
type MachineDeploymentSpecTemplateSpecInfrastructureRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// MachineDeploymentSpecTemplateSpecInfrastructureRefInput is an input type that accepts MachineDeploymentSpecTemplateSpecInfrastructureRefArgs and MachineDeploymentSpecTemplateSpecInfrastructureRefOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecTemplateSpecInfrastructureRefInput` via:
//
//	MachineDeploymentSpecTemplateSpecInfrastructureRefArgs{...}
type MachineDeploymentSpecTemplateSpecInfrastructureRefInput interface {
	pulumi.Input

	ToMachineDeploymentSpecTemplateSpecInfrastructureRefOutput() MachineDeploymentSpecTemplateSpecInfrastructureRefOutput
	ToMachineDeploymentSpecTemplateSpecInfrastructureRefOutputWithContext(context.Context) MachineDeploymentSpecTemplateSpecInfrastructureRefOutput
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
type MachineDeploymentSpecTemplateSpecInfrastructureRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (MachineDeploymentSpecTemplateSpecInfrastructureRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecTemplateSpecInfrastructureRef)(nil)).Elem()
}

func (i MachineDeploymentSpecTemplateSpecInfrastructureRefArgs) ToMachineDeploymentSpecTemplateSpecInfrastructureRefOutput() MachineDeploymentSpecTemplateSpecInfrastructureRefOutput {
	return i.ToMachineDeploymentSpecTemplateSpecInfrastructureRefOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecTemplateSpecInfrastructureRefArgs) ToMachineDeploymentSpecTemplateSpecInfrastructureRefOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecInfrastructureRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateSpecInfrastructureRefOutput)
}

func (i MachineDeploymentSpecTemplateSpecInfrastructureRefArgs) ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput() MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput {
	return i.ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i MachineDeploymentSpecTemplateSpecInfrastructureRefArgs) ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateSpecInfrastructureRefOutput).ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx)
}

// MachineDeploymentSpecTemplateSpecInfrastructureRefPtrInput is an input type that accepts MachineDeploymentSpecTemplateSpecInfrastructureRefArgs, MachineDeploymentSpecTemplateSpecInfrastructureRefPtr and MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput values.
// You can construct a concrete instance of `MachineDeploymentSpecTemplateSpecInfrastructureRefPtrInput` via:
//
//	        MachineDeploymentSpecTemplateSpecInfrastructureRefArgs{...}
//
//	or:
//
//	        nil
type MachineDeploymentSpecTemplateSpecInfrastructureRefPtrInput interface {
	pulumi.Input

	ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput() MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput
	ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutputWithContext(context.Context) MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput
}

type machineDeploymentSpecTemplateSpecInfrastructureRefPtrType MachineDeploymentSpecTemplateSpecInfrastructureRefArgs

func MachineDeploymentSpecTemplateSpecInfrastructureRefPtr(v *MachineDeploymentSpecTemplateSpecInfrastructureRefArgs) MachineDeploymentSpecTemplateSpecInfrastructureRefPtrInput {
	return (*machineDeploymentSpecTemplateSpecInfrastructureRefPtrType)(v)
}

func (*machineDeploymentSpecTemplateSpecInfrastructureRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecTemplateSpecInfrastructureRef)(nil)).Elem()
}

func (i *machineDeploymentSpecTemplateSpecInfrastructureRefPtrType) ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput() MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput {
	return i.ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i *machineDeploymentSpecTemplateSpecInfrastructureRefPtrType) ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
type MachineDeploymentSpecTemplateSpecInfrastructureRefOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecTemplateSpecInfrastructureRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentSpecTemplateSpecInfrastructureRef)(nil)).Elem()
}

func (o MachineDeploymentSpecTemplateSpecInfrastructureRefOutput) ToMachineDeploymentSpecTemplateSpecInfrastructureRefOutput() MachineDeploymentSpecTemplateSpecInfrastructureRefOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecInfrastructureRefOutput) ToMachineDeploymentSpecTemplateSpecInfrastructureRefOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecInfrastructureRefOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecInfrastructureRefOutput) ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput() MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput {
	return o.ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (o MachineDeploymentSpecTemplateSpecInfrastructureRefOutput) ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineDeploymentSpecTemplateSpecInfrastructureRef) *MachineDeploymentSpecTemplateSpecInfrastructureRef {
		return &v
	}).(MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput)
}

// API version of the referent.
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecInfrastructureRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecInfrastructureRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecInfrastructureRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecInfrastructureRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecInfrastructureRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecInfrastructureRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentSpecTemplateSpecInfrastructureRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput struct{ *pulumi.OutputState }

func (MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentSpecTemplateSpecInfrastructureRef)(nil)).Elem()
}

func (o MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput) ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput() MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput) ToMachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput {
	return o
}

func (o MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput) Elem() MachineDeploymentSpecTemplateSpecInfrastructureRefOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecInfrastructureRef) MachineDeploymentSpecTemplateSpecInfrastructureRef {
		if v != nil {
			return *v
		}
		var ret MachineDeploymentSpecTemplateSpecInfrastructureRef
		return ret
	}).(MachineDeploymentSpecTemplateSpecInfrastructureRefOutput)
}

// API version of the referent.
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// MachineDeploymentStatus defines the observed state of MachineDeployment.
type MachineDeploymentStatus struct {
	// Total number of available machines (ready for at least minReadySeconds) targeted by this deployment.
	AvailableReplicas *int `pulumi:"availableReplicas"`
	// Conditions defines current service state of the MachineDeployment.
	Conditions []MachineDeploymentStatusConditions `pulumi:"conditions"`
	// The generation observed by the deployment controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Phase represents the current phase of a MachineDeployment (ScalingUp, ScalingDown, Running, Failed, or Unknown).
	Phase *string `pulumi:"phase"`
	// Total number of ready machines targeted by this deployment.
	ReadyReplicas *int `pulumi:"readyReplicas"`
	// Total number of non-terminated machines targeted by this deployment (their labels match the selector).
	Replicas *int `pulumi:"replicas"`
	// Selector is the same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
	Selector *string `pulumi:"selector"`
	// Total number of unavailable machines targeted by this deployment. This is the total number of machines that are still required for the deployment to have 100% available capacity. They may either be machines that are running but not yet available or machines that still have not been created.
	UnavailableReplicas *int `pulumi:"unavailableReplicas"`
	// Total number of non-terminated machines targeted by this deployment that have the desired template spec.
	UpdatedReplicas *int `pulumi:"updatedReplicas"`
}

// MachineDeploymentStatusInput is an input type that accepts MachineDeploymentStatusArgs and MachineDeploymentStatusOutput values.
// You can construct a concrete instance of `MachineDeploymentStatusInput` via:
//
//	MachineDeploymentStatusArgs{...}
type MachineDeploymentStatusInput interface {
	pulumi.Input

	ToMachineDeploymentStatusOutput() MachineDeploymentStatusOutput
	ToMachineDeploymentStatusOutputWithContext(context.Context) MachineDeploymentStatusOutput
}

// MachineDeploymentStatus defines the observed state of MachineDeployment.
type MachineDeploymentStatusArgs struct {
	// Total number of available machines (ready for at least minReadySeconds) targeted by this deployment.
	AvailableReplicas pulumi.IntPtrInput `pulumi:"availableReplicas"`
	// Conditions defines current service state of the MachineDeployment.
	Conditions MachineDeploymentStatusConditionsArrayInput `pulumi:"conditions"`
	// The generation observed by the deployment controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Phase represents the current phase of a MachineDeployment (ScalingUp, ScalingDown, Running, Failed, or Unknown).
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// Total number of ready machines targeted by this deployment.
	ReadyReplicas pulumi.IntPtrInput `pulumi:"readyReplicas"`
	// Total number of non-terminated machines targeted by this deployment (their labels match the selector).
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// Selector is the same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// Total number of unavailable machines targeted by this deployment. This is the total number of machines that are still required for the deployment to have 100% available capacity. They may either be machines that are running but not yet available or machines that still have not been created.
	UnavailableReplicas pulumi.IntPtrInput `pulumi:"unavailableReplicas"`
	// Total number of non-terminated machines targeted by this deployment that have the desired template spec.
	UpdatedReplicas pulumi.IntPtrInput `pulumi:"updatedReplicas"`
}

func (MachineDeploymentStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentStatus)(nil)).Elem()
}

func (i MachineDeploymentStatusArgs) ToMachineDeploymentStatusOutput() MachineDeploymentStatusOutput {
	return i.ToMachineDeploymentStatusOutputWithContext(context.Background())
}

func (i MachineDeploymentStatusArgs) ToMachineDeploymentStatusOutputWithContext(ctx context.Context) MachineDeploymentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentStatusOutput)
}

func (i MachineDeploymentStatusArgs) ToMachineDeploymentStatusPtrOutput() MachineDeploymentStatusPtrOutput {
	return i.ToMachineDeploymentStatusPtrOutputWithContext(context.Background())
}

func (i MachineDeploymentStatusArgs) ToMachineDeploymentStatusPtrOutputWithContext(ctx context.Context) MachineDeploymentStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentStatusOutput).ToMachineDeploymentStatusPtrOutputWithContext(ctx)
}

// MachineDeploymentStatusPtrInput is an input type that accepts MachineDeploymentStatusArgs, MachineDeploymentStatusPtr and MachineDeploymentStatusPtrOutput values.
// You can construct a concrete instance of `MachineDeploymentStatusPtrInput` via:
//
//	        MachineDeploymentStatusArgs{...}
//
//	or:
//
//	        nil
type MachineDeploymentStatusPtrInput interface {
	pulumi.Input

	ToMachineDeploymentStatusPtrOutput() MachineDeploymentStatusPtrOutput
	ToMachineDeploymentStatusPtrOutputWithContext(context.Context) MachineDeploymentStatusPtrOutput
}

type machineDeploymentStatusPtrType MachineDeploymentStatusArgs

func MachineDeploymentStatusPtr(v *MachineDeploymentStatusArgs) MachineDeploymentStatusPtrInput {
	return (*machineDeploymentStatusPtrType)(v)
}

func (*machineDeploymentStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentStatus)(nil)).Elem()
}

func (i *machineDeploymentStatusPtrType) ToMachineDeploymentStatusPtrOutput() MachineDeploymentStatusPtrOutput {
	return i.ToMachineDeploymentStatusPtrOutputWithContext(context.Background())
}

func (i *machineDeploymentStatusPtrType) ToMachineDeploymentStatusPtrOutputWithContext(ctx context.Context) MachineDeploymentStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentStatusPtrOutput)
}

// MachineDeploymentStatus defines the observed state of MachineDeployment.
type MachineDeploymentStatusOutput struct{ *pulumi.OutputState }

func (MachineDeploymentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentStatus)(nil)).Elem()
}

func (o MachineDeploymentStatusOutput) ToMachineDeploymentStatusOutput() MachineDeploymentStatusOutput {
	return o
}

func (o MachineDeploymentStatusOutput) ToMachineDeploymentStatusOutputWithContext(ctx context.Context) MachineDeploymentStatusOutput {
	return o
}

func (o MachineDeploymentStatusOutput) ToMachineDeploymentStatusPtrOutput() MachineDeploymentStatusPtrOutput {
	return o.ToMachineDeploymentStatusPtrOutputWithContext(context.Background())
}

func (o MachineDeploymentStatusOutput) ToMachineDeploymentStatusPtrOutputWithContext(ctx context.Context) MachineDeploymentStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineDeploymentStatus) *MachineDeploymentStatus {
		return &v
	}).(MachineDeploymentStatusPtrOutput)
}

// Total number of available machines (ready for at least minReadySeconds) targeted by this deployment.
func (o MachineDeploymentStatusOutput) AvailableReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineDeploymentStatus) *int { return v.AvailableReplicas }).(pulumi.IntPtrOutput)
}

// Conditions defines current service state of the MachineDeployment.
func (o MachineDeploymentStatusOutput) Conditions() MachineDeploymentStatusConditionsArrayOutput {
	return o.ApplyT(func(v MachineDeploymentStatus) []MachineDeploymentStatusConditions { return v.Conditions }).(MachineDeploymentStatusConditionsArrayOutput)
}

// The generation observed by the deployment controller.
func (o MachineDeploymentStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineDeploymentStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Phase represents the current phase of a MachineDeployment (ScalingUp, ScalingDown, Running, Failed, or Unknown).
func (o MachineDeploymentStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// Total number of ready machines targeted by this deployment.
func (o MachineDeploymentStatusOutput) ReadyReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineDeploymentStatus) *int { return v.ReadyReplicas }).(pulumi.IntPtrOutput)
}

// Total number of non-terminated machines targeted by this deployment (their labels match the selector).
func (o MachineDeploymentStatusOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineDeploymentStatus) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Selector is the same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
func (o MachineDeploymentStatusOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentStatus) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// Total number of unavailable machines targeted by this deployment. This is the total number of machines that are still required for the deployment to have 100% available capacity. They may either be machines that are running but not yet available or machines that still have not been created.
func (o MachineDeploymentStatusOutput) UnavailableReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineDeploymentStatus) *int { return v.UnavailableReplicas }).(pulumi.IntPtrOutput)
}

// Total number of non-terminated machines targeted by this deployment that have the desired template spec.
func (o MachineDeploymentStatusOutput) UpdatedReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineDeploymentStatus) *int { return v.UpdatedReplicas }).(pulumi.IntPtrOutput)
}

type MachineDeploymentStatusPtrOutput struct{ *pulumi.OutputState }

func (MachineDeploymentStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineDeploymentStatus)(nil)).Elem()
}

func (o MachineDeploymentStatusPtrOutput) ToMachineDeploymentStatusPtrOutput() MachineDeploymentStatusPtrOutput {
	return o
}

func (o MachineDeploymentStatusPtrOutput) ToMachineDeploymentStatusPtrOutputWithContext(ctx context.Context) MachineDeploymentStatusPtrOutput {
	return o
}

func (o MachineDeploymentStatusPtrOutput) Elem() MachineDeploymentStatusOutput {
	return o.ApplyT(func(v *MachineDeploymentStatus) MachineDeploymentStatus {
		if v != nil {
			return *v
		}
		var ret MachineDeploymentStatus
		return ret
	}).(MachineDeploymentStatusOutput)
}

// Total number of available machines (ready for at least minReadySeconds) targeted by this deployment.
func (o MachineDeploymentStatusPtrOutput) AvailableReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentStatus) *int {
		if v == nil {
			return nil
		}
		return v.AvailableReplicas
	}).(pulumi.IntPtrOutput)
}

// Conditions defines current service state of the MachineDeployment.
func (o MachineDeploymentStatusPtrOutput) Conditions() MachineDeploymentStatusConditionsArrayOutput {
	return o.ApplyT(func(v *MachineDeploymentStatus) []MachineDeploymentStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(MachineDeploymentStatusConditionsArrayOutput)
}

// The generation observed by the deployment controller.
func (o MachineDeploymentStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Phase represents the current phase of a MachineDeployment (ScalingUp, ScalingDown, Running, Failed, or Unknown).
func (o MachineDeploymentStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// Total number of ready machines targeted by this deployment.
func (o MachineDeploymentStatusPtrOutput) ReadyReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentStatus) *int {
		if v == nil {
			return nil
		}
		return v.ReadyReplicas
	}).(pulumi.IntPtrOutput)
}

// Total number of non-terminated machines targeted by this deployment (their labels match the selector).
func (o MachineDeploymentStatusPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentStatus) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// Selector is the same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
func (o MachineDeploymentStatusPtrOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentStatus) *string {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(pulumi.StringPtrOutput)
}

// Total number of unavailable machines targeted by this deployment. This is the total number of machines that are still required for the deployment to have 100% available capacity. They may either be machines that are running but not yet available or machines that still have not been created.
func (o MachineDeploymentStatusPtrOutput) UnavailableReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentStatus) *int {
		if v == nil {
			return nil
		}
		return v.UnavailableReplicas
	}).(pulumi.IntPtrOutput)
}

// Total number of non-terminated machines targeted by this deployment that have the desired template spec.
func (o MachineDeploymentStatusPtrOutput) UpdatedReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineDeploymentStatus) *int {
		if v == nil {
			return nil
		}
		return v.UpdatedReplicas
	}).(pulumi.IntPtrOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type MachineDeploymentStatusConditions struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason *string `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity *string `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type string `pulumi:"type"`
}

// MachineDeploymentStatusConditionsInput is an input type that accepts MachineDeploymentStatusConditionsArgs and MachineDeploymentStatusConditionsOutput values.
// You can construct a concrete instance of `MachineDeploymentStatusConditionsInput` via:
//
//	MachineDeploymentStatusConditionsArgs{...}
type MachineDeploymentStatusConditionsInput interface {
	pulumi.Input

	ToMachineDeploymentStatusConditionsOutput() MachineDeploymentStatusConditionsOutput
	ToMachineDeploymentStatusConditionsOutputWithContext(context.Context) MachineDeploymentStatusConditionsOutput
}

// Condition defines an observation of a Cluster API resource operational state.
type MachineDeploymentStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MachineDeploymentStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentStatusConditions)(nil)).Elem()
}

func (i MachineDeploymentStatusConditionsArgs) ToMachineDeploymentStatusConditionsOutput() MachineDeploymentStatusConditionsOutput {
	return i.ToMachineDeploymentStatusConditionsOutputWithContext(context.Background())
}

func (i MachineDeploymentStatusConditionsArgs) ToMachineDeploymentStatusConditionsOutputWithContext(ctx context.Context) MachineDeploymentStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentStatusConditionsOutput)
}

// MachineDeploymentStatusConditionsArrayInput is an input type that accepts MachineDeploymentStatusConditionsArray and MachineDeploymentStatusConditionsArrayOutput values.
// You can construct a concrete instance of `MachineDeploymentStatusConditionsArrayInput` via:
//
//	MachineDeploymentStatusConditionsArray{ MachineDeploymentStatusConditionsArgs{...} }
type MachineDeploymentStatusConditionsArrayInput interface {
	pulumi.Input

	ToMachineDeploymentStatusConditionsArrayOutput() MachineDeploymentStatusConditionsArrayOutput
	ToMachineDeploymentStatusConditionsArrayOutputWithContext(context.Context) MachineDeploymentStatusConditionsArrayOutput
}

type MachineDeploymentStatusConditionsArray []MachineDeploymentStatusConditionsInput

func (MachineDeploymentStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineDeploymentStatusConditions)(nil)).Elem()
}

func (i MachineDeploymentStatusConditionsArray) ToMachineDeploymentStatusConditionsArrayOutput() MachineDeploymentStatusConditionsArrayOutput {
	return i.ToMachineDeploymentStatusConditionsArrayOutputWithContext(context.Background())
}

func (i MachineDeploymentStatusConditionsArray) ToMachineDeploymentStatusConditionsArrayOutputWithContext(ctx context.Context) MachineDeploymentStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineDeploymentStatusConditionsArrayOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type MachineDeploymentStatusConditionsOutput struct{ *pulumi.OutputState }

func (MachineDeploymentStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineDeploymentStatusConditions)(nil)).Elem()
}

func (o MachineDeploymentStatusConditionsOutput) ToMachineDeploymentStatusConditionsOutput() MachineDeploymentStatusConditionsOutput {
	return o
}

func (o MachineDeploymentStatusConditionsOutput) ToMachineDeploymentStatusConditionsOutputWithContext(ctx context.Context) MachineDeploymentStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
func (o MachineDeploymentStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v MachineDeploymentStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A human readable message indicating details about the transition. This field may be empty.
func (o MachineDeploymentStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
func (o MachineDeploymentStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
func (o MachineDeploymentStatusConditionsOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineDeploymentStatusConditions) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o MachineDeploymentStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MachineDeploymentStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
func (o MachineDeploymentStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MachineDeploymentStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type MachineDeploymentStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (MachineDeploymentStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineDeploymentStatusConditions)(nil)).Elem()
}

func (o MachineDeploymentStatusConditionsArrayOutput) ToMachineDeploymentStatusConditionsArrayOutput() MachineDeploymentStatusConditionsArrayOutput {
	return o
}

func (o MachineDeploymentStatusConditionsArrayOutput) ToMachineDeploymentStatusConditionsArrayOutputWithContext(ctx context.Context) MachineDeploymentStatusConditionsArrayOutput {
	return o
}

func (o MachineDeploymentStatusConditionsArrayOutput) Index(i pulumi.IntInput) MachineDeploymentStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineDeploymentStatusConditions {
		return vs[0].([]MachineDeploymentStatusConditions)[vs[1].(int)]
	}).(MachineDeploymentStatusConditionsOutput)
}

// MachineHealthCheck is the Schema for the machinehealthchecks API.
type MachineHealthCheckType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of machine health check policy
	Spec *MachineHealthCheckSpec `pulumi:"spec"`
	// Most recently observed status of MachineHealthCheck resource
	Status *MachineHealthCheckStatus `pulumi:"status"`
}

type MachineHealthCheckMetadata struct {
}

// Specification of machine health check policy
type MachineHealthCheckSpec struct {
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName string `pulumi:"clusterName"`
	// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
	MaxUnhealthy interface{} `pulumi:"maxUnhealthy"`
	// Machines older than this duration without a node will be considered to have failed and will be remediated. If not set, this value is defaulted to 10 minutes. If you wish to disable this feature, set the value explicitly to 0.
	NodeStartupTimeout *string `pulumi:"nodeStartupTimeout"`
	// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
	//  This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
	RemediationTemplate *MachineHealthCheckSpecRemediationTemplate `pulumi:"remediationTemplate"`
	// Label selector to match machines whose health will be exercised
	Selector MachineHealthCheckSpecSelector `pulumi:"selector"`
	// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
	UnhealthyConditions []MachineHealthCheckSpecUnhealthyConditions `pulumi:"unhealthyConditions"`
	// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
	UnhealthyRange *string `pulumi:"unhealthyRange"`
}

// MachineHealthCheckSpecInput is an input type that accepts MachineHealthCheckSpecArgs and MachineHealthCheckSpecOutput values.
// You can construct a concrete instance of `MachineHealthCheckSpecInput` via:
//
//	MachineHealthCheckSpecArgs{...}
type MachineHealthCheckSpecInput interface {
	pulumi.Input

	ToMachineHealthCheckSpecOutput() MachineHealthCheckSpecOutput
	ToMachineHealthCheckSpecOutputWithContext(context.Context) MachineHealthCheckSpecOutput
}

// Specification of machine health check policy
type MachineHealthCheckSpecArgs struct {
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
	MaxUnhealthy pulumi.Input `pulumi:"maxUnhealthy"`
	// Machines older than this duration without a node will be considered to have failed and will be remediated. If not set, this value is defaulted to 10 minutes. If you wish to disable this feature, set the value explicitly to 0.
	NodeStartupTimeout pulumi.StringPtrInput `pulumi:"nodeStartupTimeout"`
	// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
	//  This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
	RemediationTemplate MachineHealthCheckSpecRemediationTemplatePtrInput `pulumi:"remediationTemplate"`
	// Label selector to match machines whose health will be exercised
	Selector MachineHealthCheckSpecSelectorInput `pulumi:"selector"`
	// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
	UnhealthyConditions MachineHealthCheckSpecUnhealthyConditionsArrayInput `pulumi:"unhealthyConditions"`
	// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
	UnhealthyRange pulumi.StringPtrInput `pulumi:"unhealthyRange"`
}

func (MachineHealthCheckSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckSpec)(nil)).Elem()
}

func (i MachineHealthCheckSpecArgs) ToMachineHealthCheckSpecOutput() MachineHealthCheckSpecOutput {
	return i.ToMachineHealthCheckSpecOutputWithContext(context.Background())
}

func (i MachineHealthCheckSpecArgs) ToMachineHealthCheckSpecOutputWithContext(ctx context.Context) MachineHealthCheckSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckSpecOutput)
}

func (i MachineHealthCheckSpecArgs) ToMachineHealthCheckSpecPtrOutput() MachineHealthCheckSpecPtrOutput {
	return i.ToMachineHealthCheckSpecPtrOutputWithContext(context.Background())
}

func (i MachineHealthCheckSpecArgs) ToMachineHealthCheckSpecPtrOutputWithContext(ctx context.Context) MachineHealthCheckSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckSpecOutput).ToMachineHealthCheckSpecPtrOutputWithContext(ctx)
}

// MachineHealthCheckSpecPtrInput is an input type that accepts MachineHealthCheckSpecArgs, MachineHealthCheckSpecPtr and MachineHealthCheckSpecPtrOutput values.
// You can construct a concrete instance of `MachineHealthCheckSpecPtrInput` via:
//
//	        MachineHealthCheckSpecArgs{...}
//
//	or:
//
//	        nil
type MachineHealthCheckSpecPtrInput interface {
	pulumi.Input

	ToMachineHealthCheckSpecPtrOutput() MachineHealthCheckSpecPtrOutput
	ToMachineHealthCheckSpecPtrOutputWithContext(context.Context) MachineHealthCheckSpecPtrOutput
}

type machineHealthCheckSpecPtrType MachineHealthCheckSpecArgs

func MachineHealthCheckSpecPtr(v *MachineHealthCheckSpecArgs) MachineHealthCheckSpecPtrInput {
	return (*machineHealthCheckSpecPtrType)(v)
}

func (*machineHealthCheckSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineHealthCheckSpec)(nil)).Elem()
}

func (i *machineHealthCheckSpecPtrType) ToMachineHealthCheckSpecPtrOutput() MachineHealthCheckSpecPtrOutput {
	return i.ToMachineHealthCheckSpecPtrOutputWithContext(context.Background())
}

func (i *machineHealthCheckSpecPtrType) ToMachineHealthCheckSpecPtrOutputWithContext(ctx context.Context) MachineHealthCheckSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckSpecPtrOutput)
}

// Specification of machine health check policy
type MachineHealthCheckSpecOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckSpec)(nil)).Elem()
}

func (o MachineHealthCheckSpecOutput) ToMachineHealthCheckSpecOutput() MachineHealthCheckSpecOutput {
	return o
}

func (o MachineHealthCheckSpecOutput) ToMachineHealthCheckSpecOutputWithContext(ctx context.Context) MachineHealthCheckSpecOutput {
	return o
}

func (o MachineHealthCheckSpecOutput) ToMachineHealthCheckSpecPtrOutput() MachineHealthCheckSpecPtrOutput {
	return o.ToMachineHealthCheckSpecPtrOutputWithContext(context.Background())
}

func (o MachineHealthCheckSpecOutput) ToMachineHealthCheckSpecPtrOutputWithContext(ctx context.Context) MachineHealthCheckSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineHealthCheckSpec) *MachineHealthCheckSpec {
		return &v
	}).(MachineHealthCheckSpecPtrOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachineHealthCheckSpecOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v MachineHealthCheckSpec) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
func (o MachineHealthCheckSpecOutput) MaxUnhealthy() pulumi.AnyOutput {
	return o.ApplyT(func(v MachineHealthCheckSpec) interface{} { return v.MaxUnhealthy }).(pulumi.AnyOutput)
}

// Machines older than this duration without a node will be considered to have failed and will be remediated. If not set, this value is defaulted to 10 minutes. If you wish to disable this feature, set the value explicitly to 0.
func (o MachineHealthCheckSpecOutput) NodeStartupTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckSpec) *string { return v.NodeStartupTimeout }).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
func (o MachineHealthCheckSpecOutput) RemediationTemplate() MachineHealthCheckSpecRemediationTemplatePtrOutput {
	return o.ApplyT(func(v MachineHealthCheckSpec) *MachineHealthCheckSpecRemediationTemplate {
		return v.RemediationTemplate
	}).(MachineHealthCheckSpecRemediationTemplatePtrOutput)
}

// Label selector to match machines whose health will be exercised
func (o MachineHealthCheckSpecOutput) Selector() MachineHealthCheckSpecSelectorOutput {
	return o.ApplyT(func(v MachineHealthCheckSpec) MachineHealthCheckSpecSelector { return v.Selector }).(MachineHealthCheckSpecSelectorOutput)
}

// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
func (o MachineHealthCheckSpecOutput) UnhealthyConditions() MachineHealthCheckSpecUnhealthyConditionsArrayOutput {
	return o.ApplyT(func(v MachineHealthCheckSpec) []MachineHealthCheckSpecUnhealthyConditions {
		return v.UnhealthyConditions
	}).(MachineHealthCheckSpecUnhealthyConditionsArrayOutput)
}

// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
func (o MachineHealthCheckSpecOutput) UnhealthyRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckSpec) *string { return v.UnhealthyRange }).(pulumi.StringPtrOutput)
}

type MachineHealthCheckSpecPtrOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineHealthCheckSpec)(nil)).Elem()
}

func (o MachineHealthCheckSpecPtrOutput) ToMachineHealthCheckSpecPtrOutput() MachineHealthCheckSpecPtrOutput {
	return o
}

func (o MachineHealthCheckSpecPtrOutput) ToMachineHealthCheckSpecPtrOutputWithContext(ctx context.Context) MachineHealthCheckSpecPtrOutput {
	return o
}

func (o MachineHealthCheckSpecPtrOutput) Elem() MachineHealthCheckSpecOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpec) MachineHealthCheckSpec {
		if v != nil {
			return *v
		}
		var ret MachineHealthCheckSpec
		return ret
	}).(MachineHealthCheckSpecOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachineHealthCheckSpecPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// Any further remediation is only allowed if at most "MaxUnhealthy" machines selected by "selector" are not healthy.
func (o MachineHealthCheckSpecPtrOutput) MaxUnhealthy() pulumi.AnyOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnhealthy
	}).(pulumi.AnyOutput)
}

// Machines older than this duration without a node will be considered to have failed and will be remediated. If not set, this value is defaulted to 10 minutes. If you wish to disable this feature, set the value explicitly to 0.
func (o MachineHealthCheckSpecPtrOutput) NodeStartupTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpec) *string {
		if v == nil {
			return nil
		}
		return v.NodeStartupTimeout
	}).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
func (o MachineHealthCheckSpecPtrOutput) RemediationTemplate() MachineHealthCheckSpecRemediationTemplatePtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpec) *MachineHealthCheckSpecRemediationTemplate {
		if v == nil {
			return nil
		}
		return v.RemediationTemplate
	}).(MachineHealthCheckSpecRemediationTemplatePtrOutput)
}

// Label selector to match machines whose health will be exercised
func (o MachineHealthCheckSpecPtrOutput) Selector() MachineHealthCheckSpecSelectorPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpec) *MachineHealthCheckSpecSelector {
		if v == nil {
			return nil
		}
		return &v.Selector
	}).(MachineHealthCheckSpecSelectorPtrOutput)
}

// UnhealthyConditions contains a list of the conditions that determine whether a node is considered unhealthy.  The conditions are combined in a logical OR, i.e. if any of the conditions is met, the node is unhealthy.
func (o MachineHealthCheckSpecPtrOutput) UnhealthyConditions() MachineHealthCheckSpecUnhealthyConditionsArrayOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpec) []MachineHealthCheckSpecUnhealthyConditions {
		if v == nil {
			return nil
		}
		return v.UnhealthyConditions
	}).(MachineHealthCheckSpecUnhealthyConditionsArrayOutput)
}

// Any further remediation is only allowed if the number of machines selected by "selector" as not healthy is within the range of "UnhealthyRange". Takes precedence over MaxUnhealthy. Eg. "[3-5]" - This means that remediation will be allowed only when: (a) there are at least 3 unhealthy machines (and) (b) there are at most 5 unhealthy machines
func (o MachineHealthCheckSpecPtrOutput) UnhealthyRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpec) *string {
		if v == nil {
			return nil
		}
		return v.UnhealthyRange
	}).(pulumi.StringPtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type MachineHealthCheckSpecRemediationTemplate struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// MachineHealthCheckSpecRemediationTemplateInput is an input type that accepts MachineHealthCheckSpecRemediationTemplateArgs and MachineHealthCheckSpecRemediationTemplateOutput values.
// You can construct a concrete instance of `MachineHealthCheckSpecRemediationTemplateInput` via:
//
//	MachineHealthCheckSpecRemediationTemplateArgs{...}
type MachineHealthCheckSpecRemediationTemplateInput interface {
	pulumi.Input

	ToMachineHealthCheckSpecRemediationTemplateOutput() MachineHealthCheckSpecRemediationTemplateOutput
	ToMachineHealthCheckSpecRemediationTemplateOutputWithContext(context.Context) MachineHealthCheckSpecRemediationTemplateOutput
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type MachineHealthCheckSpecRemediationTemplateArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (MachineHealthCheckSpecRemediationTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckSpecRemediationTemplate)(nil)).Elem()
}

func (i MachineHealthCheckSpecRemediationTemplateArgs) ToMachineHealthCheckSpecRemediationTemplateOutput() MachineHealthCheckSpecRemediationTemplateOutput {
	return i.ToMachineHealthCheckSpecRemediationTemplateOutputWithContext(context.Background())
}

func (i MachineHealthCheckSpecRemediationTemplateArgs) ToMachineHealthCheckSpecRemediationTemplateOutputWithContext(ctx context.Context) MachineHealthCheckSpecRemediationTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckSpecRemediationTemplateOutput)
}

func (i MachineHealthCheckSpecRemediationTemplateArgs) ToMachineHealthCheckSpecRemediationTemplatePtrOutput() MachineHealthCheckSpecRemediationTemplatePtrOutput {
	return i.ToMachineHealthCheckSpecRemediationTemplatePtrOutputWithContext(context.Background())
}

func (i MachineHealthCheckSpecRemediationTemplateArgs) ToMachineHealthCheckSpecRemediationTemplatePtrOutputWithContext(ctx context.Context) MachineHealthCheckSpecRemediationTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckSpecRemediationTemplateOutput).ToMachineHealthCheckSpecRemediationTemplatePtrOutputWithContext(ctx)
}

// MachineHealthCheckSpecRemediationTemplatePtrInput is an input type that accepts MachineHealthCheckSpecRemediationTemplateArgs, MachineHealthCheckSpecRemediationTemplatePtr and MachineHealthCheckSpecRemediationTemplatePtrOutput values.
// You can construct a concrete instance of `MachineHealthCheckSpecRemediationTemplatePtrInput` via:
//
//	        MachineHealthCheckSpecRemediationTemplateArgs{...}
//
//	or:
//
//	        nil
type MachineHealthCheckSpecRemediationTemplatePtrInput interface {
	pulumi.Input

	ToMachineHealthCheckSpecRemediationTemplatePtrOutput() MachineHealthCheckSpecRemediationTemplatePtrOutput
	ToMachineHealthCheckSpecRemediationTemplatePtrOutputWithContext(context.Context) MachineHealthCheckSpecRemediationTemplatePtrOutput
}

type machineHealthCheckSpecRemediationTemplatePtrType MachineHealthCheckSpecRemediationTemplateArgs

func MachineHealthCheckSpecRemediationTemplatePtr(v *MachineHealthCheckSpecRemediationTemplateArgs) MachineHealthCheckSpecRemediationTemplatePtrInput {
	return (*machineHealthCheckSpecRemediationTemplatePtrType)(v)
}

func (*machineHealthCheckSpecRemediationTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineHealthCheckSpecRemediationTemplate)(nil)).Elem()
}

func (i *machineHealthCheckSpecRemediationTemplatePtrType) ToMachineHealthCheckSpecRemediationTemplatePtrOutput() MachineHealthCheckSpecRemediationTemplatePtrOutput {
	return i.ToMachineHealthCheckSpecRemediationTemplatePtrOutputWithContext(context.Background())
}

func (i *machineHealthCheckSpecRemediationTemplatePtrType) ToMachineHealthCheckSpecRemediationTemplatePtrOutputWithContext(ctx context.Context) MachineHealthCheckSpecRemediationTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckSpecRemediationTemplatePtrOutput)
}

// RemediationTemplate is a reference to a remediation template provided by an infrastructure provider.
//
//	This field is completely optional, when filled, the MachineHealthCheck controller creates a new object from the template referenced and hands off remediation of the machine to a controller that lives outside of Cluster API.
type MachineHealthCheckSpecRemediationTemplateOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckSpecRemediationTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckSpecRemediationTemplate)(nil)).Elem()
}

func (o MachineHealthCheckSpecRemediationTemplateOutput) ToMachineHealthCheckSpecRemediationTemplateOutput() MachineHealthCheckSpecRemediationTemplateOutput {
	return o
}

func (o MachineHealthCheckSpecRemediationTemplateOutput) ToMachineHealthCheckSpecRemediationTemplateOutputWithContext(ctx context.Context) MachineHealthCheckSpecRemediationTemplateOutput {
	return o
}

func (o MachineHealthCheckSpecRemediationTemplateOutput) ToMachineHealthCheckSpecRemediationTemplatePtrOutput() MachineHealthCheckSpecRemediationTemplatePtrOutput {
	return o.ToMachineHealthCheckSpecRemediationTemplatePtrOutputWithContext(context.Background())
}

func (o MachineHealthCheckSpecRemediationTemplateOutput) ToMachineHealthCheckSpecRemediationTemplatePtrOutputWithContext(ctx context.Context) MachineHealthCheckSpecRemediationTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineHealthCheckSpecRemediationTemplate) *MachineHealthCheckSpecRemediationTemplate {
		return &v
	}).(MachineHealthCheckSpecRemediationTemplatePtrOutput)
}

// API version of the referent.
func (o MachineHealthCheckSpecRemediationTemplateOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecRemediationTemplate) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineHealthCheckSpecRemediationTemplateOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecRemediationTemplate) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineHealthCheckSpecRemediationTemplateOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecRemediationTemplate) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineHealthCheckSpecRemediationTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecRemediationTemplate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineHealthCheckSpecRemediationTemplateOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecRemediationTemplate) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineHealthCheckSpecRemediationTemplateOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecRemediationTemplate) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineHealthCheckSpecRemediationTemplateOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecRemediationTemplate) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type MachineHealthCheckSpecRemediationTemplatePtrOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckSpecRemediationTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineHealthCheckSpecRemediationTemplate)(nil)).Elem()
}

func (o MachineHealthCheckSpecRemediationTemplatePtrOutput) ToMachineHealthCheckSpecRemediationTemplatePtrOutput() MachineHealthCheckSpecRemediationTemplatePtrOutput {
	return o
}

func (o MachineHealthCheckSpecRemediationTemplatePtrOutput) ToMachineHealthCheckSpecRemediationTemplatePtrOutputWithContext(ctx context.Context) MachineHealthCheckSpecRemediationTemplatePtrOutput {
	return o
}

func (o MachineHealthCheckSpecRemediationTemplatePtrOutput) Elem() MachineHealthCheckSpecRemediationTemplateOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpecRemediationTemplate) MachineHealthCheckSpecRemediationTemplate {
		if v != nil {
			return *v
		}
		var ret MachineHealthCheckSpecRemediationTemplate
		return ret
	}).(MachineHealthCheckSpecRemediationTemplateOutput)
}

// API version of the referent.
func (o MachineHealthCheckSpecRemediationTemplatePtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpecRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineHealthCheckSpecRemediationTemplatePtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpecRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineHealthCheckSpecRemediationTemplatePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpecRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineHealthCheckSpecRemediationTemplatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpecRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineHealthCheckSpecRemediationTemplatePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpecRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineHealthCheckSpecRemediationTemplatePtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpecRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineHealthCheckSpecRemediationTemplatePtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpecRemediationTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// Label selector to match machines whose health will be exercised
type MachineHealthCheckSpecSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []MachineHealthCheckSpecSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// MachineHealthCheckSpecSelectorInput is an input type that accepts MachineHealthCheckSpecSelectorArgs and MachineHealthCheckSpecSelectorOutput values.
// You can construct a concrete instance of `MachineHealthCheckSpecSelectorInput` via:
//
//	MachineHealthCheckSpecSelectorArgs{...}
type MachineHealthCheckSpecSelectorInput interface {
	pulumi.Input

	ToMachineHealthCheckSpecSelectorOutput() MachineHealthCheckSpecSelectorOutput
	ToMachineHealthCheckSpecSelectorOutputWithContext(context.Context) MachineHealthCheckSpecSelectorOutput
}

// Label selector to match machines whose health will be exercised
type MachineHealthCheckSpecSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions MachineHealthCheckSpecSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (MachineHealthCheckSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckSpecSelector)(nil)).Elem()
}

func (i MachineHealthCheckSpecSelectorArgs) ToMachineHealthCheckSpecSelectorOutput() MachineHealthCheckSpecSelectorOutput {
	return i.ToMachineHealthCheckSpecSelectorOutputWithContext(context.Background())
}

func (i MachineHealthCheckSpecSelectorArgs) ToMachineHealthCheckSpecSelectorOutputWithContext(ctx context.Context) MachineHealthCheckSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckSpecSelectorOutput)
}

func (i MachineHealthCheckSpecSelectorArgs) ToMachineHealthCheckSpecSelectorPtrOutput() MachineHealthCheckSpecSelectorPtrOutput {
	return i.ToMachineHealthCheckSpecSelectorPtrOutputWithContext(context.Background())
}

func (i MachineHealthCheckSpecSelectorArgs) ToMachineHealthCheckSpecSelectorPtrOutputWithContext(ctx context.Context) MachineHealthCheckSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckSpecSelectorOutput).ToMachineHealthCheckSpecSelectorPtrOutputWithContext(ctx)
}

// MachineHealthCheckSpecSelectorPtrInput is an input type that accepts MachineHealthCheckSpecSelectorArgs, MachineHealthCheckSpecSelectorPtr and MachineHealthCheckSpecSelectorPtrOutput values.
// You can construct a concrete instance of `MachineHealthCheckSpecSelectorPtrInput` via:
//
//	        MachineHealthCheckSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type MachineHealthCheckSpecSelectorPtrInput interface {
	pulumi.Input

	ToMachineHealthCheckSpecSelectorPtrOutput() MachineHealthCheckSpecSelectorPtrOutput
	ToMachineHealthCheckSpecSelectorPtrOutputWithContext(context.Context) MachineHealthCheckSpecSelectorPtrOutput
}

type machineHealthCheckSpecSelectorPtrType MachineHealthCheckSpecSelectorArgs

func MachineHealthCheckSpecSelectorPtr(v *MachineHealthCheckSpecSelectorArgs) MachineHealthCheckSpecSelectorPtrInput {
	return (*machineHealthCheckSpecSelectorPtrType)(v)
}

func (*machineHealthCheckSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineHealthCheckSpecSelector)(nil)).Elem()
}

func (i *machineHealthCheckSpecSelectorPtrType) ToMachineHealthCheckSpecSelectorPtrOutput() MachineHealthCheckSpecSelectorPtrOutput {
	return i.ToMachineHealthCheckSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *machineHealthCheckSpecSelectorPtrType) ToMachineHealthCheckSpecSelectorPtrOutputWithContext(ctx context.Context) MachineHealthCheckSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckSpecSelectorPtrOutput)
}

// Label selector to match machines whose health will be exercised
type MachineHealthCheckSpecSelectorOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckSpecSelector)(nil)).Elem()
}

func (o MachineHealthCheckSpecSelectorOutput) ToMachineHealthCheckSpecSelectorOutput() MachineHealthCheckSpecSelectorOutput {
	return o
}

func (o MachineHealthCheckSpecSelectorOutput) ToMachineHealthCheckSpecSelectorOutputWithContext(ctx context.Context) MachineHealthCheckSpecSelectorOutput {
	return o
}

func (o MachineHealthCheckSpecSelectorOutput) ToMachineHealthCheckSpecSelectorPtrOutput() MachineHealthCheckSpecSelectorPtrOutput {
	return o.ToMachineHealthCheckSpecSelectorPtrOutputWithContext(context.Background())
}

func (o MachineHealthCheckSpecSelectorOutput) ToMachineHealthCheckSpecSelectorPtrOutputWithContext(ctx context.Context) MachineHealthCheckSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineHealthCheckSpecSelector) *MachineHealthCheckSpecSelector {
		return &v
	}).(MachineHealthCheckSpecSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o MachineHealthCheckSpecSelectorOutput) MatchExpressions() MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecSelector) []MachineHealthCheckSpecSelectorMatchExpressions {
		return v.MatchExpressions
	}).(MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o MachineHealthCheckSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type MachineHealthCheckSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineHealthCheckSpecSelector)(nil)).Elem()
}

func (o MachineHealthCheckSpecSelectorPtrOutput) ToMachineHealthCheckSpecSelectorPtrOutput() MachineHealthCheckSpecSelectorPtrOutput {
	return o
}

func (o MachineHealthCheckSpecSelectorPtrOutput) ToMachineHealthCheckSpecSelectorPtrOutputWithContext(ctx context.Context) MachineHealthCheckSpecSelectorPtrOutput {
	return o
}

func (o MachineHealthCheckSpecSelectorPtrOutput) Elem() MachineHealthCheckSpecSelectorOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpecSelector) MachineHealthCheckSpecSelector {
		if v != nil {
			return *v
		}
		var ret MachineHealthCheckSpecSelector
		return ret
	}).(MachineHealthCheckSpecSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o MachineHealthCheckSpecSelectorPtrOutput) MatchExpressions() MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpecSelector) []MachineHealthCheckSpecSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o MachineHealthCheckSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MachineHealthCheckSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type MachineHealthCheckSpecSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// MachineHealthCheckSpecSelectorMatchExpressionsInput is an input type that accepts MachineHealthCheckSpecSelectorMatchExpressionsArgs and MachineHealthCheckSpecSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `MachineHealthCheckSpecSelectorMatchExpressionsInput` via:
//
//	MachineHealthCheckSpecSelectorMatchExpressionsArgs{...}
type MachineHealthCheckSpecSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToMachineHealthCheckSpecSelectorMatchExpressionsOutput() MachineHealthCheckSpecSelectorMatchExpressionsOutput
	ToMachineHealthCheckSpecSelectorMatchExpressionsOutputWithContext(context.Context) MachineHealthCheckSpecSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type MachineHealthCheckSpecSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (MachineHealthCheckSpecSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i MachineHealthCheckSpecSelectorMatchExpressionsArgs) ToMachineHealthCheckSpecSelectorMatchExpressionsOutput() MachineHealthCheckSpecSelectorMatchExpressionsOutput {
	return i.ToMachineHealthCheckSpecSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i MachineHealthCheckSpecSelectorMatchExpressionsArgs) ToMachineHealthCheckSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) MachineHealthCheckSpecSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckSpecSelectorMatchExpressionsOutput)
}

// MachineHealthCheckSpecSelectorMatchExpressionsArrayInput is an input type that accepts MachineHealthCheckSpecSelectorMatchExpressionsArray and MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `MachineHealthCheckSpecSelectorMatchExpressionsArrayInput` via:
//
//	MachineHealthCheckSpecSelectorMatchExpressionsArray{ MachineHealthCheckSpecSelectorMatchExpressionsArgs{...} }
type MachineHealthCheckSpecSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToMachineHealthCheckSpecSelectorMatchExpressionsArrayOutput() MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput
	ToMachineHealthCheckSpecSelectorMatchExpressionsArrayOutputWithContext(context.Context) MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput
}

type MachineHealthCheckSpecSelectorMatchExpressionsArray []MachineHealthCheckSpecSelectorMatchExpressionsInput

func (MachineHealthCheckSpecSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineHealthCheckSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i MachineHealthCheckSpecSelectorMatchExpressionsArray) ToMachineHealthCheckSpecSelectorMatchExpressionsArrayOutput() MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput {
	return i.ToMachineHealthCheckSpecSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i MachineHealthCheckSpecSelectorMatchExpressionsArray) ToMachineHealthCheckSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type MachineHealthCheckSpecSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckSpecSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o MachineHealthCheckSpecSelectorMatchExpressionsOutput) ToMachineHealthCheckSpecSelectorMatchExpressionsOutput() MachineHealthCheckSpecSelectorMatchExpressionsOutput {
	return o
}

func (o MachineHealthCheckSpecSelectorMatchExpressionsOutput) ToMachineHealthCheckSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) MachineHealthCheckSpecSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o MachineHealthCheckSpecSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o MachineHealthCheckSpecSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o MachineHealthCheckSpecSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineHealthCheckSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput) ToMachineHealthCheckSpecSelectorMatchExpressionsArrayOutput() MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput) ToMachineHealthCheckSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) MachineHealthCheckSpecSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineHealthCheckSpecSelectorMatchExpressions {
		return vs[0].([]MachineHealthCheckSpecSelectorMatchExpressions)[vs[1].(int)]
	}).(MachineHealthCheckSpecSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type MachineHealthCheckSpecSelectorMatchLabels struct {
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type MachineHealthCheckSpecUnhealthyConditions struct {
	Status  string `pulumi:"status"`
	Timeout string `pulumi:"timeout"`
	Type    string `pulumi:"type"`
}

// MachineHealthCheckSpecUnhealthyConditionsInput is an input type that accepts MachineHealthCheckSpecUnhealthyConditionsArgs and MachineHealthCheckSpecUnhealthyConditionsOutput values.
// You can construct a concrete instance of `MachineHealthCheckSpecUnhealthyConditionsInput` via:
//
//	MachineHealthCheckSpecUnhealthyConditionsArgs{...}
type MachineHealthCheckSpecUnhealthyConditionsInput interface {
	pulumi.Input

	ToMachineHealthCheckSpecUnhealthyConditionsOutput() MachineHealthCheckSpecUnhealthyConditionsOutput
	ToMachineHealthCheckSpecUnhealthyConditionsOutputWithContext(context.Context) MachineHealthCheckSpecUnhealthyConditionsOutput
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type MachineHealthCheckSpecUnhealthyConditionsArgs struct {
	Status  pulumi.StringInput `pulumi:"status"`
	Timeout pulumi.StringInput `pulumi:"timeout"`
	Type    pulumi.StringInput `pulumi:"type"`
}

func (MachineHealthCheckSpecUnhealthyConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckSpecUnhealthyConditions)(nil)).Elem()
}

func (i MachineHealthCheckSpecUnhealthyConditionsArgs) ToMachineHealthCheckSpecUnhealthyConditionsOutput() MachineHealthCheckSpecUnhealthyConditionsOutput {
	return i.ToMachineHealthCheckSpecUnhealthyConditionsOutputWithContext(context.Background())
}

func (i MachineHealthCheckSpecUnhealthyConditionsArgs) ToMachineHealthCheckSpecUnhealthyConditionsOutputWithContext(ctx context.Context) MachineHealthCheckSpecUnhealthyConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckSpecUnhealthyConditionsOutput)
}

// MachineHealthCheckSpecUnhealthyConditionsArrayInput is an input type that accepts MachineHealthCheckSpecUnhealthyConditionsArray and MachineHealthCheckSpecUnhealthyConditionsArrayOutput values.
// You can construct a concrete instance of `MachineHealthCheckSpecUnhealthyConditionsArrayInput` via:
//
//	MachineHealthCheckSpecUnhealthyConditionsArray{ MachineHealthCheckSpecUnhealthyConditionsArgs{...} }
type MachineHealthCheckSpecUnhealthyConditionsArrayInput interface {
	pulumi.Input

	ToMachineHealthCheckSpecUnhealthyConditionsArrayOutput() MachineHealthCheckSpecUnhealthyConditionsArrayOutput
	ToMachineHealthCheckSpecUnhealthyConditionsArrayOutputWithContext(context.Context) MachineHealthCheckSpecUnhealthyConditionsArrayOutput
}

type MachineHealthCheckSpecUnhealthyConditionsArray []MachineHealthCheckSpecUnhealthyConditionsInput

func (MachineHealthCheckSpecUnhealthyConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineHealthCheckSpecUnhealthyConditions)(nil)).Elem()
}

func (i MachineHealthCheckSpecUnhealthyConditionsArray) ToMachineHealthCheckSpecUnhealthyConditionsArrayOutput() MachineHealthCheckSpecUnhealthyConditionsArrayOutput {
	return i.ToMachineHealthCheckSpecUnhealthyConditionsArrayOutputWithContext(context.Background())
}

func (i MachineHealthCheckSpecUnhealthyConditionsArray) ToMachineHealthCheckSpecUnhealthyConditionsArrayOutputWithContext(ctx context.Context) MachineHealthCheckSpecUnhealthyConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckSpecUnhealthyConditionsArrayOutput)
}

// UnhealthyCondition represents a Node condition type and value with a timeout specified as a duration.  When the named condition has been in the given status for at least the timeout value, a node is considered unhealthy.
type MachineHealthCheckSpecUnhealthyConditionsOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckSpecUnhealthyConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckSpecUnhealthyConditions)(nil)).Elem()
}

func (o MachineHealthCheckSpecUnhealthyConditionsOutput) ToMachineHealthCheckSpecUnhealthyConditionsOutput() MachineHealthCheckSpecUnhealthyConditionsOutput {
	return o
}

func (o MachineHealthCheckSpecUnhealthyConditionsOutput) ToMachineHealthCheckSpecUnhealthyConditionsOutputWithContext(ctx context.Context) MachineHealthCheckSpecUnhealthyConditionsOutput {
	return o
}

func (o MachineHealthCheckSpecUnhealthyConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecUnhealthyConditions) string { return v.Status }).(pulumi.StringOutput)
}

func (o MachineHealthCheckSpecUnhealthyConditionsOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecUnhealthyConditions) string { return v.Timeout }).(pulumi.StringOutput)
}

func (o MachineHealthCheckSpecUnhealthyConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MachineHealthCheckSpecUnhealthyConditions) string { return v.Type }).(pulumi.StringOutput)
}

type MachineHealthCheckSpecUnhealthyConditionsArrayOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckSpecUnhealthyConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineHealthCheckSpecUnhealthyConditions)(nil)).Elem()
}

func (o MachineHealthCheckSpecUnhealthyConditionsArrayOutput) ToMachineHealthCheckSpecUnhealthyConditionsArrayOutput() MachineHealthCheckSpecUnhealthyConditionsArrayOutput {
	return o
}

func (o MachineHealthCheckSpecUnhealthyConditionsArrayOutput) ToMachineHealthCheckSpecUnhealthyConditionsArrayOutputWithContext(ctx context.Context) MachineHealthCheckSpecUnhealthyConditionsArrayOutput {
	return o
}

func (o MachineHealthCheckSpecUnhealthyConditionsArrayOutput) Index(i pulumi.IntInput) MachineHealthCheckSpecUnhealthyConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineHealthCheckSpecUnhealthyConditions {
		return vs[0].([]MachineHealthCheckSpecUnhealthyConditions)[vs[1].(int)]
	}).(MachineHealthCheckSpecUnhealthyConditionsOutput)
}

// Most recently observed status of MachineHealthCheck resource
type MachineHealthCheckStatus struct {
	// Conditions defines current service state of the MachineHealthCheck.
	Conditions []MachineHealthCheckStatusConditions `pulumi:"conditions"`
	// total number of healthy machines counted by this machine health check
	CurrentHealthy *int `pulumi:"currentHealthy"`
	// total number of machines counted by this machine health check
	ExpectedMachines *int `pulumi:"expectedMachines"`
	// ObservedGeneration is the latest generation observed by the controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// RemediationsAllowed is the number of further remediations allowed by this machine health check before maxUnhealthy short circuiting will be applied
	RemediationsAllowed *int `pulumi:"remediationsAllowed"`
	// Targets shows the current list of machines the machine health check is watching
	Targets []string `pulumi:"targets"`
}

// MachineHealthCheckStatusInput is an input type that accepts MachineHealthCheckStatusArgs and MachineHealthCheckStatusOutput values.
// You can construct a concrete instance of `MachineHealthCheckStatusInput` via:
//
//	MachineHealthCheckStatusArgs{...}
type MachineHealthCheckStatusInput interface {
	pulumi.Input

	ToMachineHealthCheckStatusOutput() MachineHealthCheckStatusOutput
	ToMachineHealthCheckStatusOutputWithContext(context.Context) MachineHealthCheckStatusOutput
}

// Most recently observed status of MachineHealthCheck resource
type MachineHealthCheckStatusArgs struct {
	// Conditions defines current service state of the MachineHealthCheck.
	Conditions MachineHealthCheckStatusConditionsArrayInput `pulumi:"conditions"`
	// total number of healthy machines counted by this machine health check
	CurrentHealthy pulumi.IntPtrInput `pulumi:"currentHealthy"`
	// total number of machines counted by this machine health check
	ExpectedMachines pulumi.IntPtrInput `pulumi:"expectedMachines"`
	// ObservedGeneration is the latest generation observed by the controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// RemediationsAllowed is the number of further remediations allowed by this machine health check before maxUnhealthy short circuiting will be applied
	RemediationsAllowed pulumi.IntPtrInput `pulumi:"remediationsAllowed"`
	// Targets shows the current list of machines the machine health check is watching
	Targets pulumi.StringArrayInput `pulumi:"targets"`
}

func (MachineHealthCheckStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckStatus)(nil)).Elem()
}

func (i MachineHealthCheckStatusArgs) ToMachineHealthCheckStatusOutput() MachineHealthCheckStatusOutput {
	return i.ToMachineHealthCheckStatusOutputWithContext(context.Background())
}

func (i MachineHealthCheckStatusArgs) ToMachineHealthCheckStatusOutputWithContext(ctx context.Context) MachineHealthCheckStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckStatusOutput)
}

func (i MachineHealthCheckStatusArgs) ToMachineHealthCheckStatusPtrOutput() MachineHealthCheckStatusPtrOutput {
	return i.ToMachineHealthCheckStatusPtrOutputWithContext(context.Background())
}

func (i MachineHealthCheckStatusArgs) ToMachineHealthCheckStatusPtrOutputWithContext(ctx context.Context) MachineHealthCheckStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckStatusOutput).ToMachineHealthCheckStatusPtrOutputWithContext(ctx)
}

// MachineHealthCheckStatusPtrInput is an input type that accepts MachineHealthCheckStatusArgs, MachineHealthCheckStatusPtr and MachineHealthCheckStatusPtrOutput values.
// You can construct a concrete instance of `MachineHealthCheckStatusPtrInput` via:
//
//	        MachineHealthCheckStatusArgs{...}
//
//	or:
//
//	        nil
type MachineHealthCheckStatusPtrInput interface {
	pulumi.Input

	ToMachineHealthCheckStatusPtrOutput() MachineHealthCheckStatusPtrOutput
	ToMachineHealthCheckStatusPtrOutputWithContext(context.Context) MachineHealthCheckStatusPtrOutput
}

type machineHealthCheckStatusPtrType MachineHealthCheckStatusArgs

func MachineHealthCheckStatusPtr(v *MachineHealthCheckStatusArgs) MachineHealthCheckStatusPtrInput {
	return (*machineHealthCheckStatusPtrType)(v)
}

func (*machineHealthCheckStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineHealthCheckStatus)(nil)).Elem()
}

func (i *machineHealthCheckStatusPtrType) ToMachineHealthCheckStatusPtrOutput() MachineHealthCheckStatusPtrOutput {
	return i.ToMachineHealthCheckStatusPtrOutputWithContext(context.Background())
}

func (i *machineHealthCheckStatusPtrType) ToMachineHealthCheckStatusPtrOutputWithContext(ctx context.Context) MachineHealthCheckStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckStatusPtrOutput)
}

// Most recently observed status of MachineHealthCheck resource
type MachineHealthCheckStatusOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckStatus)(nil)).Elem()
}

func (o MachineHealthCheckStatusOutput) ToMachineHealthCheckStatusOutput() MachineHealthCheckStatusOutput {
	return o
}

func (o MachineHealthCheckStatusOutput) ToMachineHealthCheckStatusOutputWithContext(ctx context.Context) MachineHealthCheckStatusOutput {
	return o
}

func (o MachineHealthCheckStatusOutput) ToMachineHealthCheckStatusPtrOutput() MachineHealthCheckStatusPtrOutput {
	return o.ToMachineHealthCheckStatusPtrOutputWithContext(context.Background())
}

func (o MachineHealthCheckStatusOutput) ToMachineHealthCheckStatusPtrOutputWithContext(ctx context.Context) MachineHealthCheckStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineHealthCheckStatus) *MachineHealthCheckStatus {
		return &v
	}).(MachineHealthCheckStatusPtrOutput)
}

// Conditions defines current service state of the MachineHealthCheck.
func (o MachineHealthCheckStatusOutput) Conditions() MachineHealthCheckStatusConditionsArrayOutput {
	return o.ApplyT(func(v MachineHealthCheckStatus) []MachineHealthCheckStatusConditions { return v.Conditions }).(MachineHealthCheckStatusConditionsArrayOutput)
}

// total number of healthy machines counted by this machine health check
func (o MachineHealthCheckStatusOutput) CurrentHealthy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckStatus) *int { return v.CurrentHealthy }).(pulumi.IntPtrOutput)
}

// total number of machines counted by this machine health check
func (o MachineHealthCheckStatusOutput) ExpectedMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckStatus) *int { return v.ExpectedMachines }).(pulumi.IntPtrOutput)
}

// ObservedGeneration is the latest generation observed by the controller.
func (o MachineHealthCheckStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// RemediationsAllowed is the number of further remediations allowed by this machine health check before maxUnhealthy short circuiting will be applied
func (o MachineHealthCheckStatusOutput) RemediationsAllowed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckStatus) *int { return v.RemediationsAllowed }).(pulumi.IntPtrOutput)
}

// Targets shows the current list of machines the machine health check is watching
func (o MachineHealthCheckStatusOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MachineHealthCheckStatus) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

type MachineHealthCheckStatusPtrOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineHealthCheckStatus)(nil)).Elem()
}

func (o MachineHealthCheckStatusPtrOutput) ToMachineHealthCheckStatusPtrOutput() MachineHealthCheckStatusPtrOutput {
	return o
}

func (o MachineHealthCheckStatusPtrOutput) ToMachineHealthCheckStatusPtrOutputWithContext(ctx context.Context) MachineHealthCheckStatusPtrOutput {
	return o
}

func (o MachineHealthCheckStatusPtrOutput) Elem() MachineHealthCheckStatusOutput {
	return o.ApplyT(func(v *MachineHealthCheckStatus) MachineHealthCheckStatus {
		if v != nil {
			return *v
		}
		var ret MachineHealthCheckStatus
		return ret
	}).(MachineHealthCheckStatusOutput)
}

// Conditions defines current service state of the MachineHealthCheck.
func (o MachineHealthCheckStatusPtrOutput) Conditions() MachineHealthCheckStatusConditionsArrayOutput {
	return o.ApplyT(func(v *MachineHealthCheckStatus) []MachineHealthCheckStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(MachineHealthCheckStatusConditionsArrayOutput)
}

// total number of healthy machines counted by this machine health check
func (o MachineHealthCheckStatusPtrOutput) CurrentHealthy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckStatus) *int {
		if v == nil {
			return nil
		}
		return v.CurrentHealthy
	}).(pulumi.IntPtrOutput)
}

// total number of machines counted by this machine health check
func (o MachineHealthCheckStatusPtrOutput) ExpectedMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckStatus) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedMachines
	}).(pulumi.IntPtrOutput)
}

// ObservedGeneration is the latest generation observed by the controller.
func (o MachineHealthCheckStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// RemediationsAllowed is the number of further remediations allowed by this machine health check before maxUnhealthy short circuiting will be applied
func (o MachineHealthCheckStatusPtrOutput) RemediationsAllowed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineHealthCheckStatus) *int {
		if v == nil {
			return nil
		}
		return v.RemediationsAllowed
	}).(pulumi.IntPtrOutput)
}

// Targets shows the current list of machines the machine health check is watching
func (o MachineHealthCheckStatusPtrOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MachineHealthCheckStatus) []string {
		if v == nil {
			return nil
		}
		return v.Targets
	}).(pulumi.StringArrayOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type MachineHealthCheckStatusConditions struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason *string `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity *string `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type string `pulumi:"type"`
}

// MachineHealthCheckStatusConditionsInput is an input type that accepts MachineHealthCheckStatusConditionsArgs and MachineHealthCheckStatusConditionsOutput values.
// You can construct a concrete instance of `MachineHealthCheckStatusConditionsInput` via:
//
//	MachineHealthCheckStatusConditionsArgs{...}
type MachineHealthCheckStatusConditionsInput interface {
	pulumi.Input

	ToMachineHealthCheckStatusConditionsOutput() MachineHealthCheckStatusConditionsOutput
	ToMachineHealthCheckStatusConditionsOutputWithContext(context.Context) MachineHealthCheckStatusConditionsOutput
}

// Condition defines an observation of a Cluster API resource operational state.
type MachineHealthCheckStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MachineHealthCheckStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckStatusConditions)(nil)).Elem()
}

func (i MachineHealthCheckStatusConditionsArgs) ToMachineHealthCheckStatusConditionsOutput() MachineHealthCheckStatusConditionsOutput {
	return i.ToMachineHealthCheckStatusConditionsOutputWithContext(context.Background())
}

func (i MachineHealthCheckStatusConditionsArgs) ToMachineHealthCheckStatusConditionsOutputWithContext(ctx context.Context) MachineHealthCheckStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckStatusConditionsOutput)
}

// MachineHealthCheckStatusConditionsArrayInput is an input type that accepts MachineHealthCheckStatusConditionsArray and MachineHealthCheckStatusConditionsArrayOutput values.
// You can construct a concrete instance of `MachineHealthCheckStatusConditionsArrayInput` via:
//
//	MachineHealthCheckStatusConditionsArray{ MachineHealthCheckStatusConditionsArgs{...} }
type MachineHealthCheckStatusConditionsArrayInput interface {
	pulumi.Input

	ToMachineHealthCheckStatusConditionsArrayOutput() MachineHealthCheckStatusConditionsArrayOutput
	ToMachineHealthCheckStatusConditionsArrayOutputWithContext(context.Context) MachineHealthCheckStatusConditionsArrayOutput
}

type MachineHealthCheckStatusConditionsArray []MachineHealthCheckStatusConditionsInput

func (MachineHealthCheckStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineHealthCheckStatusConditions)(nil)).Elem()
}

func (i MachineHealthCheckStatusConditionsArray) ToMachineHealthCheckStatusConditionsArrayOutput() MachineHealthCheckStatusConditionsArrayOutput {
	return i.ToMachineHealthCheckStatusConditionsArrayOutputWithContext(context.Background())
}

func (i MachineHealthCheckStatusConditionsArray) ToMachineHealthCheckStatusConditionsArrayOutputWithContext(ctx context.Context) MachineHealthCheckStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineHealthCheckStatusConditionsArrayOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type MachineHealthCheckStatusConditionsOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineHealthCheckStatusConditions)(nil)).Elem()
}

func (o MachineHealthCheckStatusConditionsOutput) ToMachineHealthCheckStatusConditionsOutput() MachineHealthCheckStatusConditionsOutput {
	return o
}

func (o MachineHealthCheckStatusConditionsOutput) ToMachineHealthCheckStatusConditionsOutputWithContext(ctx context.Context) MachineHealthCheckStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
func (o MachineHealthCheckStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v MachineHealthCheckStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A human readable message indicating details about the transition. This field may be empty.
func (o MachineHealthCheckStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
func (o MachineHealthCheckStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
func (o MachineHealthCheckStatusConditionsOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineHealthCheckStatusConditions) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o MachineHealthCheckStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MachineHealthCheckStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
func (o MachineHealthCheckStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MachineHealthCheckStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type MachineHealthCheckStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (MachineHealthCheckStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineHealthCheckStatusConditions)(nil)).Elem()
}

func (o MachineHealthCheckStatusConditionsArrayOutput) ToMachineHealthCheckStatusConditionsArrayOutput() MachineHealthCheckStatusConditionsArrayOutput {
	return o
}

func (o MachineHealthCheckStatusConditionsArrayOutput) ToMachineHealthCheckStatusConditionsArrayOutputWithContext(ctx context.Context) MachineHealthCheckStatusConditionsArrayOutput {
	return o
}

func (o MachineHealthCheckStatusConditionsArrayOutput) Index(i pulumi.IntInput) MachineHealthCheckStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineHealthCheckStatusConditions {
		return vs[0].([]MachineHealthCheckStatusConditions)[vs[1].(int)]
	}).(MachineHealthCheckStatusConditionsOutput)
}

type MachineMetadata struct {
}

// MachinePool is the Schema for the machinepools API.
type MachinePoolType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// MachinePoolSpec defines the desired state of MachinePool.
	Spec *MachinePoolSpec `pulumi:"spec"`
	// MachinePoolStatus defines the observed state of MachinePool.
	Status *MachinePoolStatus `pulumi:"status"`
}

type MachinePoolMetadata struct {
}

// MachinePoolSpec defines the desired state of MachinePool.
type MachinePoolSpec struct {
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName string `pulumi:"clusterName"`
	// FailureDomains is the list of failure domains this MachinePool should be attached to.
	FailureDomains []string `pulumi:"failureDomains"`
	// Minimum number of seconds for which a newly created machine instances should be ready. Defaults to 0 (machine instance will be considered available as soon as it is ready) NOTE: No logic is implemented for this field and it currently has no behaviour.
	MinReadySeconds *int `pulumi:"minReadySeconds"`
	// ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
	ProviderIDList []string `pulumi:"providerIDList"`
	// Number of desired machines. Defaults to 1. This is a pointer to distinguish between explicit zero and not specified.
	Replicas *int `pulumi:"replicas"`
	// Template describes the machines that will be created.
	Template MachinePoolSpecTemplate `pulumi:"template"`
}

// MachinePoolSpecInput is an input type that accepts MachinePoolSpecArgs and MachinePoolSpecOutput values.
// You can construct a concrete instance of `MachinePoolSpecInput` via:
//
//	MachinePoolSpecArgs{...}
type MachinePoolSpecInput interface {
	pulumi.Input

	ToMachinePoolSpecOutput() MachinePoolSpecOutput
	ToMachinePoolSpecOutputWithContext(context.Context) MachinePoolSpecOutput
}

// MachinePoolSpec defines the desired state of MachinePool.
type MachinePoolSpecArgs struct {
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// FailureDomains is the list of failure domains this MachinePool should be attached to.
	FailureDomains pulumi.StringArrayInput `pulumi:"failureDomains"`
	// Minimum number of seconds for which a newly created machine instances should be ready. Defaults to 0 (machine instance will be considered available as soon as it is ready) NOTE: No logic is implemented for this field and it currently has no behaviour.
	MinReadySeconds pulumi.IntPtrInput `pulumi:"minReadySeconds"`
	// ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
	ProviderIDList pulumi.StringArrayInput `pulumi:"providerIDList"`
	// Number of desired machines. Defaults to 1. This is a pointer to distinguish between explicit zero and not specified.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// Template describes the machines that will be created.
	Template MachinePoolSpecTemplateInput `pulumi:"template"`
}

func (MachinePoolSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpec)(nil)).Elem()
}

func (i MachinePoolSpecArgs) ToMachinePoolSpecOutput() MachinePoolSpecOutput {
	return i.ToMachinePoolSpecOutputWithContext(context.Background())
}

func (i MachinePoolSpecArgs) ToMachinePoolSpecOutputWithContext(ctx context.Context) MachinePoolSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecOutput)
}

func (i MachinePoolSpecArgs) ToMachinePoolSpecPtrOutput() MachinePoolSpecPtrOutput {
	return i.ToMachinePoolSpecPtrOutputWithContext(context.Background())
}

func (i MachinePoolSpecArgs) ToMachinePoolSpecPtrOutputWithContext(ctx context.Context) MachinePoolSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecOutput).ToMachinePoolSpecPtrOutputWithContext(ctx)
}

// MachinePoolSpecPtrInput is an input type that accepts MachinePoolSpecArgs, MachinePoolSpecPtr and MachinePoolSpecPtrOutput values.
// You can construct a concrete instance of `MachinePoolSpecPtrInput` via:
//
//	        MachinePoolSpecArgs{...}
//
//	or:
//
//	        nil
type MachinePoolSpecPtrInput interface {
	pulumi.Input

	ToMachinePoolSpecPtrOutput() MachinePoolSpecPtrOutput
	ToMachinePoolSpecPtrOutputWithContext(context.Context) MachinePoolSpecPtrOutput
}

type machinePoolSpecPtrType MachinePoolSpecArgs

func MachinePoolSpecPtr(v *MachinePoolSpecArgs) MachinePoolSpecPtrInput {
	return (*machinePoolSpecPtrType)(v)
}

func (*machinePoolSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpec)(nil)).Elem()
}

func (i *machinePoolSpecPtrType) ToMachinePoolSpecPtrOutput() MachinePoolSpecPtrOutput {
	return i.ToMachinePoolSpecPtrOutputWithContext(context.Background())
}

func (i *machinePoolSpecPtrType) ToMachinePoolSpecPtrOutputWithContext(ctx context.Context) MachinePoolSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecPtrOutput)
}

// MachinePoolSpec defines the desired state of MachinePool.
type MachinePoolSpecOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpec)(nil)).Elem()
}

func (o MachinePoolSpecOutput) ToMachinePoolSpecOutput() MachinePoolSpecOutput {
	return o
}

func (o MachinePoolSpecOutput) ToMachinePoolSpecOutputWithContext(ctx context.Context) MachinePoolSpecOutput {
	return o
}

func (o MachinePoolSpecOutput) ToMachinePoolSpecPtrOutput() MachinePoolSpecPtrOutput {
	return o.ToMachinePoolSpecPtrOutputWithContext(context.Background())
}

func (o MachinePoolSpecOutput) ToMachinePoolSpecPtrOutputWithContext(ctx context.Context) MachinePoolSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachinePoolSpec) *MachinePoolSpec {
		return &v
	}).(MachinePoolSpecPtrOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachinePoolSpecOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v MachinePoolSpec) string { return v.ClusterName }).(pulumi.StringOutput)
}

// FailureDomains is the list of failure domains this MachinePool should be attached to.
func (o MachinePoolSpecOutput) FailureDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MachinePoolSpec) []string { return v.FailureDomains }).(pulumi.StringArrayOutput)
}

// Minimum number of seconds for which a newly created machine instances should be ready. Defaults to 0 (machine instance will be considered available as soon as it is ready) NOTE: No logic is implemented for this field and it currently has no behaviour.
func (o MachinePoolSpecOutput) MinReadySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachinePoolSpec) *int { return v.MinReadySeconds }).(pulumi.IntPtrOutput)
}

// ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
func (o MachinePoolSpecOutput) ProviderIDList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MachinePoolSpec) []string { return v.ProviderIDList }).(pulumi.StringArrayOutput)
}

// Number of desired machines. Defaults to 1. This is a pointer to distinguish between explicit zero and not specified.
func (o MachinePoolSpecOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachinePoolSpec) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Template describes the machines that will be created.
func (o MachinePoolSpecOutput) Template() MachinePoolSpecTemplateOutput {
	return o.ApplyT(func(v MachinePoolSpec) MachinePoolSpecTemplate { return v.Template }).(MachinePoolSpecTemplateOutput)
}

type MachinePoolSpecPtrOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpec)(nil)).Elem()
}

func (o MachinePoolSpecPtrOutput) ToMachinePoolSpecPtrOutput() MachinePoolSpecPtrOutput {
	return o
}

func (o MachinePoolSpecPtrOutput) ToMachinePoolSpecPtrOutputWithContext(ctx context.Context) MachinePoolSpecPtrOutput {
	return o
}

func (o MachinePoolSpecPtrOutput) Elem() MachinePoolSpecOutput {
	return o.ApplyT(func(v *MachinePoolSpec) MachinePoolSpec {
		if v != nil {
			return *v
		}
		var ret MachinePoolSpec
		return ret
	}).(MachinePoolSpecOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachinePoolSpecPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// FailureDomains is the list of failure domains this MachinePool should be attached to.
func (o MachinePoolSpecPtrOutput) FailureDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MachinePoolSpec) []string {
		if v == nil {
			return nil
		}
		return v.FailureDomains
	}).(pulumi.StringArrayOutput)
}

// Minimum number of seconds for which a newly created machine instances should be ready. Defaults to 0 (machine instance will be considered available as soon as it is ready) NOTE: No logic is implemented for this field and it currently has no behaviour.
func (o MachinePoolSpecPtrOutput) MinReadySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpec) *int {
		if v == nil {
			return nil
		}
		return v.MinReadySeconds
	}).(pulumi.IntPtrOutput)
}

// ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
func (o MachinePoolSpecPtrOutput) ProviderIDList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MachinePoolSpec) []string {
		if v == nil {
			return nil
		}
		return v.ProviderIDList
	}).(pulumi.StringArrayOutput)
}

// Number of desired machines. Defaults to 1. This is a pointer to distinguish between explicit zero and not specified.
func (o MachinePoolSpecPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpec) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// Template describes the machines that will be created.
func (o MachinePoolSpecPtrOutput) Template() MachinePoolSpecTemplatePtrOutput {
	return o.ApplyT(func(v *MachinePoolSpec) *MachinePoolSpecTemplate {
		if v == nil {
			return nil
		}
		return &v.Template
	}).(MachinePoolSpecTemplatePtrOutput)
}

// Template describes the machines that will be created.
type MachinePoolSpecTemplate struct {
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *MachinePoolSpecTemplateMetadata `pulumi:"metadata"`
	// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec *MachinePoolSpecTemplateSpec `pulumi:"spec"`
}

// MachinePoolSpecTemplateInput is an input type that accepts MachinePoolSpecTemplateArgs and MachinePoolSpecTemplateOutput values.
// You can construct a concrete instance of `MachinePoolSpecTemplateInput` via:
//
//	MachinePoolSpecTemplateArgs{...}
type MachinePoolSpecTemplateInput interface {
	pulumi.Input

	ToMachinePoolSpecTemplateOutput() MachinePoolSpecTemplateOutput
	ToMachinePoolSpecTemplateOutputWithContext(context.Context) MachinePoolSpecTemplateOutput
}

// Template describes the machines that will be created.
type MachinePoolSpecTemplateArgs struct {
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata MachinePoolSpecTemplateMetadataPtrInput `pulumi:"metadata"`
	// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec MachinePoolSpecTemplateSpecPtrInput `pulumi:"spec"`
}

func (MachinePoolSpecTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpecTemplate)(nil)).Elem()
}

func (i MachinePoolSpecTemplateArgs) ToMachinePoolSpecTemplateOutput() MachinePoolSpecTemplateOutput {
	return i.ToMachinePoolSpecTemplateOutputWithContext(context.Background())
}

func (i MachinePoolSpecTemplateArgs) ToMachinePoolSpecTemplateOutputWithContext(ctx context.Context) MachinePoolSpecTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateOutput)
}

func (i MachinePoolSpecTemplateArgs) ToMachinePoolSpecTemplatePtrOutput() MachinePoolSpecTemplatePtrOutput {
	return i.ToMachinePoolSpecTemplatePtrOutputWithContext(context.Background())
}

func (i MachinePoolSpecTemplateArgs) ToMachinePoolSpecTemplatePtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateOutput).ToMachinePoolSpecTemplatePtrOutputWithContext(ctx)
}

// MachinePoolSpecTemplatePtrInput is an input type that accepts MachinePoolSpecTemplateArgs, MachinePoolSpecTemplatePtr and MachinePoolSpecTemplatePtrOutput values.
// You can construct a concrete instance of `MachinePoolSpecTemplatePtrInput` via:
//
//	        MachinePoolSpecTemplateArgs{...}
//
//	or:
//
//	        nil
type MachinePoolSpecTemplatePtrInput interface {
	pulumi.Input

	ToMachinePoolSpecTemplatePtrOutput() MachinePoolSpecTemplatePtrOutput
	ToMachinePoolSpecTemplatePtrOutputWithContext(context.Context) MachinePoolSpecTemplatePtrOutput
}

type machinePoolSpecTemplatePtrType MachinePoolSpecTemplateArgs

func MachinePoolSpecTemplatePtr(v *MachinePoolSpecTemplateArgs) MachinePoolSpecTemplatePtrInput {
	return (*machinePoolSpecTemplatePtrType)(v)
}

func (*machinePoolSpecTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpecTemplate)(nil)).Elem()
}

func (i *machinePoolSpecTemplatePtrType) ToMachinePoolSpecTemplatePtrOutput() MachinePoolSpecTemplatePtrOutput {
	return i.ToMachinePoolSpecTemplatePtrOutputWithContext(context.Background())
}

func (i *machinePoolSpecTemplatePtrType) ToMachinePoolSpecTemplatePtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplatePtrOutput)
}

// Template describes the machines that will be created.
type MachinePoolSpecTemplateOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpecTemplate)(nil)).Elem()
}

func (o MachinePoolSpecTemplateOutput) ToMachinePoolSpecTemplateOutput() MachinePoolSpecTemplateOutput {
	return o
}

func (o MachinePoolSpecTemplateOutput) ToMachinePoolSpecTemplateOutputWithContext(ctx context.Context) MachinePoolSpecTemplateOutput {
	return o
}

func (o MachinePoolSpecTemplateOutput) ToMachinePoolSpecTemplatePtrOutput() MachinePoolSpecTemplatePtrOutput {
	return o.ToMachinePoolSpecTemplatePtrOutputWithContext(context.Background())
}

func (o MachinePoolSpecTemplateOutput) ToMachinePoolSpecTemplatePtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachinePoolSpecTemplate) *MachinePoolSpecTemplate {
		return &v
	}).(MachinePoolSpecTemplatePtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o MachinePoolSpecTemplateOutput) Metadata() MachinePoolSpecTemplateMetadataPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplate) *MachinePoolSpecTemplateMetadata { return v.Metadata }).(MachinePoolSpecTemplateMetadataPtrOutput)
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
func (o MachinePoolSpecTemplateOutput) Spec() MachinePoolSpecTemplateSpecPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplate) *MachinePoolSpecTemplateSpec { return v.Spec }).(MachinePoolSpecTemplateSpecPtrOutput)
}

type MachinePoolSpecTemplatePtrOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpecTemplate)(nil)).Elem()
}

func (o MachinePoolSpecTemplatePtrOutput) ToMachinePoolSpecTemplatePtrOutput() MachinePoolSpecTemplatePtrOutput {
	return o
}

func (o MachinePoolSpecTemplatePtrOutput) ToMachinePoolSpecTemplatePtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplatePtrOutput {
	return o
}

func (o MachinePoolSpecTemplatePtrOutput) Elem() MachinePoolSpecTemplateOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplate) MachinePoolSpecTemplate {
		if v != nil {
			return *v
		}
		var ret MachinePoolSpecTemplate
		return ret
	}).(MachinePoolSpecTemplateOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o MachinePoolSpecTemplatePtrOutput) Metadata() MachinePoolSpecTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplate) *MachinePoolSpecTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(MachinePoolSpecTemplateMetadataPtrOutput)
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
func (o MachinePoolSpecTemplatePtrOutput) Spec() MachinePoolSpecTemplateSpecPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplate) *MachinePoolSpecTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(MachinePoolSpecTemplateSpecPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type MachinePoolSpecTemplateMetadata struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations map[string]string `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels map[string]string `pulumi:"labels"`
}

// MachinePoolSpecTemplateMetadataInput is an input type that accepts MachinePoolSpecTemplateMetadataArgs and MachinePoolSpecTemplateMetadataOutput values.
// You can construct a concrete instance of `MachinePoolSpecTemplateMetadataInput` via:
//
//	MachinePoolSpecTemplateMetadataArgs{...}
type MachinePoolSpecTemplateMetadataInput interface {
	pulumi.Input

	ToMachinePoolSpecTemplateMetadataOutput() MachinePoolSpecTemplateMetadataOutput
	ToMachinePoolSpecTemplateMetadataOutputWithContext(context.Context) MachinePoolSpecTemplateMetadataOutput
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type MachinePoolSpecTemplateMetadataArgs struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (MachinePoolSpecTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpecTemplateMetadata)(nil)).Elem()
}

func (i MachinePoolSpecTemplateMetadataArgs) ToMachinePoolSpecTemplateMetadataOutput() MachinePoolSpecTemplateMetadataOutput {
	return i.ToMachinePoolSpecTemplateMetadataOutputWithContext(context.Background())
}

func (i MachinePoolSpecTemplateMetadataArgs) ToMachinePoolSpecTemplateMetadataOutputWithContext(ctx context.Context) MachinePoolSpecTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateMetadataOutput)
}

func (i MachinePoolSpecTemplateMetadataArgs) ToMachinePoolSpecTemplateMetadataPtrOutput() MachinePoolSpecTemplateMetadataPtrOutput {
	return i.ToMachinePoolSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i MachinePoolSpecTemplateMetadataArgs) ToMachinePoolSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateMetadataOutput).ToMachinePoolSpecTemplateMetadataPtrOutputWithContext(ctx)
}

// MachinePoolSpecTemplateMetadataPtrInput is an input type that accepts MachinePoolSpecTemplateMetadataArgs, MachinePoolSpecTemplateMetadataPtr and MachinePoolSpecTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `MachinePoolSpecTemplateMetadataPtrInput` via:
//
//	        MachinePoolSpecTemplateMetadataArgs{...}
//
//	or:
//
//	        nil
type MachinePoolSpecTemplateMetadataPtrInput interface {
	pulumi.Input

	ToMachinePoolSpecTemplateMetadataPtrOutput() MachinePoolSpecTemplateMetadataPtrOutput
	ToMachinePoolSpecTemplateMetadataPtrOutputWithContext(context.Context) MachinePoolSpecTemplateMetadataPtrOutput
}

type machinePoolSpecTemplateMetadataPtrType MachinePoolSpecTemplateMetadataArgs

func MachinePoolSpecTemplateMetadataPtr(v *MachinePoolSpecTemplateMetadataArgs) MachinePoolSpecTemplateMetadataPtrInput {
	return (*machinePoolSpecTemplateMetadataPtrType)(v)
}

func (*machinePoolSpecTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpecTemplateMetadata)(nil)).Elem()
}

func (i *machinePoolSpecTemplateMetadataPtrType) ToMachinePoolSpecTemplateMetadataPtrOutput() MachinePoolSpecTemplateMetadataPtrOutput {
	return i.ToMachinePoolSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *machinePoolSpecTemplateMetadataPtrType) ToMachinePoolSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateMetadataPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type MachinePoolSpecTemplateMetadataOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpecTemplateMetadata)(nil)).Elem()
}

func (o MachinePoolSpecTemplateMetadataOutput) ToMachinePoolSpecTemplateMetadataOutput() MachinePoolSpecTemplateMetadataOutput {
	return o
}

func (o MachinePoolSpecTemplateMetadataOutput) ToMachinePoolSpecTemplateMetadataOutputWithContext(ctx context.Context) MachinePoolSpecTemplateMetadataOutput {
	return o
}

func (o MachinePoolSpecTemplateMetadataOutput) ToMachinePoolSpecTemplateMetadataPtrOutput() MachinePoolSpecTemplateMetadataPtrOutput {
	return o.ToMachinePoolSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o MachinePoolSpecTemplateMetadataOutput) ToMachinePoolSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachinePoolSpecTemplateMetadata) *MachinePoolSpecTemplateMetadata {
		return &v
	}).(MachinePoolSpecTemplateMetadataPtrOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o MachinePoolSpecTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o MachinePoolSpecTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type MachinePoolSpecTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpecTemplateMetadata)(nil)).Elem()
}

func (o MachinePoolSpecTemplateMetadataPtrOutput) ToMachinePoolSpecTemplateMetadataPtrOutput() MachinePoolSpecTemplateMetadataPtrOutput {
	return o
}

func (o MachinePoolSpecTemplateMetadataPtrOutput) ToMachinePoolSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateMetadataPtrOutput {
	return o
}

func (o MachinePoolSpecTemplateMetadataPtrOutput) Elem() MachinePoolSpecTemplateMetadataOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateMetadata) MachinePoolSpecTemplateMetadata {
		if v != nil {
			return *v
		}
		var ret MachinePoolSpecTemplateMetadata
		return ret
	}).(MachinePoolSpecTemplateMetadataOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o MachinePoolSpecTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o MachinePoolSpecTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
type MachinePoolSpecTemplateMetadataAnnotations struct {
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
type MachinePoolSpecTemplateMetadataLabels struct {
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type MachinePoolSpecTemplateSpec struct {
	// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
	Bootstrap MachinePoolSpecTemplateSpecBootstrap `pulumi:"bootstrap"`
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName string `pulumi:"clusterName"`
	// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
	FailureDomain *string `pulumi:"failureDomain"`
	// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
	InfrastructureRef MachinePoolSpecTemplateSpecInfrastructureRef `pulumi:"infrastructureRef"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
	NodeDeletionTimeout *string `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
	NodeDrainTimeout *string `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
	NodeVolumeDetachTimeout *string `pulumi:"nodeVolumeDetachTimeout"`
	// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
	ProviderID *string `pulumi:"providerID"`
	// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
	Version *string `pulumi:"version"`
}

// MachinePoolSpecTemplateSpecInput is an input type that accepts MachinePoolSpecTemplateSpecArgs and MachinePoolSpecTemplateSpecOutput values.
// You can construct a concrete instance of `MachinePoolSpecTemplateSpecInput` via:
//
//	MachinePoolSpecTemplateSpecArgs{...}
type MachinePoolSpecTemplateSpecInput interface {
	pulumi.Input

	ToMachinePoolSpecTemplateSpecOutput() MachinePoolSpecTemplateSpecOutput
	ToMachinePoolSpecTemplateSpecOutputWithContext(context.Context) MachinePoolSpecTemplateSpecOutput
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type MachinePoolSpecTemplateSpecArgs struct {
	// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
	Bootstrap MachinePoolSpecTemplateSpecBootstrapInput `pulumi:"bootstrap"`
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
	FailureDomain pulumi.StringPtrInput `pulumi:"failureDomain"`
	// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
	InfrastructureRef MachinePoolSpecTemplateSpecInfrastructureRefInput `pulumi:"infrastructureRef"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
	NodeDeletionTimeout pulumi.StringPtrInput `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
	NodeDrainTimeout pulumi.StringPtrInput `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
	NodeVolumeDetachTimeout pulumi.StringPtrInput `pulumi:"nodeVolumeDetachTimeout"`
	// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
	ProviderID pulumi.StringPtrInput `pulumi:"providerID"`
	// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (MachinePoolSpecTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpecTemplateSpec)(nil)).Elem()
}

func (i MachinePoolSpecTemplateSpecArgs) ToMachinePoolSpecTemplateSpecOutput() MachinePoolSpecTemplateSpecOutput {
	return i.ToMachinePoolSpecTemplateSpecOutputWithContext(context.Background())
}

func (i MachinePoolSpecTemplateSpecArgs) ToMachinePoolSpecTemplateSpecOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateSpecOutput)
}

func (i MachinePoolSpecTemplateSpecArgs) ToMachinePoolSpecTemplateSpecPtrOutput() MachinePoolSpecTemplateSpecPtrOutput {
	return i.ToMachinePoolSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (i MachinePoolSpecTemplateSpecArgs) ToMachinePoolSpecTemplateSpecPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateSpecOutput).ToMachinePoolSpecTemplateSpecPtrOutputWithContext(ctx)
}

// MachinePoolSpecTemplateSpecPtrInput is an input type that accepts MachinePoolSpecTemplateSpecArgs, MachinePoolSpecTemplateSpecPtr and MachinePoolSpecTemplateSpecPtrOutput values.
// You can construct a concrete instance of `MachinePoolSpecTemplateSpecPtrInput` via:
//
//	        MachinePoolSpecTemplateSpecArgs{...}
//
//	or:
//
//	        nil
type MachinePoolSpecTemplateSpecPtrInput interface {
	pulumi.Input

	ToMachinePoolSpecTemplateSpecPtrOutput() MachinePoolSpecTemplateSpecPtrOutput
	ToMachinePoolSpecTemplateSpecPtrOutputWithContext(context.Context) MachinePoolSpecTemplateSpecPtrOutput
}

type machinePoolSpecTemplateSpecPtrType MachinePoolSpecTemplateSpecArgs

func MachinePoolSpecTemplateSpecPtr(v *MachinePoolSpecTemplateSpecArgs) MachinePoolSpecTemplateSpecPtrInput {
	return (*machinePoolSpecTemplateSpecPtrType)(v)
}

func (*machinePoolSpecTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpecTemplateSpec)(nil)).Elem()
}

func (i *machinePoolSpecTemplateSpecPtrType) ToMachinePoolSpecTemplateSpecPtrOutput() MachinePoolSpecTemplateSpecPtrOutput {
	return i.ToMachinePoolSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *machinePoolSpecTemplateSpecPtrType) ToMachinePoolSpecTemplateSpecPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateSpecPtrOutput)
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type MachinePoolSpecTemplateSpecOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpecTemplateSpec)(nil)).Elem()
}

func (o MachinePoolSpecTemplateSpecOutput) ToMachinePoolSpecTemplateSpecOutput() MachinePoolSpecTemplateSpecOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecOutput) ToMachinePoolSpecTemplateSpecOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecOutput) ToMachinePoolSpecTemplateSpecPtrOutput() MachinePoolSpecTemplateSpecPtrOutput {
	return o.ToMachinePoolSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (o MachinePoolSpecTemplateSpecOutput) ToMachinePoolSpecTemplateSpecPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachinePoolSpecTemplateSpec) *MachinePoolSpecTemplateSpec {
		return &v
	}).(MachinePoolSpecTemplateSpecPtrOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
func (o MachinePoolSpecTemplateSpecOutput) Bootstrap() MachinePoolSpecTemplateSpecBootstrapOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpec) MachinePoolSpecTemplateSpecBootstrap { return v.Bootstrap }).(MachinePoolSpecTemplateSpecBootstrapOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachinePoolSpecTemplateSpecOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpec) string { return v.ClusterName }).(pulumi.StringOutput)
}

// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
func (o MachinePoolSpecTemplateSpecOutput) FailureDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpec) *string { return v.FailureDomain }).(pulumi.StringPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
func (o MachinePoolSpecTemplateSpecOutput) InfrastructureRef() MachinePoolSpecTemplateSpecInfrastructureRefOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpec) MachinePoolSpecTemplateSpecInfrastructureRef {
		return v.InfrastructureRef
	}).(MachinePoolSpecTemplateSpecInfrastructureRefOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
func (o MachinePoolSpecTemplateSpecOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpec) *string { return v.NodeDeletionTimeout }).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
func (o MachinePoolSpecTemplateSpecOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpec) *string { return v.NodeDrainTimeout }).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
func (o MachinePoolSpecTemplateSpecOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpec) *string { return v.NodeVolumeDetachTimeout }).(pulumi.StringPtrOutput)
}

// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
func (o MachinePoolSpecTemplateSpecOutput) ProviderID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpec) *string { return v.ProviderID }).(pulumi.StringPtrOutput)
}

// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
func (o MachinePoolSpecTemplateSpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MachinePoolSpecTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpecTemplateSpec)(nil)).Elem()
}

func (o MachinePoolSpecTemplateSpecPtrOutput) ToMachinePoolSpecTemplateSpecPtrOutput() MachinePoolSpecTemplateSpecPtrOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecPtrOutput) ToMachinePoolSpecTemplateSpecPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecPtrOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecPtrOutput) Elem() MachinePoolSpecTemplateSpecOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpec) MachinePoolSpecTemplateSpec {
		if v != nil {
			return *v
		}
		var ret MachinePoolSpecTemplateSpec
		return ret
	}).(MachinePoolSpecTemplateSpecOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
func (o MachinePoolSpecTemplateSpecPtrOutput) Bootstrap() MachinePoolSpecTemplateSpecBootstrapPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpec) *MachinePoolSpecTemplateSpecBootstrap {
		if v == nil {
			return nil
		}
		return &v.Bootstrap
	}).(MachinePoolSpecTemplateSpecBootstrapPtrOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachinePoolSpecTemplateSpecPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
func (o MachinePoolSpecTemplateSpecPtrOutput) FailureDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.FailureDomain
	}).(pulumi.StringPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
func (o MachinePoolSpecTemplateSpecPtrOutput) InfrastructureRef() MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpec) *MachinePoolSpecTemplateSpecInfrastructureRef {
		if v == nil {
			return nil
		}
		return &v.InfrastructureRef
	}).(MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
func (o MachinePoolSpecTemplateSpecPtrOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.NodeDeletionTimeout
	}).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
func (o MachinePoolSpecTemplateSpecPtrOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.NodeDrainTimeout
	}).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
func (o MachinePoolSpecTemplateSpecPtrOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.NodeVolumeDetachTimeout
	}).(pulumi.StringPtrOutput)
}

// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
func (o MachinePoolSpecTemplateSpecPtrOutput) ProviderID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.ProviderID
	}).(pulumi.StringPtrOutput)
}

// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
func (o MachinePoolSpecTemplateSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
type MachinePoolSpecTemplateSpecBootstrap struct {
	// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
	ConfigRef *MachinePoolSpecTemplateSpecBootstrapConfigRef `pulumi:"configRef"`
	// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
	DataSecretName *string `pulumi:"dataSecretName"`
}

// MachinePoolSpecTemplateSpecBootstrapInput is an input type that accepts MachinePoolSpecTemplateSpecBootstrapArgs and MachinePoolSpecTemplateSpecBootstrapOutput values.
// You can construct a concrete instance of `MachinePoolSpecTemplateSpecBootstrapInput` via:
//
//	MachinePoolSpecTemplateSpecBootstrapArgs{...}
type MachinePoolSpecTemplateSpecBootstrapInput interface {
	pulumi.Input

	ToMachinePoolSpecTemplateSpecBootstrapOutput() MachinePoolSpecTemplateSpecBootstrapOutput
	ToMachinePoolSpecTemplateSpecBootstrapOutputWithContext(context.Context) MachinePoolSpecTemplateSpecBootstrapOutput
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
type MachinePoolSpecTemplateSpecBootstrapArgs struct {
	// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
	ConfigRef MachinePoolSpecTemplateSpecBootstrapConfigRefPtrInput `pulumi:"configRef"`
	// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
	DataSecretName pulumi.StringPtrInput `pulumi:"dataSecretName"`
}

func (MachinePoolSpecTemplateSpecBootstrapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpecTemplateSpecBootstrap)(nil)).Elem()
}

func (i MachinePoolSpecTemplateSpecBootstrapArgs) ToMachinePoolSpecTemplateSpecBootstrapOutput() MachinePoolSpecTemplateSpecBootstrapOutput {
	return i.ToMachinePoolSpecTemplateSpecBootstrapOutputWithContext(context.Background())
}

func (i MachinePoolSpecTemplateSpecBootstrapArgs) ToMachinePoolSpecTemplateSpecBootstrapOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecBootstrapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateSpecBootstrapOutput)
}

func (i MachinePoolSpecTemplateSpecBootstrapArgs) ToMachinePoolSpecTemplateSpecBootstrapPtrOutput() MachinePoolSpecTemplateSpecBootstrapPtrOutput {
	return i.ToMachinePoolSpecTemplateSpecBootstrapPtrOutputWithContext(context.Background())
}

func (i MachinePoolSpecTemplateSpecBootstrapArgs) ToMachinePoolSpecTemplateSpecBootstrapPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecBootstrapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateSpecBootstrapOutput).ToMachinePoolSpecTemplateSpecBootstrapPtrOutputWithContext(ctx)
}

// MachinePoolSpecTemplateSpecBootstrapPtrInput is an input type that accepts MachinePoolSpecTemplateSpecBootstrapArgs, MachinePoolSpecTemplateSpecBootstrapPtr and MachinePoolSpecTemplateSpecBootstrapPtrOutput values.
// You can construct a concrete instance of `MachinePoolSpecTemplateSpecBootstrapPtrInput` via:
//
//	        MachinePoolSpecTemplateSpecBootstrapArgs{...}
//
//	or:
//
//	        nil
type MachinePoolSpecTemplateSpecBootstrapPtrInput interface {
	pulumi.Input

	ToMachinePoolSpecTemplateSpecBootstrapPtrOutput() MachinePoolSpecTemplateSpecBootstrapPtrOutput
	ToMachinePoolSpecTemplateSpecBootstrapPtrOutputWithContext(context.Context) MachinePoolSpecTemplateSpecBootstrapPtrOutput
}

type machinePoolSpecTemplateSpecBootstrapPtrType MachinePoolSpecTemplateSpecBootstrapArgs

func MachinePoolSpecTemplateSpecBootstrapPtr(v *MachinePoolSpecTemplateSpecBootstrapArgs) MachinePoolSpecTemplateSpecBootstrapPtrInput {
	return (*machinePoolSpecTemplateSpecBootstrapPtrType)(v)
}

func (*machinePoolSpecTemplateSpecBootstrapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpecTemplateSpecBootstrap)(nil)).Elem()
}

func (i *machinePoolSpecTemplateSpecBootstrapPtrType) ToMachinePoolSpecTemplateSpecBootstrapPtrOutput() MachinePoolSpecTemplateSpecBootstrapPtrOutput {
	return i.ToMachinePoolSpecTemplateSpecBootstrapPtrOutputWithContext(context.Background())
}

func (i *machinePoolSpecTemplateSpecBootstrapPtrType) ToMachinePoolSpecTemplateSpecBootstrapPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecBootstrapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateSpecBootstrapPtrOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
type MachinePoolSpecTemplateSpecBootstrapOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecTemplateSpecBootstrapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpecTemplateSpecBootstrap)(nil)).Elem()
}

func (o MachinePoolSpecTemplateSpecBootstrapOutput) ToMachinePoolSpecTemplateSpecBootstrapOutput() MachinePoolSpecTemplateSpecBootstrapOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecBootstrapOutput) ToMachinePoolSpecTemplateSpecBootstrapOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecBootstrapOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecBootstrapOutput) ToMachinePoolSpecTemplateSpecBootstrapPtrOutput() MachinePoolSpecTemplateSpecBootstrapPtrOutput {
	return o.ToMachinePoolSpecTemplateSpecBootstrapPtrOutputWithContext(context.Background())
}

func (o MachinePoolSpecTemplateSpecBootstrapOutput) ToMachinePoolSpecTemplateSpecBootstrapPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecBootstrapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachinePoolSpecTemplateSpecBootstrap) *MachinePoolSpecTemplateSpecBootstrap {
		return &v
	}).(MachinePoolSpecTemplateSpecBootstrapPtrOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
func (o MachinePoolSpecTemplateSpecBootstrapOutput) ConfigRef() MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecBootstrap) *MachinePoolSpecTemplateSpecBootstrapConfigRef {
		return v.ConfigRef
	}).(MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput)
}

// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
func (o MachinePoolSpecTemplateSpecBootstrapOutput) DataSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecBootstrap) *string { return v.DataSecretName }).(pulumi.StringPtrOutput)
}

type MachinePoolSpecTemplateSpecBootstrapPtrOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecTemplateSpecBootstrapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpecTemplateSpecBootstrap)(nil)).Elem()
}

func (o MachinePoolSpecTemplateSpecBootstrapPtrOutput) ToMachinePoolSpecTemplateSpecBootstrapPtrOutput() MachinePoolSpecTemplateSpecBootstrapPtrOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecBootstrapPtrOutput) ToMachinePoolSpecTemplateSpecBootstrapPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecBootstrapPtrOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecBootstrapPtrOutput) Elem() MachinePoolSpecTemplateSpecBootstrapOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecBootstrap) MachinePoolSpecTemplateSpecBootstrap {
		if v != nil {
			return *v
		}
		var ret MachinePoolSpecTemplateSpecBootstrap
		return ret
	}).(MachinePoolSpecTemplateSpecBootstrapOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
func (o MachinePoolSpecTemplateSpecBootstrapPtrOutput) ConfigRef() MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecBootstrap) *MachinePoolSpecTemplateSpecBootstrapConfigRef {
		if v == nil {
			return nil
		}
		return v.ConfigRef
	}).(MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput)
}

// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
func (o MachinePoolSpecTemplateSpecBootstrapPtrOutput) DataSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecBootstrap) *string {
		if v == nil {
			return nil
		}
		return v.DataSecretName
	}).(pulumi.StringPtrOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
type MachinePoolSpecTemplateSpecBootstrapConfigRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// MachinePoolSpecTemplateSpecBootstrapConfigRefInput is an input type that accepts MachinePoolSpecTemplateSpecBootstrapConfigRefArgs and MachinePoolSpecTemplateSpecBootstrapConfigRefOutput values.
// You can construct a concrete instance of `MachinePoolSpecTemplateSpecBootstrapConfigRefInput` via:
//
//	MachinePoolSpecTemplateSpecBootstrapConfigRefArgs{...}
type MachinePoolSpecTemplateSpecBootstrapConfigRefInput interface {
	pulumi.Input

	ToMachinePoolSpecTemplateSpecBootstrapConfigRefOutput() MachinePoolSpecTemplateSpecBootstrapConfigRefOutput
	ToMachinePoolSpecTemplateSpecBootstrapConfigRefOutputWithContext(context.Context) MachinePoolSpecTemplateSpecBootstrapConfigRefOutput
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
type MachinePoolSpecTemplateSpecBootstrapConfigRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (MachinePoolSpecTemplateSpecBootstrapConfigRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpecTemplateSpecBootstrapConfigRef)(nil)).Elem()
}

func (i MachinePoolSpecTemplateSpecBootstrapConfigRefArgs) ToMachinePoolSpecTemplateSpecBootstrapConfigRefOutput() MachinePoolSpecTemplateSpecBootstrapConfigRefOutput {
	return i.ToMachinePoolSpecTemplateSpecBootstrapConfigRefOutputWithContext(context.Background())
}

func (i MachinePoolSpecTemplateSpecBootstrapConfigRefArgs) ToMachinePoolSpecTemplateSpecBootstrapConfigRefOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecBootstrapConfigRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateSpecBootstrapConfigRefOutput)
}

func (i MachinePoolSpecTemplateSpecBootstrapConfigRefArgs) ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput() MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return i.ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(context.Background())
}

func (i MachinePoolSpecTemplateSpecBootstrapConfigRefArgs) ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateSpecBootstrapConfigRefOutput).ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx)
}

// MachinePoolSpecTemplateSpecBootstrapConfigRefPtrInput is an input type that accepts MachinePoolSpecTemplateSpecBootstrapConfigRefArgs, MachinePoolSpecTemplateSpecBootstrapConfigRefPtr and MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput values.
// You can construct a concrete instance of `MachinePoolSpecTemplateSpecBootstrapConfigRefPtrInput` via:
//
//	        MachinePoolSpecTemplateSpecBootstrapConfigRefArgs{...}
//
//	or:
//
//	        nil
type MachinePoolSpecTemplateSpecBootstrapConfigRefPtrInput interface {
	pulumi.Input

	ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput() MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput
	ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(context.Context) MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput
}

type machinePoolSpecTemplateSpecBootstrapConfigRefPtrType MachinePoolSpecTemplateSpecBootstrapConfigRefArgs

func MachinePoolSpecTemplateSpecBootstrapConfigRefPtr(v *MachinePoolSpecTemplateSpecBootstrapConfigRefArgs) MachinePoolSpecTemplateSpecBootstrapConfigRefPtrInput {
	return (*machinePoolSpecTemplateSpecBootstrapConfigRefPtrType)(v)
}

func (*machinePoolSpecTemplateSpecBootstrapConfigRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpecTemplateSpecBootstrapConfigRef)(nil)).Elem()
}

func (i *machinePoolSpecTemplateSpecBootstrapConfigRefPtrType) ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput() MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return i.ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(context.Background())
}

func (i *machinePoolSpecTemplateSpecBootstrapConfigRefPtrType) ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
type MachinePoolSpecTemplateSpecBootstrapConfigRefOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecTemplateSpecBootstrapConfigRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpecTemplateSpecBootstrapConfigRef)(nil)).Elem()
}

func (o MachinePoolSpecTemplateSpecBootstrapConfigRefOutput) ToMachinePoolSpecTemplateSpecBootstrapConfigRefOutput() MachinePoolSpecTemplateSpecBootstrapConfigRefOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecBootstrapConfigRefOutput) ToMachinePoolSpecTemplateSpecBootstrapConfigRefOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecBootstrapConfigRefOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecBootstrapConfigRefOutput) ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput() MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o.ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(context.Background())
}

func (o MachinePoolSpecTemplateSpecBootstrapConfigRefOutput) ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachinePoolSpecTemplateSpecBootstrapConfigRef) *MachinePoolSpecTemplateSpecBootstrapConfigRef {
		return &v
	}).(MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput)
}

// API version of the referent.
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecBootstrapConfigRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecBootstrapConfigRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecBootstrapConfigRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecBootstrapConfigRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecBootstrapConfigRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecBootstrapConfigRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecBootstrapConfigRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpecTemplateSpecBootstrapConfigRef)(nil)).Elem()
}

func (o MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput) ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput() MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput) ToMachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput) Elem() MachinePoolSpecTemplateSpecBootstrapConfigRefOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecBootstrapConfigRef) MachinePoolSpecTemplateSpecBootstrapConfigRef {
		if v != nil {
			return *v
		}
		var ret MachinePoolSpecTemplateSpecBootstrapConfigRef
		return ret
	}).(MachinePoolSpecTemplateSpecBootstrapConfigRefOutput)
}

// API version of the referent.
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
type MachinePoolSpecTemplateSpecInfrastructureRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// MachinePoolSpecTemplateSpecInfrastructureRefInput is an input type that accepts MachinePoolSpecTemplateSpecInfrastructureRefArgs and MachinePoolSpecTemplateSpecInfrastructureRefOutput values.
// You can construct a concrete instance of `MachinePoolSpecTemplateSpecInfrastructureRefInput` via:
//
//	MachinePoolSpecTemplateSpecInfrastructureRefArgs{...}
type MachinePoolSpecTemplateSpecInfrastructureRefInput interface {
	pulumi.Input

	ToMachinePoolSpecTemplateSpecInfrastructureRefOutput() MachinePoolSpecTemplateSpecInfrastructureRefOutput
	ToMachinePoolSpecTemplateSpecInfrastructureRefOutputWithContext(context.Context) MachinePoolSpecTemplateSpecInfrastructureRefOutput
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
type MachinePoolSpecTemplateSpecInfrastructureRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (MachinePoolSpecTemplateSpecInfrastructureRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpecTemplateSpecInfrastructureRef)(nil)).Elem()
}

func (i MachinePoolSpecTemplateSpecInfrastructureRefArgs) ToMachinePoolSpecTemplateSpecInfrastructureRefOutput() MachinePoolSpecTemplateSpecInfrastructureRefOutput {
	return i.ToMachinePoolSpecTemplateSpecInfrastructureRefOutputWithContext(context.Background())
}

func (i MachinePoolSpecTemplateSpecInfrastructureRefArgs) ToMachinePoolSpecTemplateSpecInfrastructureRefOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecInfrastructureRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateSpecInfrastructureRefOutput)
}

func (i MachinePoolSpecTemplateSpecInfrastructureRefArgs) ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutput() MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput {
	return i.ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i MachinePoolSpecTemplateSpecInfrastructureRefArgs) ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateSpecInfrastructureRefOutput).ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx)
}

// MachinePoolSpecTemplateSpecInfrastructureRefPtrInput is an input type that accepts MachinePoolSpecTemplateSpecInfrastructureRefArgs, MachinePoolSpecTemplateSpecInfrastructureRefPtr and MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput values.
// You can construct a concrete instance of `MachinePoolSpecTemplateSpecInfrastructureRefPtrInput` via:
//
//	        MachinePoolSpecTemplateSpecInfrastructureRefArgs{...}
//
//	or:
//
//	        nil
type MachinePoolSpecTemplateSpecInfrastructureRefPtrInput interface {
	pulumi.Input

	ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutput() MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput
	ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutputWithContext(context.Context) MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput
}

type machinePoolSpecTemplateSpecInfrastructureRefPtrType MachinePoolSpecTemplateSpecInfrastructureRefArgs

func MachinePoolSpecTemplateSpecInfrastructureRefPtr(v *MachinePoolSpecTemplateSpecInfrastructureRefArgs) MachinePoolSpecTemplateSpecInfrastructureRefPtrInput {
	return (*machinePoolSpecTemplateSpecInfrastructureRefPtrType)(v)
}

func (*machinePoolSpecTemplateSpecInfrastructureRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpecTemplateSpecInfrastructureRef)(nil)).Elem()
}

func (i *machinePoolSpecTemplateSpecInfrastructureRefPtrType) ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutput() MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput {
	return i.ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i *machinePoolSpecTemplateSpecInfrastructureRefPtrType) ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
type MachinePoolSpecTemplateSpecInfrastructureRefOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecTemplateSpecInfrastructureRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolSpecTemplateSpecInfrastructureRef)(nil)).Elem()
}

func (o MachinePoolSpecTemplateSpecInfrastructureRefOutput) ToMachinePoolSpecTemplateSpecInfrastructureRefOutput() MachinePoolSpecTemplateSpecInfrastructureRefOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecInfrastructureRefOutput) ToMachinePoolSpecTemplateSpecInfrastructureRefOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecInfrastructureRefOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecInfrastructureRefOutput) ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutput() MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput {
	return o.ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (o MachinePoolSpecTemplateSpecInfrastructureRefOutput) ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachinePoolSpecTemplateSpecInfrastructureRef) *MachinePoolSpecTemplateSpecInfrastructureRef {
		return &v
	}).(MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput)
}

// API version of the referent.
func (o MachinePoolSpecTemplateSpecInfrastructureRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecInfrastructureRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachinePoolSpecTemplateSpecInfrastructureRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecInfrastructureRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachinePoolSpecTemplateSpecInfrastructureRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecInfrastructureRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachinePoolSpecTemplateSpecInfrastructureRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecInfrastructureRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachinePoolSpecTemplateSpecInfrastructureRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecInfrastructureRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachinePoolSpecTemplateSpecInfrastructureRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecInfrastructureRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachinePoolSpecTemplateSpecInfrastructureRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolSpecTemplateSpecInfrastructureRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput struct{ *pulumi.OutputState }

func (MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolSpecTemplateSpecInfrastructureRef)(nil)).Elem()
}

func (o MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput) ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutput() MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput) ToMachinePoolSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput {
	return o
}

func (o MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput) Elem() MachinePoolSpecTemplateSpecInfrastructureRefOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecInfrastructureRef) MachinePoolSpecTemplateSpecInfrastructureRef {
		if v != nil {
			return *v
		}
		var ret MachinePoolSpecTemplateSpecInfrastructureRef
		return ret
	}).(MachinePoolSpecTemplateSpecInfrastructureRefOutput)
}

// API version of the referent.
func (o MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// MachinePoolStatus defines the observed state of MachinePool.
type MachinePoolStatus struct {
	// The number of available replicas (ready for at least minReadySeconds) for this MachinePool.
	AvailableReplicas *int `pulumi:"availableReplicas"`
	// BootstrapReady is the state of the bootstrap provider.
	BootstrapReady *bool `pulumi:"bootstrapReady"`
	// Conditions define the current service state of the MachinePool.
	Conditions []MachinePoolStatusConditions `pulumi:"conditions"`
	// FailureMessage indicates that there is a problem reconciling the state, and will be set to a descriptive error message.
	FailureMessage *string `pulumi:"failureMessage"`
	// FailureReason indicates that there is a problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.
	FailureReason *string `pulumi:"failureReason"`
	// InfrastructureReady is the state of the infrastructure provider.
	InfrastructureReady *bool `pulumi:"infrastructureReady"`
	// NodeRefs will point to the corresponding Nodes if it they exist.
	NodeRefs []MachinePoolStatusNodeRefs `pulumi:"nodeRefs"`
	// ObservedGeneration is the latest generation observed by the controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc.
	Phase *string `pulumi:"phase"`
	// The number of ready replicas for this MachinePool. A machine is considered ready when the node has been created and is "Ready".
	ReadyReplicas *int `pulumi:"readyReplicas"`
	// Replicas is the most recently observed number of replicas.
	Replicas *int `pulumi:"replicas"`
	// Total number of unavailable machine instances targeted by this machine pool. This is the total number of machine instances that are still required for the machine pool to have 100% available capacity. They may either be machine instances that are running but not yet available or machine instances that still have not been created.
	UnavailableReplicas *int `pulumi:"unavailableReplicas"`
}

// MachinePoolStatusInput is an input type that accepts MachinePoolStatusArgs and MachinePoolStatusOutput values.
// You can construct a concrete instance of `MachinePoolStatusInput` via:
//
//	MachinePoolStatusArgs{...}
type MachinePoolStatusInput interface {
	pulumi.Input

	ToMachinePoolStatusOutput() MachinePoolStatusOutput
	ToMachinePoolStatusOutputWithContext(context.Context) MachinePoolStatusOutput
}

// MachinePoolStatus defines the observed state of MachinePool.
type MachinePoolStatusArgs struct {
	// The number of available replicas (ready for at least minReadySeconds) for this MachinePool.
	AvailableReplicas pulumi.IntPtrInput `pulumi:"availableReplicas"`
	// BootstrapReady is the state of the bootstrap provider.
	BootstrapReady pulumi.BoolPtrInput `pulumi:"bootstrapReady"`
	// Conditions define the current service state of the MachinePool.
	Conditions MachinePoolStatusConditionsArrayInput `pulumi:"conditions"`
	// FailureMessage indicates that there is a problem reconciling the state, and will be set to a descriptive error message.
	FailureMessage pulumi.StringPtrInput `pulumi:"failureMessage"`
	// FailureReason indicates that there is a problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.
	FailureReason pulumi.StringPtrInput `pulumi:"failureReason"`
	// InfrastructureReady is the state of the infrastructure provider.
	InfrastructureReady pulumi.BoolPtrInput `pulumi:"infrastructureReady"`
	// NodeRefs will point to the corresponding Nodes if it they exist.
	NodeRefs MachinePoolStatusNodeRefsArrayInput `pulumi:"nodeRefs"`
	// ObservedGeneration is the latest generation observed by the controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// The number of ready replicas for this MachinePool. A machine is considered ready when the node has been created and is "Ready".
	ReadyReplicas pulumi.IntPtrInput `pulumi:"readyReplicas"`
	// Replicas is the most recently observed number of replicas.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// Total number of unavailable machine instances targeted by this machine pool. This is the total number of machine instances that are still required for the machine pool to have 100% available capacity. They may either be machine instances that are running but not yet available or machine instances that still have not been created.
	UnavailableReplicas pulumi.IntPtrInput `pulumi:"unavailableReplicas"`
}

func (MachinePoolStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolStatus)(nil)).Elem()
}

func (i MachinePoolStatusArgs) ToMachinePoolStatusOutput() MachinePoolStatusOutput {
	return i.ToMachinePoolStatusOutputWithContext(context.Background())
}

func (i MachinePoolStatusArgs) ToMachinePoolStatusOutputWithContext(ctx context.Context) MachinePoolStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolStatusOutput)
}

func (i MachinePoolStatusArgs) ToMachinePoolStatusPtrOutput() MachinePoolStatusPtrOutput {
	return i.ToMachinePoolStatusPtrOutputWithContext(context.Background())
}

func (i MachinePoolStatusArgs) ToMachinePoolStatusPtrOutputWithContext(ctx context.Context) MachinePoolStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolStatusOutput).ToMachinePoolStatusPtrOutputWithContext(ctx)
}

// MachinePoolStatusPtrInput is an input type that accepts MachinePoolStatusArgs, MachinePoolStatusPtr and MachinePoolStatusPtrOutput values.
// You can construct a concrete instance of `MachinePoolStatusPtrInput` via:
//
//	        MachinePoolStatusArgs{...}
//
//	or:
//
//	        nil
type MachinePoolStatusPtrInput interface {
	pulumi.Input

	ToMachinePoolStatusPtrOutput() MachinePoolStatusPtrOutput
	ToMachinePoolStatusPtrOutputWithContext(context.Context) MachinePoolStatusPtrOutput
}

type machinePoolStatusPtrType MachinePoolStatusArgs

func MachinePoolStatusPtr(v *MachinePoolStatusArgs) MachinePoolStatusPtrInput {
	return (*machinePoolStatusPtrType)(v)
}

func (*machinePoolStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolStatus)(nil)).Elem()
}

func (i *machinePoolStatusPtrType) ToMachinePoolStatusPtrOutput() MachinePoolStatusPtrOutput {
	return i.ToMachinePoolStatusPtrOutputWithContext(context.Background())
}

func (i *machinePoolStatusPtrType) ToMachinePoolStatusPtrOutputWithContext(ctx context.Context) MachinePoolStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolStatusPtrOutput)
}

// MachinePoolStatus defines the observed state of MachinePool.
type MachinePoolStatusOutput struct{ *pulumi.OutputState }

func (MachinePoolStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolStatus)(nil)).Elem()
}

func (o MachinePoolStatusOutput) ToMachinePoolStatusOutput() MachinePoolStatusOutput {
	return o
}

func (o MachinePoolStatusOutput) ToMachinePoolStatusOutputWithContext(ctx context.Context) MachinePoolStatusOutput {
	return o
}

func (o MachinePoolStatusOutput) ToMachinePoolStatusPtrOutput() MachinePoolStatusPtrOutput {
	return o.ToMachinePoolStatusPtrOutputWithContext(context.Background())
}

func (o MachinePoolStatusOutput) ToMachinePoolStatusPtrOutputWithContext(ctx context.Context) MachinePoolStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachinePoolStatus) *MachinePoolStatus {
		return &v
	}).(MachinePoolStatusPtrOutput)
}

// The number of available replicas (ready for at least minReadySeconds) for this MachinePool.
func (o MachinePoolStatusOutput) AvailableReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachinePoolStatus) *int { return v.AvailableReplicas }).(pulumi.IntPtrOutput)
}

// BootstrapReady is the state of the bootstrap provider.
func (o MachinePoolStatusOutput) BootstrapReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MachinePoolStatus) *bool { return v.BootstrapReady }).(pulumi.BoolPtrOutput)
}

// Conditions define the current service state of the MachinePool.
func (o MachinePoolStatusOutput) Conditions() MachinePoolStatusConditionsArrayOutput {
	return o.ApplyT(func(v MachinePoolStatus) []MachinePoolStatusConditions { return v.Conditions }).(MachinePoolStatusConditionsArrayOutput)
}

// FailureMessage indicates that there is a problem reconciling the state, and will be set to a descriptive error message.
func (o MachinePoolStatusOutput) FailureMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolStatus) *string { return v.FailureMessage }).(pulumi.StringPtrOutput)
}

// FailureReason indicates that there is a problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.
func (o MachinePoolStatusOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolStatus) *string { return v.FailureReason }).(pulumi.StringPtrOutput)
}

// InfrastructureReady is the state of the infrastructure provider.
func (o MachinePoolStatusOutput) InfrastructureReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MachinePoolStatus) *bool { return v.InfrastructureReady }).(pulumi.BoolPtrOutput)
}

// NodeRefs will point to the corresponding Nodes if it they exist.
func (o MachinePoolStatusOutput) NodeRefs() MachinePoolStatusNodeRefsArrayOutput {
	return o.ApplyT(func(v MachinePoolStatus) []MachinePoolStatusNodeRefs { return v.NodeRefs }).(MachinePoolStatusNodeRefsArrayOutput)
}

// ObservedGeneration is the latest generation observed by the controller.
func (o MachinePoolStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachinePoolStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc.
func (o MachinePoolStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// The number of ready replicas for this MachinePool. A machine is considered ready when the node has been created and is "Ready".
func (o MachinePoolStatusOutput) ReadyReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachinePoolStatus) *int { return v.ReadyReplicas }).(pulumi.IntPtrOutput)
}

// Replicas is the most recently observed number of replicas.
func (o MachinePoolStatusOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachinePoolStatus) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Total number of unavailable machine instances targeted by this machine pool. This is the total number of machine instances that are still required for the machine pool to have 100% available capacity. They may either be machine instances that are running but not yet available or machine instances that still have not been created.
func (o MachinePoolStatusOutput) UnavailableReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachinePoolStatus) *int { return v.UnavailableReplicas }).(pulumi.IntPtrOutput)
}

type MachinePoolStatusPtrOutput struct{ *pulumi.OutputState }

func (MachinePoolStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachinePoolStatus)(nil)).Elem()
}

func (o MachinePoolStatusPtrOutput) ToMachinePoolStatusPtrOutput() MachinePoolStatusPtrOutput {
	return o
}

func (o MachinePoolStatusPtrOutput) ToMachinePoolStatusPtrOutputWithContext(ctx context.Context) MachinePoolStatusPtrOutput {
	return o
}

func (o MachinePoolStatusPtrOutput) Elem() MachinePoolStatusOutput {
	return o.ApplyT(func(v *MachinePoolStatus) MachinePoolStatus {
		if v != nil {
			return *v
		}
		var ret MachinePoolStatus
		return ret
	}).(MachinePoolStatusOutput)
}

// The number of available replicas (ready for at least minReadySeconds) for this MachinePool.
func (o MachinePoolStatusPtrOutput) AvailableReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachinePoolStatus) *int {
		if v == nil {
			return nil
		}
		return v.AvailableReplicas
	}).(pulumi.IntPtrOutput)
}

// BootstrapReady is the state of the bootstrap provider.
func (o MachinePoolStatusPtrOutput) BootstrapReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MachinePoolStatus) *bool {
		if v == nil {
			return nil
		}
		return v.BootstrapReady
	}).(pulumi.BoolPtrOutput)
}

// Conditions define the current service state of the MachinePool.
func (o MachinePoolStatusPtrOutput) Conditions() MachinePoolStatusConditionsArrayOutput {
	return o.ApplyT(func(v *MachinePoolStatus) []MachinePoolStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(MachinePoolStatusConditionsArrayOutput)
}

// FailureMessage indicates that there is a problem reconciling the state, and will be set to a descriptive error message.
func (o MachinePoolStatusPtrOutput) FailureMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolStatus) *string {
		if v == nil {
			return nil
		}
		return v.FailureMessage
	}).(pulumi.StringPtrOutput)
}

// FailureReason indicates that there is a problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.
func (o MachinePoolStatusPtrOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolStatus) *string {
		if v == nil {
			return nil
		}
		return v.FailureReason
	}).(pulumi.StringPtrOutput)
}

// InfrastructureReady is the state of the infrastructure provider.
func (o MachinePoolStatusPtrOutput) InfrastructureReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MachinePoolStatus) *bool {
		if v == nil {
			return nil
		}
		return v.InfrastructureReady
	}).(pulumi.BoolPtrOutput)
}

// NodeRefs will point to the corresponding Nodes if it they exist.
func (o MachinePoolStatusPtrOutput) NodeRefs() MachinePoolStatusNodeRefsArrayOutput {
	return o.ApplyT(func(v *MachinePoolStatus) []MachinePoolStatusNodeRefs {
		if v == nil {
			return nil
		}
		return v.NodeRefs
	}).(MachinePoolStatusNodeRefsArrayOutput)
}

// ObservedGeneration is the latest generation observed by the controller.
func (o MachinePoolStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachinePoolStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc.
func (o MachinePoolStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachinePoolStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// The number of ready replicas for this MachinePool. A machine is considered ready when the node has been created and is "Ready".
func (o MachinePoolStatusPtrOutput) ReadyReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachinePoolStatus) *int {
		if v == nil {
			return nil
		}
		return v.ReadyReplicas
	}).(pulumi.IntPtrOutput)
}

// Replicas is the most recently observed number of replicas.
func (o MachinePoolStatusPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachinePoolStatus) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// Total number of unavailable machine instances targeted by this machine pool. This is the total number of machine instances that are still required for the machine pool to have 100% available capacity. They may either be machine instances that are running but not yet available or machine instances that still have not been created.
func (o MachinePoolStatusPtrOutput) UnavailableReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachinePoolStatus) *int {
		if v == nil {
			return nil
		}
		return v.UnavailableReplicas
	}).(pulumi.IntPtrOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type MachinePoolStatusConditions struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason *string `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity *string `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type string `pulumi:"type"`
}

// MachinePoolStatusConditionsInput is an input type that accepts MachinePoolStatusConditionsArgs and MachinePoolStatusConditionsOutput values.
// You can construct a concrete instance of `MachinePoolStatusConditionsInput` via:
//
//	MachinePoolStatusConditionsArgs{...}
type MachinePoolStatusConditionsInput interface {
	pulumi.Input

	ToMachinePoolStatusConditionsOutput() MachinePoolStatusConditionsOutput
	ToMachinePoolStatusConditionsOutputWithContext(context.Context) MachinePoolStatusConditionsOutput
}

// Condition defines an observation of a Cluster API resource operational state.
type MachinePoolStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MachinePoolStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolStatusConditions)(nil)).Elem()
}

func (i MachinePoolStatusConditionsArgs) ToMachinePoolStatusConditionsOutput() MachinePoolStatusConditionsOutput {
	return i.ToMachinePoolStatusConditionsOutputWithContext(context.Background())
}

func (i MachinePoolStatusConditionsArgs) ToMachinePoolStatusConditionsOutputWithContext(ctx context.Context) MachinePoolStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolStatusConditionsOutput)
}

// MachinePoolStatusConditionsArrayInput is an input type that accepts MachinePoolStatusConditionsArray and MachinePoolStatusConditionsArrayOutput values.
// You can construct a concrete instance of `MachinePoolStatusConditionsArrayInput` via:
//
//	MachinePoolStatusConditionsArray{ MachinePoolStatusConditionsArgs{...} }
type MachinePoolStatusConditionsArrayInput interface {
	pulumi.Input

	ToMachinePoolStatusConditionsArrayOutput() MachinePoolStatusConditionsArrayOutput
	ToMachinePoolStatusConditionsArrayOutputWithContext(context.Context) MachinePoolStatusConditionsArrayOutput
}

type MachinePoolStatusConditionsArray []MachinePoolStatusConditionsInput

func (MachinePoolStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachinePoolStatusConditions)(nil)).Elem()
}

func (i MachinePoolStatusConditionsArray) ToMachinePoolStatusConditionsArrayOutput() MachinePoolStatusConditionsArrayOutput {
	return i.ToMachinePoolStatusConditionsArrayOutputWithContext(context.Background())
}

func (i MachinePoolStatusConditionsArray) ToMachinePoolStatusConditionsArrayOutputWithContext(ctx context.Context) MachinePoolStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolStatusConditionsArrayOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type MachinePoolStatusConditionsOutput struct{ *pulumi.OutputState }

func (MachinePoolStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolStatusConditions)(nil)).Elem()
}

func (o MachinePoolStatusConditionsOutput) ToMachinePoolStatusConditionsOutput() MachinePoolStatusConditionsOutput {
	return o
}

func (o MachinePoolStatusConditionsOutput) ToMachinePoolStatusConditionsOutputWithContext(ctx context.Context) MachinePoolStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
func (o MachinePoolStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v MachinePoolStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A human readable message indicating details about the transition. This field may be empty.
func (o MachinePoolStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
func (o MachinePoolStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
func (o MachinePoolStatusConditionsOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolStatusConditions) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o MachinePoolStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MachinePoolStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
func (o MachinePoolStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MachinePoolStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type MachinePoolStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (MachinePoolStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachinePoolStatusConditions)(nil)).Elem()
}

func (o MachinePoolStatusConditionsArrayOutput) ToMachinePoolStatusConditionsArrayOutput() MachinePoolStatusConditionsArrayOutput {
	return o
}

func (o MachinePoolStatusConditionsArrayOutput) ToMachinePoolStatusConditionsArrayOutputWithContext(ctx context.Context) MachinePoolStatusConditionsArrayOutput {
	return o
}

func (o MachinePoolStatusConditionsArrayOutput) Index(i pulumi.IntInput) MachinePoolStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachinePoolStatusConditions {
		return vs[0].([]MachinePoolStatusConditions)[vs[1].(int)]
	}).(MachinePoolStatusConditionsOutput)
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
type MachinePoolStatusNodeRefs struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// MachinePoolStatusNodeRefsInput is an input type that accepts MachinePoolStatusNodeRefsArgs and MachinePoolStatusNodeRefsOutput values.
// You can construct a concrete instance of `MachinePoolStatusNodeRefsInput` via:
//
//	MachinePoolStatusNodeRefsArgs{...}
type MachinePoolStatusNodeRefsInput interface {
	pulumi.Input

	ToMachinePoolStatusNodeRefsOutput() MachinePoolStatusNodeRefsOutput
	ToMachinePoolStatusNodeRefsOutputWithContext(context.Context) MachinePoolStatusNodeRefsOutput
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
type MachinePoolStatusNodeRefsArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (MachinePoolStatusNodeRefsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolStatusNodeRefs)(nil)).Elem()
}

func (i MachinePoolStatusNodeRefsArgs) ToMachinePoolStatusNodeRefsOutput() MachinePoolStatusNodeRefsOutput {
	return i.ToMachinePoolStatusNodeRefsOutputWithContext(context.Background())
}

func (i MachinePoolStatusNodeRefsArgs) ToMachinePoolStatusNodeRefsOutputWithContext(ctx context.Context) MachinePoolStatusNodeRefsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolStatusNodeRefsOutput)
}

// MachinePoolStatusNodeRefsArrayInput is an input type that accepts MachinePoolStatusNodeRefsArray and MachinePoolStatusNodeRefsArrayOutput values.
// You can construct a concrete instance of `MachinePoolStatusNodeRefsArrayInput` via:
//
//	MachinePoolStatusNodeRefsArray{ MachinePoolStatusNodeRefsArgs{...} }
type MachinePoolStatusNodeRefsArrayInput interface {
	pulumi.Input

	ToMachinePoolStatusNodeRefsArrayOutput() MachinePoolStatusNodeRefsArrayOutput
	ToMachinePoolStatusNodeRefsArrayOutputWithContext(context.Context) MachinePoolStatusNodeRefsArrayOutput
}

type MachinePoolStatusNodeRefsArray []MachinePoolStatusNodeRefsInput

func (MachinePoolStatusNodeRefsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachinePoolStatusNodeRefs)(nil)).Elem()
}

func (i MachinePoolStatusNodeRefsArray) ToMachinePoolStatusNodeRefsArrayOutput() MachinePoolStatusNodeRefsArrayOutput {
	return i.ToMachinePoolStatusNodeRefsArrayOutputWithContext(context.Background())
}

func (i MachinePoolStatusNodeRefsArray) ToMachinePoolStatusNodeRefsArrayOutputWithContext(ctx context.Context) MachinePoolStatusNodeRefsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachinePoolStatusNodeRefsArrayOutput)
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
type MachinePoolStatusNodeRefsOutput struct{ *pulumi.OutputState }

func (MachinePoolStatusNodeRefsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachinePoolStatusNodeRefs)(nil)).Elem()
}

func (o MachinePoolStatusNodeRefsOutput) ToMachinePoolStatusNodeRefsOutput() MachinePoolStatusNodeRefsOutput {
	return o
}

func (o MachinePoolStatusNodeRefsOutput) ToMachinePoolStatusNodeRefsOutputWithContext(ctx context.Context) MachinePoolStatusNodeRefsOutput {
	return o
}

// API version of the referent.
func (o MachinePoolStatusNodeRefsOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolStatusNodeRefs) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachinePoolStatusNodeRefsOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolStatusNodeRefs) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachinePoolStatusNodeRefsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolStatusNodeRefs) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachinePoolStatusNodeRefsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolStatusNodeRefs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachinePoolStatusNodeRefsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolStatusNodeRefs) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachinePoolStatusNodeRefsOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolStatusNodeRefs) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachinePoolStatusNodeRefsOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachinePoolStatusNodeRefs) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type MachinePoolStatusNodeRefsArrayOutput struct{ *pulumi.OutputState }

func (MachinePoolStatusNodeRefsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachinePoolStatusNodeRefs)(nil)).Elem()
}

func (o MachinePoolStatusNodeRefsArrayOutput) ToMachinePoolStatusNodeRefsArrayOutput() MachinePoolStatusNodeRefsArrayOutput {
	return o
}

func (o MachinePoolStatusNodeRefsArrayOutput) ToMachinePoolStatusNodeRefsArrayOutputWithContext(ctx context.Context) MachinePoolStatusNodeRefsArrayOutput {
	return o
}

func (o MachinePoolStatusNodeRefsArrayOutput) Index(i pulumi.IntInput) MachinePoolStatusNodeRefsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachinePoolStatusNodeRefs {
		return vs[0].([]MachinePoolStatusNodeRefs)[vs[1].(int)]
	}).(MachinePoolStatusNodeRefsOutput)
}

// MachineSet is the Schema for the machinesets API.
type MachineSetType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// MachineSetSpec defines the desired state of MachineSet.
	Spec *MachineSetSpec `pulumi:"spec"`
	// MachineSetStatus defines the observed state of MachineSet.
	Status *MachineSetStatus `pulumi:"status"`
}

// Defaults sets the appropriate defaults for MachineSetType
func (val *MachineSetType) Defaults() *MachineSetType {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Spec = tmp.Spec.Defaults()

	return &tmp
}

type MachineSetMetadata struct {
}

// MachineSetSpec defines the desired state of MachineSet.
type MachineSetSpec struct {
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName string `pulumi:"clusterName"`
	// DeletePolicy defines the policy used to identify nodes to delete when downscaling. Defaults to "Random".  Valid values are "Random, "Newest", "Oldest"
	DeletePolicy *string `pulumi:"deletePolicy"`
	// MinReadySeconds is the minimum number of seconds for which a Node for a newly created machine should be ready before considering the replica available. Defaults to 0 (machine will be considered available as soon as the Node is ready)
	MinReadySeconds *int `pulumi:"minReadySeconds"`
	// Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1.
	Replicas *int `pulumi:"replicas"`
	// Selector is a label query over machines that should match the replica count. Label keys and values that must match in order to be controlled by this MachineSet. It must match the machine template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
	Selector MachineSetSpecSelector `pulumi:"selector"`
	// Template is the object that describes the machine that will be created if insufficient replicas are detected. Object references to custom resources are treated as templates.
	Template *MachineSetSpecTemplate `pulumi:"template"`
}

// Defaults sets the appropriate defaults for MachineSetSpec
func (val *MachineSetSpec) Defaults() *MachineSetSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Replicas == nil {
		replicas_ := 1
		tmp.Replicas = &replicas_
	}
	return &tmp
}

// MachineSetSpecInput is an input type that accepts MachineSetSpecArgs and MachineSetSpecOutput values.
// You can construct a concrete instance of `MachineSetSpecInput` via:
//
//	MachineSetSpecArgs{...}
type MachineSetSpecInput interface {
	pulumi.Input

	ToMachineSetSpecOutput() MachineSetSpecOutput
	ToMachineSetSpecOutputWithContext(context.Context) MachineSetSpecOutput
}

// MachineSetSpec defines the desired state of MachineSet.
type MachineSetSpecArgs struct {
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// DeletePolicy defines the policy used to identify nodes to delete when downscaling. Defaults to "Random".  Valid values are "Random, "Newest", "Oldest"
	DeletePolicy pulumi.StringPtrInput `pulumi:"deletePolicy"`
	// MinReadySeconds is the minimum number of seconds for which a Node for a newly created machine should be ready before considering the replica available. Defaults to 0 (machine will be considered available as soon as the Node is ready)
	MinReadySeconds pulumi.IntPtrInput `pulumi:"minReadySeconds"`
	// Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// Selector is a label query over machines that should match the replica count. Label keys and values that must match in order to be controlled by this MachineSet. It must match the machine template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
	Selector MachineSetSpecSelectorInput `pulumi:"selector"`
	// Template is the object that describes the machine that will be created if insufficient replicas are detected. Object references to custom resources are treated as templates.
	Template MachineSetSpecTemplatePtrInput `pulumi:"template"`
}

// Defaults sets the appropriate defaults for MachineSetSpecArgs
func (val *MachineSetSpecArgs) Defaults() *MachineSetSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Replicas == nil {
		tmp.Replicas = pulumi.IntPtr(1)
	}
	return &tmp
}
func (MachineSetSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpec)(nil)).Elem()
}

func (i MachineSetSpecArgs) ToMachineSetSpecOutput() MachineSetSpecOutput {
	return i.ToMachineSetSpecOutputWithContext(context.Background())
}

func (i MachineSetSpecArgs) ToMachineSetSpecOutputWithContext(ctx context.Context) MachineSetSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecOutput)
}

func (i MachineSetSpecArgs) ToMachineSetSpecPtrOutput() MachineSetSpecPtrOutput {
	return i.ToMachineSetSpecPtrOutputWithContext(context.Background())
}

func (i MachineSetSpecArgs) ToMachineSetSpecPtrOutputWithContext(ctx context.Context) MachineSetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecOutput).ToMachineSetSpecPtrOutputWithContext(ctx)
}

// MachineSetSpecPtrInput is an input type that accepts MachineSetSpecArgs, MachineSetSpecPtr and MachineSetSpecPtrOutput values.
// You can construct a concrete instance of `MachineSetSpecPtrInput` via:
//
//	        MachineSetSpecArgs{...}
//
//	or:
//
//	        nil
type MachineSetSpecPtrInput interface {
	pulumi.Input

	ToMachineSetSpecPtrOutput() MachineSetSpecPtrOutput
	ToMachineSetSpecPtrOutputWithContext(context.Context) MachineSetSpecPtrOutput
}

type machineSetSpecPtrType MachineSetSpecArgs

func MachineSetSpecPtr(v *MachineSetSpecArgs) MachineSetSpecPtrInput {
	return (*machineSetSpecPtrType)(v)
}

func (*machineSetSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpec)(nil)).Elem()
}

func (i *machineSetSpecPtrType) ToMachineSetSpecPtrOutput() MachineSetSpecPtrOutput {
	return i.ToMachineSetSpecPtrOutputWithContext(context.Background())
}

func (i *machineSetSpecPtrType) ToMachineSetSpecPtrOutputWithContext(ctx context.Context) MachineSetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecPtrOutput)
}

// MachineSetSpec defines the desired state of MachineSet.
type MachineSetSpecOutput struct{ *pulumi.OutputState }

func (MachineSetSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpec)(nil)).Elem()
}

func (o MachineSetSpecOutput) ToMachineSetSpecOutput() MachineSetSpecOutput {
	return o
}

func (o MachineSetSpecOutput) ToMachineSetSpecOutputWithContext(ctx context.Context) MachineSetSpecOutput {
	return o
}

func (o MachineSetSpecOutput) ToMachineSetSpecPtrOutput() MachineSetSpecPtrOutput {
	return o.ToMachineSetSpecPtrOutputWithContext(context.Background())
}

func (o MachineSetSpecOutput) ToMachineSetSpecPtrOutputWithContext(ctx context.Context) MachineSetSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSetSpec) *MachineSetSpec {
		return &v
	}).(MachineSetSpecPtrOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachineSetSpecOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v MachineSetSpec) string { return v.ClusterName }).(pulumi.StringOutput)
}

// DeletePolicy defines the policy used to identify nodes to delete when downscaling. Defaults to "Random".  Valid values are "Random, "Newest", "Oldest"
func (o MachineSetSpecOutput) DeletePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpec) *string { return v.DeletePolicy }).(pulumi.StringPtrOutput)
}

// MinReadySeconds is the minimum number of seconds for which a Node for a newly created machine should be ready before considering the replica available. Defaults to 0 (machine will be considered available as soon as the Node is ready)
func (o MachineSetSpecOutput) MinReadySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineSetSpec) *int { return v.MinReadySeconds }).(pulumi.IntPtrOutput)
}

// Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1.
func (o MachineSetSpecOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineSetSpec) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Selector is a label query over machines that should match the replica count. Label keys and values that must match in order to be controlled by this MachineSet. It must match the machine template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
func (o MachineSetSpecOutput) Selector() MachineSetSpecSelectorOutput {
	return o.ApplyT(func(v MachineSetSpec) MachineSetSpecSelector { return v.Selector }).(MachineSetSpecSelectorOutput)
}

// Template is the object that describes the machine that will be created if insufficient replicas are detected. Object references to custom resources are treated as templates.
func (o MachineSetSpecOutput) Template() MachineSetSpecTemplatePtrOutput {
	return o.ApplyT(func(v MachineSetSpec) *MachineSetSpecTemplate { return v.Template }).(MachineSetSpecTemplatePtrOutput)
}

type MachineSetSpecPtrOutput struct{ *pulumi.OutputState }

func (MachineSetSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpec)(nil)).Elem()
}

func (o MachineSetSpecPtrOutput) ToMachineSetSpecPtrOutput() MachineSetSpecPtrOutput {
	return o
}

func (o MachineSetSpecPtrOutput) ToMachineSetSpecPtrOutputWithContext(ctx context.Context) MachineSetSpecPtrOutput {
	return o
}

func (o MachineSetSpecPtrOutput) Elem() MachineSetSpecOutput {
	return o.ApplyT(func(v *MachineSetSpec) MachineSetSpec {
		if v != nil {
			return *v
		}
		var ret MachineSetSpec
		return ret
	}).(MachineSetSpecOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachineSetSpecPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// DeletePolicy defines the policy used to identify nodes to delete when downscaling. Defaults to "Random".  Valid values are "Random, "Newest", "Oldest"
func (o MachineSetSpecPtrOutput) DeletePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpec) *string {
		if v == nil {
			return nil
		}
		return v.DeletePolicy
	}).(pulumi.StringPtrOutput)
}

// MinReadySeconds is the minimum number of seconds for which a Node for a newly created machine should be ready before considering the replica available. Defaults to 0 (machine will be considered available as soon as the Node is ready)
func (o MachineSetSpecPtrOutput) MinReadySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineSetSpec) *int {
		if v == nil {
			return nil
		}
		return v.MinReadySeconds
	}).(pulumi.IntPtrOutput)
}

// Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1.
func (o MachineSetSpecPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineSetSpec) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// Selector is a label query over machines that should match the replica count. Label keys and values that must match in order to be controlled by this MachineSet. It must match the machine template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
func (o MachineSetSpecPtrOutput) Selector() MachineSetSpecSelectorPtrOutput {
	return o.ApplyT(func(v *MachineSetSpec) *MachineSetSpecSelector {
		if v == nil {
			return nil
		}
		return &v.Selector
	}).(MachineSetSpecSelectorPtrOutput)
}

// Template is the object that describes the machine that will be created if insufficient replicas are detected. Object references to custom resources are treated as templates.
func (o MachineSetSpecPtrOutput) Template() MachineSetSpecTemplatePtrOutput {
	return o.ApplyT(func(v *MachineSetSpec) *MachineSetSpecTemplate {
		if v == nil {
			return nil
		}
		return v.Template
	}).(MachineSetSpecTemplatePtrOutput)
}

// Selector is a label query over machines that should match the replica count. Label keys and values that must match in order to be controlled by this MachineSet. It must match the machine template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
type MachineSetSpecSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []MachineSetSpecSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// MachineSetSpecSelectorInput is an input type that accepts MachineSetSpecSelectorArgs and MachineSetSpecSelectorOutput values.
// You can construct a concrete instance of `MachineSetSpecSelectorInput` via:
//
//	MachineSetSpecSelectorArgs{...}
type MachineSetSpecSelectorInput interface {
	pulumi.Input

	ToMachineSetSpecSelectorOutput() MachineSetSpecSelectorOutput
	ToMachineSetSpecSelectorOutputWithContext(context.Context) MachineSetSpecSelectorOutput
}

// Selector is a label query over machines that should match the replica count. Label keys and values that must match in order to be controlled by this MachineSet. It must match the machine template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
type MachineSetSpecSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions MachineSetSpecSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (MachineSetSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecSelector)(nil)).Elem()
}

func (i MachineSetSpecSelectorArgs) ToMachineSetSpecSelectorOutput() MachineSetSpecSelectorOutput {
	return i.ToMachineSetSpecSelectorOutputWithContext(context.Background())
}

func (i MachineSetSpecSelectorArgs) ToMachineSetSpecSelectorOutputWithContext(ctx context.Context) MachineSetSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecSelectorOutput)
}

func (i MachineSetSpecSelectorArgs) ToMachineSetSpecSelectorPtrOutput() MachineSetSpecSelectorPtrOutput {
	return i.ToMachineSetSpecSelectorPtrOutputWithContext(context.Background())
}

func (i MachineSetSpecSelectorArgs) ToMachineSetSpecSelectorPtrOutputWithContext(ctx context.Context) MachineSetSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecSelectorOutput).ToMachineSetSpecSelectorPtrOutputWithContext(ctx)
}

// MachineSetSpecSelectorPtrInput is an input type that accepts MachineSetSpecSelectorArgs, MachineSetSpecSelectorPtr and MachineSetSpecSelectorPtrOutput values.
// You can construct a concrete instance of `MachineSetSpecSelectorPtrInput` via:
//
//	        MachineSetSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type MachineSetSpecSelectorPtrInput interface {
	pulumi.Input

	ToMachineSetSpecSelectorPtrOutput() MachineSetSpecSelectorPtrOutput
	ToMachineSetSpecSelectorPtrOutputWithContext(context.Context) MachineSetSpecSelectorPtrOutput
}

type machineSetSpecSelectorPtrType MachineSetSpecSelectorArgs

func MachineSetSpecSelectorPtr(v *MachineSetSpecSelectorArgs) MachineSetSpecSelectorPtrInput {
	return (*machineSetSpecSelectorPtrType)(v)
}

func (*machineSetSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecSelector)(nil)).Elem()
}

func (i *machineSetSpecSelectorPtrType) ToMachineSetSpecSelectorPtrOutput() MachineSetSpecSelectorPtrOutput {
	return i.ToMachineSetSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *machineSetSpecSelectorPtrType) ToMachineSetSpecSelectorPtrOutputWithContext(ctx context.Context) MachineSetSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecSelectorPtrOutput)
}

// Selector is a label query over machines that should match the replica count. Label keys and values that must match in order to be controlled by this MachineSet. It must match the machine template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
type MachineSetSpecSelectorOutput struct{ *pulumi.OutputState }

func (MachineSetSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecSelector)(nil)).Elem()
}

func (o MachineSetSpecSelectorOutput) ToMachineSetSpecSelectorOutput() MachineSetSpecSelectorOutput {
	return o
}

func (o MachineSetSpecSelectorOutput) ToMachineSetSpecSelectorOutputWithContext(ctx context.Context) MachineSetSpecSelectorOutput {
	return o
}

func (o MachineSetSpecSelectorOutput) ToMachineSetSpecSelectorPtrOutput() MachineSetSpecSelectorPtrOutput {
	return o.ToMachineSetSpecSelectorPtrOutputWithContext(context.Background())
}

func (o MachineSetSpecSelectorOutput) ToMachineSetSpecSelectorPtrOutputWithContext(ctx context.Context) MachineSetSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSetSpecSelector) *MachineSetSpecSelector {
		return &v
	}).(MachineSetSpecSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o MachineSetSpecSelectorOutput) MatchExpressions() MachineSetSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v MachineSetSpecSelector) []MachineSetSpecSelectorMatchExpressions { return v.MatchExpressions }).(MachineSetSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o MachineSetSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachineSetSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type MachineSetSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (MachineSetSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecSelector)(nil)).Elem()
}

func (o MachineSetSpecSelectorPtrOutput) ToMachineSetSpecSelectorPtrOutput() MachineSetSpecSelectorPtrOutput {
	return o
}

func (o MachineSetSpecSelectorPtrOutput) ToMachineSetSpecSelectorPtrOutputWithContext(ctx context.Context) MachineSetSpecSelectorPtrOutput {
	return o
}

func (o MachineSetSpecSelectorPtrOutput) Elem() MachineSetSpecSelectorOutput {
	return o.ApplyT(func(v *MachineSetSpecSelector) MachineSetSpecSelector {
		if v != nil {
			return *v
		}
		var ret MachineSetSpecSelector
		return ret
	}).(MachineSetSpecSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o MachineSetSpecSelectorPtrOutput) MatchExpressions() MachineSetSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *MachineSetSpecSelector) []MachineSetSpecSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(MachineSetSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o MachineSetSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MachineSetSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type MachineSetSpecSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// MachineSetSpecSelectorMatchExpressionsInput is an input type that accepts MachineSetSpecSelectorMatchExpressionsArgs and MachineSetSpecSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `MachineSetSpecSelectorMatchExpressionsInput` via:
//
//	MachineSetSpecSelectorMatchExpressionsArgs{...}
type MachineSetSpecSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToMachineSetSpecSelectorMatchExpressionsOutput() MachineSetSpecSelectorMatchExpressionsOutput
	ToMachineSetSpecSelectorMatchExpressionsOutputWithContext(context.Context) MachineSetSpecSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type MachineSetSpecSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (MachineSetSpecSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i MachineSetSpecSelectorMatchExpressionsArgs) ToMachineSetSpecSelectorMatchExpressionsOutput() MachineSetSpecSelectorMatchExpressionsOutput {
	return i.ToMachineSetSpecSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i MachineSetSpecSelectorMatchExpressionsArgs) ToMachineSetSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) MachineSetSpecSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecSelectorMatchExpressionsOutput)
}

// MachineSetSpecSelectorMatchExpressionsArrayInput is an input type that accepts MachineSetSpecSelectorMatchExpressionsArray and MachineSetSpecSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `MachineSetSpecSelectorMatchExpressionsArrayInput` via:
//
//	MachineSetSpecSelectorMatchExpressionsArray{ MachineSetSpecSelectorMatchExpressionsArgs{...} }
type MachineSetSpecSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToMachineSetSpecSelectorMatchExpressionsArrayOutput() MachineSetSpecSelectorMatchExpressionsArrayOutput
	ToMachineSetSpecSelectorMatchExpressionsArrayOutputWithContext(context.Context) MachineSetSpecSelectorMatchExpressionsArrayOutput
}

type MachineSetSpecSelectorMatchExpressionsArray []MachineSetSpecSelectorMatchExpressionsInput

func (MachineSetSpecSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineSetSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i MachineSetSpecSelectorMatchExpressionsArray) ToMachineSetSpecSelectorMatchExpressionsArrayOutput() MachineSetSpecSelectorMatchExpressionsArrayOutput {
	return i.ToMachineSetSpecSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i MachineSetSpecSelectorMatchExpressionsArray) ToMachineSetSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) MachineSetSpecSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type MachineSetSpecSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (MachineSetSpecSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o MachineSetSpecSelectorMatchExpressionsOutput) ToMachineSetSpecSelectorMatchExpressionsOutput() MachineSetSpecSelectorMatchExpressionsOutput {
	return o
}

func (o MachineSetSpecSelectorMatchExpressionsOutput) ToMachineSetSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) MachineSetSpecSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o MachineSetSpecSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v MachineSetSpecSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o MachineSetSpecSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MachineSetSpecSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o MachineSetSpecSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MachineSetSpecSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type MachineSetSpecSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (MachineSetSpecSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineSetSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o MachineSetSpecSelectorMatchExpressionsArrayOutput) ToMachineSetSpecSelectorMatchExpressionsArrayOutput() MachineSetSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o MachineSetSpecSelectorMatchExpressionsArrayOutput) ToMachineSetSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) MachineSetSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o MachineSetSpecSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) MachineSetSpecSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineSetSpecSelectorMatchExpressions {
		return vs[0].([]MachineSetSpecSelectorMatchExpressions)[vs[1].(int)]
	}).(MachineSetSpecSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
type MachineSetSpecSelectorMatchLabels struct {
}

// Template is the object that describes the machine that will be created if insufficient replicas are detected. Object references to custom resources are treated as templates.
type MachineSetSpecTemplate struct {
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *MachineSetSpecTemplateMetadata `pulumi:"metadata"`
	// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec *MachineSetSpecTemplateSpec `pulumi:"spec"`
}

// MachineSetSpecTemplateInput is an input type that accepts MachineSetSpecTemplateArgs and MachineSetSpecTemplateOutput values.
// You can construct a concrete instance of `MachineSetSpecTemplateInput` via:
//
//	MachineSetSpecTemplateArgs{...}
type MachineSetSpecTemplateInput interface {
	pulumi.Input

	ToMachineSetSpecTemplateOutput() MachineSetSpecTemplateOutput
	ToMachineSetSpecTemplateOutputWithContext(context.Context) MachineSetSpecTemplateOutput
}

// Template is the object that describes the machine that will be created if insufficient replicas are detected. Object references to custom resources are treated as templates.
type MachineSetSpecTemplateArgs struct {
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata MachineSetSpecTemplateMetadataPtrInput `pulumi:"metadata"`
	// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec MachineSetSpecTemplateSpecPtrInput `pulumi:"spec"`
}

func (MachineSetSpecTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecTemplate)(nil)).Elem()
}

func (i MachineSetSpecTemplateArgs) ToMachineSetSpecTemplateOutput() MachineSetSpecTemplateOutput {
	return i.ToMachineSetSpecTemplateOutputWithContext(context.Background())
}

func (i MachineSetSpecTemplateArgs) ToMachineSetSpecTemplateOutputWithContext(ctx context.Context) MachineSetSpecTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateOutput)
}

func (i MachineSetSpecTemplateArgs) ToMachineSetSpecTemplatePtrOutput() MachineSetSpecTemplatePtrOutput {
	return i.ToMachineSetSpecTemplatePtrOutputWithContext(context.Background())
}

func (i MachineSetSpecTemplateArgs) ToMachineSetSpecTemplatePtrOutputWithContext(ctx context.Context) MachineSetSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateOutput).ToMachineSetSpecTemplatePtrOutputWithContext(ctx)
}

// MachineSetSpecTemplatePtrInput is an input type that accepts MachineSetSpecTemplateArgs, MachineSetSpecTemplatePtr and MachineSetSpecTemplatePtrOutput values.
// You can construct a concrete instance of `MachineSetSpecTemplatePtrInput` via:
//
//	        MachineSetSpecTemplateArgs{...}
//
//	or:
//
//	        nil
type MachineSetSpecTemplatePtrInput interface {
	pulumi.Input

	ToMachineSetSpecTemplatePtrOutput() MachineSetSpecTemplatePtrOutput
	ToMachineSetSpecTemplatePtrOutputWithContext(context.Context) MachineSetSpecTemplatePtrOutput
}

type machineSetSpecTemplatePtrType MachineSetSpecTemplateArgs

func MachineSetSpecTemplatePtr(v *MachineSetSpecTemplateArgs) MachineSetSpecTemplatePtrInput {
	return (*machineSetSpecTemplatePtrType)(v)
}

func (*machineSetSpecTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecTemplate)(nil)).Elem()
}

func (i *machineSetSpecTemplatePtrType) ToMachineSetSpecTemplatePtrOutput() MachineSetSpecTemplatePtrOutput {
	return i.ToMachineSetSpecTemplatePtrOutputWithContext(context.Background())
}

func (i *machineSetSpecTemplatePtrType) ToMachineSetSpecTemplatePtrOutputWithContext(ctx context.Context) MachineSetSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplatePtrOutput)
}

// Template is the object that describes the machine that will be created if insufficient replicas are detected. Object references to custom resources are treated as templates.
type MachineSetSpecTemplateOutput struct{ *pulumi.OutputState }

func (MachineSetSpecTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecTemplate)(nil)).Elem()
}

func (o MachineSetSpecTemplateOutput) ToMachineSetSpecTemplateOutput() MachineSetSpecTemplateOutput {
	return o
}

func (o MachineSetSpecTemplateOutput) ToMachineSetSpecTemplateOutputWithContext(ctx context.Context) MachineSetSpecTemplateOutput {
	return o
}

func (o MachineSetSpecTemplateOutput) ToMachineSetSpecTemplatePtrOutput() MachineSetSpecTemplatePtrOutput {
	return o.ToMachineSetSpecTemplatePtrOutputWithContext(context.Background())
}

func (o MachineSetSpecTemplateOutput) ToMachineSetSpecTemplatePtrOutputWithContext(ctx context.Context) MachineSetSpecTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSetSpecTemplate) *MachineSetSpecTemplate {
		return &v
	}).(MachineSetSpecTemplatePtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o MachineSetSpecTemplateOutput) Metadata() MachineSetSpecTemplateMetadataPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplate) *MachineSetSpecTemplateMetadata { return v.Metadata }).(MachineSetSpecTemplateMetadataPtrOutput)
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
func (o MachineSetSpecTemplateOutput) Spec() MachineSetSpecTemplateSpecPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplate) *MachineSetSpecTemplateSpec { return v.Spec }).(MachineSetSpecTemplateSpecPtrOutput)
}

type MachineSetSpecTemplatePtrOutput struct{ *pulumi.OutputState }

func (MachineSetSpecTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecTemplate)(nil)).Elem()
}

func (o MachineSetSpecTemplatePtrOutput) ToMachineSetSpecTemplatePtrOutput() MachineSetSpecTemplatePtrOutput {
	return o
}

func (o MachineSetSpecTemplatePtrOutput) ToMachineSetSpecTemplatePtrOutputWithContext(ctx context.Context) MachineSetSpecTemplatePtrOutput {
	return o
}

func (o MachineSetSpecTemplatePtrOutput) Elem() MachineSetSpecTemplateOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplate) MachineSetSpecTemplate {
		if v != nil {
			return *v
		}
		var ret MachineSetSpecTemplate
		return ret
	}).(MachineSetSpecTemplateOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o MachineSetSpecTemplatePtrOutput) Metadata() MachineSetSpecTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplate) *MachineSetSpecTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(MachineSetSpecTemplateMetadataPtrOutput)
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
func (o MachineSetSpecTemplatePtrOutput) Spec() MachineSetSpecTemplateSpecPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplate) *MachineSetSpecTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(MachineSetSpecTemplateSpecPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type MachineSetSpecTemplateMetadata struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations map[string]string `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels map[string]string `pulumi:"labels"`
}

// MachineSetSpecTemplateMetadataInput is an input type that accepts MachineSetSpecTemplateMetadataArgs and MachineSetSpecTemplateMetadataOutput values.
// You can construct a concrete instance of `MachineSetSpecTemplateMetadataInput` via:
//
//	MachineSetSpecTemplateMetadataArgs{...}
type MachineSetSpecTemplateMetadataInput interface {
	pulumi.Input

	ToMachineSetSpecTemplateMetadataOutput() MachineSetSpecTemplateMetadataOutput
	ToMachineSetSpecTemplateMetadataOutputWithContext(context.Context) MachineSetSpecTemplateMetadataOutput
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type MachineSetSpecTemplateMetadataArgs struct {
	// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (MachineSetSpecTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecTemplateMetadata)(nil)).Elem()
}

func (i MachineSetSpecTemplateMetadataArgs) ToMachineSetSpecTemplateMetadataOutput() MachineSetSpecTemplateMetadataOutput {
	return i.ToMachineSetSpecTemplateMetadataOutputWithContext(context.Background())
}

func (i MachineSetSpecTemplateMetadataArgs) ToMachineSetSpecTemplateMetadataOutputWithContext(ctx context.Context) MachineSetSpecTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateMetadataOutput)
}

func (i MachineSetSpecTemplateMetadataArgs) ToMachineSetSpecTemplateMetadataPtrOutput() MachineSetSpecTemplateMetadataPtrOutput {
	return i.ToMachineSetSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i MachineSetSpecTemplateMetadataArgs) ToMachineSetSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateMetadataOutput).ToMachineSetSpecTemplateMetadataPtrOutputWithContext(ctx)
}

// MachineSetSpecTemplateMetadataPtrInput is an input type that accepts MachineSetSpecTemplateMetadataArgs, MachineSetSpecTemplateMetadataPtr and MachineSetSpecTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `MachineSetSpecTemplateMetadataPtrInput` via:
//
//	        MachineSetSpecTemplateMetadataArgs{...}
//
//	or:
//
//	        nil
type MachineSetSpecTemplateMetadataPtrInput interface {
	pulumi.Input

	ToMachineSetSpecTemplateMetadataPtrOutput() MachineSetSpecTemplateMetadataPtrOutput
	ToMachineSetSpecTemplateMetadataPtrOutputWithContext(context.Context) MachineSetSpecTemplateMetadataPtrOutput
}

type machineSetSpecTemplateMetadataPtrType MachineSetSpecTemplateMetadataArgs

func MachineSetSpecTemplateMetadataPtr(v *MachineSetSpecTemplateMetadataArgs) MachineSetSpecTemplateMetadataPtrInput {
	return (*machineSetSpecTemplateMetadataPtrType)(v)
}

func (*machineSetSpecTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecTemplateMetadata)(nil)).Elem()
}

func (i *machineSetSpecTemplateMetadataPtrType) ToMachineSetSpecTemplateMetadataPtrOutput() MachineSetSpecTemplateMetadataPtrOutput {
	return i.ToMachineSetSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *machineSetSpecTemplateMetadataPtrType) ToMachineSetSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateMetadataPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type MachineSetSpecTemplateMetadataOutput struct{ *pulumi.OutputState }

func (MachineSetSpecTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecTemplateMetadata)(nil)).Elem()
}

func (o MachineSetSpecTemplateMetadataOutput) ToMachineSetSpecTemplateMetadataOutput() MachineSetSpecTemplateMetadataOutput {
	return o
}

func (o MachineSetSpecTemplateMetadataOutput) ToMachineSetSpecTemplateMetadataOutputWithContext(ctx context.Context) MachineSetSpecTemplateMetadataOutput {
	return o
}

func (o MachineSetSpecTemplateMetadataOutput) ToMachineSetSpecTemplateMetadataPtrOutput() MachineSetSpecTemplateMetadataPtrOutput {
	return o.ToMachineSetSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o MachineSetSpecTemplateMetadataOutput) ToMachineSetSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSetSpecTemplateMetadata) *MachineSetSpecTemplateMetadata {
		return &v
	}).(MachineSetSpecTemplateMetadataPtrOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o MachineSetSpecTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o MachineSetSpecTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type MachineSetSpecTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (MachineSetSpecTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecTemplateMetadata)(nil)).Elem()
}

func (o MachineSetSpecTemplateMetadataPtrOutput) ToMachineSetSpecTemplateMetadataPtrOutput() MachineSetSpecTemplateMetadataPtrOutput {
	return o
}

func (o MachineSetSpecTemplateMetadataPtrOutput) ToMachineSetSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateMetadataPtrOutput {
	return o
}

func (o MachineSetSpecTemplateMetadataPtrOutput) Elem() MachineSetSpecTemplateMetadataOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateMetadata) MachineSetSpecTemplateMetadata {
		if v != nil {
			return *v
		}
		var ret MachineSetSpecTemplateMetadata
		return ret
	}).(MachineSetSpecTemplateMetadataOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
func (o MachineSetSpecTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
func (o MachineSetSpecTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
type MachineSetSpecTemplateMetadataAnnotations struct {
}

// Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
type MachineSetSpecTemplateMetadataLabels struct {
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type MachineSetSpecTemplateSpec struct {
	// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
	Bootstrap MachineSetSpecTemplateSpecBootstrap `pulumi:"bootstrap"`
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName string `pulumi:"clusterName"`
	// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
	FailureDomain *string `pulumi:"failureDomain"`
	// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
	InfrastructureRef MachineSetSpecTemplateSpecInfrastructureRef `pulumi:"infrastructureRef"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
	NodeDeletionTimeout *string `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
	NodeDrainTimeout *string `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
	NodeVolumeDetachTimeout *string `pulumi:"nodeVolumeDetachTimeout"`
	// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
	ProviderID *string `pulumi:"providerID"`
	// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
	Version *string `pulumi:"version"`
}

// MachineSetSpecTemplateSpecInput is an input type that accepts MachineSetSpecTemplateSpecArgs and MachineSetSpecTemplateSpecOutput values.
// You can construct a concrete instance of `MachineSetSpecTemplateSpecInput` via:
//
//	MachineSetSpecTemplateSpecArgs{...}
type MachineSetSpecTemplateSpecInput interface {
	pulumi.Input

	ToMachineSetSpecTemplateSpecOutput() MachineSetSpecTemplateSpecOutput
	ToMachineSetSpecTemplateSpecOutputWithContext(context.Context) MachineSetSpecTemplateSpecOutput
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type MachineSetSpecTemplateSpecArgs struct {
	// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
	Bootstrap MachineSetSpecTemplateSpecBootstrapInput `pulumi:"bootstrap"`
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
	FailureDomain pulumi.StringPtrInput `pulumi:"failureDomain"`
	// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
	InfrastructureRef MachineSetSpecTemplateSpecInfrastructureRefInput `pulumi:"infrastructureRef"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
	NodeDeletionTimeout pulumi.StringPtrInput `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
	NodeDrainTimeout pulumi.StringPtrInput `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
	NodeVolumeDetachTimeout pulumi.StringPtrInput `pulumi:"nodeVolumeDetachTimeout"`
	// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
	ProviderID pulumi.StringPtrInput `pulumi:"providerID"`
	// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (MachineSetSpecTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecTemplateSpec)(nil)).Elem()
}

func (i MachineSetSpecTemplateSpecArgs) ToMachineSetSpecTemplateSpecOutput() MachineSetSpecTemplateSpecOutput {
	return i.ToMachineSetSpecTemplateSpecOutputWithContext(context.Background())
}

func (i MachineSetSpecTemplateSpecArgs) ToMachineSetSpecTemplateSpecOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateSpecOutput)
}

func (i MachineSetSpecTemplateSpecArgs) ToMachineSetSpecTemplateSpecPtrOutput() MachineSetSpecTemplateSpecPtrOutput {
	return i.ToMachineSetSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (i MachineSetSpecTemplateSpecArgs) ToMachineSetSpecTemplateSpecPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateSpecOutput).ToMachineSetSpecTemplateSpecPtrOutputWithContext(ctx)
}

// MachineSetSpecTemplateSpecPtrInput is an input type that accepts MachineSetSpecTemplateSpecArgs, MachineSetSpecTemplateSpecPtr and MachineSetSpecTemplateSpecPtrOutput values.
// You can construct a concrete instance of `MachineSetSpecTemplateSpecPtrInput` via:
//
//	        MachineSetSpecTemplateSpecArgs{...}
//
//	or:
//
//	        nil
type MachineSetSpecTemplateSpecPtrInput interface {
	pulumi.Input

	ToMachineSetSpecTemplateSpecPtrOutput() MachineSetSpecTemplateSpecPtrOutput
	ToMachineSetSpecTemplateSpecPtrOutputWithContext(context.Context) MachineSetSpecTemplateSpecPtrOutput
}

type machineSetSpecTemplateSpecPtrType MachineSetSpecTemplateSpecArgs

func MachineSetSpecTemplateSpecPtr(v *MachineSetSpecTemplateSpecArgs) MachineSetSpecTemplateSpecPtrInput {
	return (*machineSetSpecTemplateSpecPtrType)(v)
}

func (*machineSetSpecTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecTemplateSpec)(nil)).Elem()
}

func (i *machineSetSpecTemplateSpecPtrType) ToMachineSetSpecTemplateSpecPtrOutput() MachineSetSpecTemplateSpecPtrOutput {
	return i.ToMachineSetSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *machineSetSpecTemplateSpecPtrType) ToMachineSetSpecTemplateSpecPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateSpecPtrOutput)
}

// Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type MachineSetSpecTemplateSpecOutput struct{ *pulumi.OutputState }

func (MachineSetSpecTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecTemplateSpec)(nil)).Elem()
}

func (o MachineSetSpecTemplateSpecOutput) ToMachineSetSpecTemplateSpecOutput() MachineSetSpecTemplateSpecOutput {
	return o
}

func (o MachineSetSpecTemplateSpecOutput) ToMachineSetSpecTemplateSpecOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecOutput {
	return o
}

func (o MachineSetSpecTemplateSpecOutput) ToMachineSetSpecTemplateSpecPtrOutput() MachineSetSpecTemplateSpecPtrOutput {
	return o.ToMachineSetSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (o MachineSetSpecTemplateSpecOutput) ToMachineSetSpecTemplateSpecPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSetSpecTemplateSpec) *MachineSetSpecTemplateSpec {
		return &v
	}).(MachineSetSpecTemplateSpecPtrOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
func (o MachineSetSpecTemplateSpecOutput) Bootstrap() MachineSetSpecTemplateSpecBootstrapOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpec) MachineSetSpecTemplateSpecBootstrap { return v.Bootstrap }).(MachineSetSpecTemplateSpecBootstrapOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachineSetSpecTemplateSpecOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpec) string { return v.ClusterName }).(pulumi.StringOutput)
}

// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
func (o MachineSetSpecTemplateSpecOutput) FailureDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpec) *string { return v.FailureDomain }).(pulumi.StringPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
func (o MachineSetSpecTemplateSpecOutput) InfrastructureRef() MachineSetSpecTemplateSpecInfrastructureRefOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpec) MachineSetSpecTemplateSpecInfrastructureRef {
		return v.InfrastructureRef
	}).(MachineSetSpecTemplateSpecInfrastructureRefOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
func (o MachineSetSpecTemplateSpecOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpec) *string { return v.NodeDeletionTimeout }).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
func (o MachineSetSpecTemplateSpecOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpec) *string { return v.NodeDrainTimeout }).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
func (o MachineSetSpecTemplateSpecOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpec) *string { return v.NodeVolumeDetachTimeout }).(pulumi.StringPtrOutput)
}

// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
func (o MachineSetSpecTemplateSpecOutput) ProviderID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpec) *string { return v.ProviderID }).(pulumi.StringPtrOutput)
}

// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
func (o MachineSetSpecTemplateSpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MachineSetSpecTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (MachineSetSpecTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecTemplateSpec)(nil)).Elem()
}

func (o MachineSetSpecTemplateSpecPtrOutput) ToMachineSetSpecTemplateSpecPtrOutput() MachineSetSpecTemplateSpecPtrOutput {
	return o
}

func (o MachineSetSpecTemplateSpecPtrOutput) ToMachineSetSpecTemplateSpecPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecPtrOutput {
	return o
}

func (o MachineSetSpecTemplateSpecPtrOutput) Elem() MachineSetSpecTemplateSpecOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpec) MachineSetSpecTemplateSpec {
		if v != nil {
			return *v
		}
		var ret MachineSetSpecTemplateSpec
		return ret
	}).(MachineSetSpecTemplateSpecOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
func (o MachineSetSpecTemplateSpecPtrOutput) Bootstrap() MachineSetSpecTemplateSpecBootstrapPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpec) *MachineSetSpecTemplateSpecBootstrap {
		if v == nil {
			return nil
		}
		return &v.Bootstrap
	}).(MachineSetSpecTemplateSpecBootstrapPtrOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachineSetSpecTemplateSpecPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
func (o MachineSetSpecTemplateSpecPtrOutput) FailureDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.FailureDomain
	}).(pulumi.StringPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
func (o MachineSetSpecTemplateSpecPtrOutput) InfrastructureRef() MachineSetSpecTemplateSpecInfrastructureRefPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpec) *MachineSetSpecTemplateSpecInfrastructureRef {
		if v == nil {
			return nil
		}
		return &v.InfrastructureRef
	}).(MachineSetSpecTemplateSpecInfrastructureRefPtrOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
func (o MachineSetSpecTemplateSpecPtrOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.NodeDeletionTimeout
	}).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
func (o MachineSetSpecTemplateSpecPtrOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.NodeDrainTimeout
	}).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
func (o MachineSetSpecTemplateSpecPtrOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.NodeVolumeDetachTimeout
	}).(pulumi.StringPtrOutput)
}

// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
func (o MachineSetSpecTemplateSpecPtrOutput) ProviderID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.ProviderID
	}).(pulumi.StringPtrOutput)
}

// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
func (o MachineSetSpecTemplateSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
type MachineSetSpecTemplateSpecBootstrap struct {
	// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
	ConfigRef *MachineSetSpecTemplateSpecBootstrapConfigRef `pulumi:"configRef"`
	// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
	DataSecretName *string `pulumi:"dataSecretName"`
}

// MachineSetSpecTemplateSpecBootstrapInput is an input type that accepts MachineSetSpecTemplateSpecBootstrapArgs and MachineSetSpecTemplateSpecBootstrapOutput values.
// You can construct a concrete instance of `MachineSetSpecTemplateSpecBootstrapInput` via:
//
//	MachineSetSpecTemplateSpecBootstrapArgs{...}
type MachineSetSpecTemplateSpecBootstrapInput interface {
	pulumi.Input

	ToMachineSetSpecTemplateSpecBootstrapOutput() MachineSetSpecTemplateSpecBootstrapOutput
	ToMachineSetSpecTemplateSpecBootstrapOutputWithContext(context.Context) MachineSetSpecTemplateSpecBootstrapOutput
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
type MachineSetSpecTemplateSpecBootstrapArgs struct {
	// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
	ConfigRef MachineSetSpecTemplateSpecBootstrapConfigRefPtrInput `pulumi:"configRef"`
	// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
	DataSecretName pulumi.StringPtrInput `pulumi:"dataSecretName"`
}

func (MachineSetSpecTemplateSpecBootstrapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecTemplateSpecBootstrap)(nil)).Elem()
}

func (i MachineSetSpecTemplateSpecBootstrapArgs) ToMachineSetSpecTemplateSpecBootstrapOutput() MachineSetSpecTemplateSpecBootstrapOutput {
	return i.ToMachineSetSpecTemplateSpecBootstrapOutputWithContext(context.Background())
}

func (i MachineSetSpecTemplateSpecBootstrapArgs) ToMachineSetSpecTemplateSpecBootstrapOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecBootstrapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateSpecBootstrapOutput)
}

func (i MachineSetSpecTemplateSpecBootstrapArgs) ToMachineSetSpecTemplateSpecBootstrapPtrOutput() MachineSetSpecTemplateSpecBootstrapPtrOutput {
	return i.ToMachineSetSpecTemplateSpecBootstrapPtrOutputWithContext(context.Background())
}

func (i MachineSetSpecTemplateSpecBootstrapArgs) ToMachineSetSpecTemplateSpecBootstrapPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecBootstrapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateSpecBootstrapOutput).ToMachineSetSpecTemplateSpecBootstrapPtrOutputWithContext(ctx)
}

// MachineSetSpecTemplateSpecBootstrapPtrInput is an input type that accepts MachineSetSpecTemplateSpecBootstrapArgs, MachineSetSpecTemplateSpecBootstrapPtr and MachineSetSpecTemplateSpecBootstrapPtrOutput values.
// You can construct a concrete instance of `MachineSetSpecTemplateSpecBootstrapPtrInput` via:
//
//	        MachineSetSpecTemplateSpecBootstrapArgs{...}
//
//	or:
//
//	        nil
type MachineSetSpecTemplateSpecBootstrapPtrInput interface {
	pulumi.Input

	ToMachineSetSpecTemplateSpecBootstrapPtrOutput() MachineSetSpecTemplateSpecBootstrapPtrOutput
	ToMachineSetSpecTemplateSpecBootstrapPtrOutputWithContext(context.Context) MachineSetSpecTemplateSpecBootstrapPtrOutput
}

type machineSetSpecTemplateSpecBootstrapPtrType MachineSetSpecTemplateSpecBootstrapArgs

func MachineSetSpecTemplateSpecBootstrapPtr(v *MachineSetSpecTemplateSpecBootstrapArgs) MachineSetSpecTemplateSpecBootstrapPtrInput {
	return (*machineSetSpecTemplateSpecBootstrapPtrType)(v)
}

func (*machineSetSpecTemplateSpecBootstrapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecTemplateSpecBootstrap)(nil)).Elem()
}

func (i *machineSetSpecTemplateSpecBootstrapPtrType) ToMachineSetSpecTemplateSpecBootstrapPtrOutput() MachineSetSpecTemplateSpecBootstrapPtrOutput {
	return i.ToMachineSetSpecTemplateSpecBootstrapPtrOutputWithContext(context.Background())
}

func (i *machineSetSpecTemplateSpecBootstrapPtrType) ToMachineSetSpecTemplateSpecBootstrapPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecBootstrapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateSpecBootstrapPtrOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
type MachineSetSpecTemplateSpecBootstrapOutput struct{ *pulumi.OutputState }

func (MachineSetSpecTemplateSpecBootstrapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecTemplateSpecBootstrap)(nil)).Elem()
}

func (o MachineSetSpecTemplateSpecBootstrapOutput) ToMachineSetSpecTemplateSpecBootstrapOutput() MachineSetSpecTemplateSpecBootstrapOutput {
	return o
}

func (o MachineSetSpecTemplateSpecBootstrapOutput) ToMachineSetSpecTemplateSpecBootstrapOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecBootstrapOutput {
	return o
}

func (o MachineSetSpecTemplateSpecBootstrapOutput) ToMachineSetSpecTemplateSpecBootstrapPtrOutput() MachineSetSpecTemplateSpecBootstrapPtrOutput {
	return o.ToMachineSetSpecTemplateSpecBootstrapPtrOutputWithContext(context.Background())
}

func (o MachineSetSpecTemplateSpecBootstrapOutput) ToMachineSetSpecTemplateSpecBootstrapPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecBootstrapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSetSpecTemplateSpecBootstrap) *MachineSetSpecTemplateSpecBootstrap {
		return &v
	}).(MachineSetSpecTemplateSpecBootstrapPtrOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
func (o MachineSetSpecTemplateSpecBootstrapOutput) ConfigRef() MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecBootstrap) *MachineSetSpecTemplateSpecBootstrapConfigRef {
		return v.ConfigRef
	}).(MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput)
}

// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
func (o MachineSetSpecTemplateSpecBootstrapOutput) DataSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecBootstrap) *string { return v.DataSecretName }).(pulumi.StringPtrOutput)
}

type MachineSetSpecTemplateSpecBootstrapPtrOutput struct{ *pulumi.OutputState }

func (MachineSetSpecTemplateSpecBootstrapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecTemplateSpecBootstrap)(nil)).Elem()
}

func (o MachineSetSpecTemplateSpecBootstrapPtrOutput) ToMachineSetSpecTemplateSpecBootstrapPtrOutput() MachineSetSpecTemplateSpecBootstrapPtrOutput {
	return o
}

func (o MachineSetSpecTemplateSpecBootstrapPtrOutput) ToMachineSetSpecTemplateSpecBootstrapPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecBootstrapPtrOutput {
	return o
}

func (o MachineSetSpecTemplateSpecBootstrapPtrOutput) Elem() MachineSetSpecTemplateSpecBootstrapOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecBootstrap) MachineSetSpecTemplateSpecBootstrap {
		if v != nil {
			return *v
		}
		var ret MachineSetSpecTemplateSpecBootstrap
		return ret
	}).(MachineSetSpecTemplateSpecBootstrapOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
func (o MachineSetSpecTemplateSpecBootstrapPtrOutput) ConfigRef() MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecBootstrap) *MachineSetSpecTemplateSpecBootstrapConfigRef {
		if v == nil {
			return nil
		}
		return v.ConfigRef
	}).(MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput)
}

// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
func (o MachineSetSpecTemplateSpecBootstrapPtrOutput) DataSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecBootstrap) *string {
		if v == nil {
			return nil
		}
		return v.DataSecretName
	}).(pulumi.StringPtrOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
type MachineSetSpecTemplateSpecBootstrapConfigRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// MachineSetSpecTemplateSpecBootstrapConfigRefInput is an input type that accepts MachineSetSpecTemplateSpecBootstrapConfigRefArgs and MachineSetSpecTemplateSpecBootstrapConfigRefOutput values.
// You can construct a concrete instance of `MachineSetSpecTemplateSpecBootstrapConfigRefInput` via:
//
//	MachineSetSpecTemplateSpecBootstrapConfigRefArgs{...}
type MachineSetSpecTemplateSpecBootstrapConfigRefInput interface {
	pulumi.Input

	ToMachineSetSpecTemplateSpecBootstrapConfigRefOutput() MachineSetSpecTemplateSpecBootstrapConfigRefOutput
	ToMachineSetSpecTemplateSpecBootstrapConfigRefOutputWithContext(context.Context) MachineSetSpecTemplateSpecBootstrapConfigRefOutput
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
type MachineSetSpecTemplateSpecBootstrapConfigRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (MachineSetSpecTemplateSpecBootstrapConfigRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecTemplateSpecBootstrapConfigRef)(nil)).Elem()
}

func (i MachineSetSpecTemplateSpecBootstrapConfigRefArgs) ToMachineSetSpecTemplateSpecBootstrapConfigRefOutput() MachineSetSpecTemplateSpecBootstrapConfigRefOutput {
	return i.ToMachineSetSpecTemplateSpecBootstrapConfigRefOutputWithContext(context.Background())
}

func (i MachineSetSpecTemplateSpecBootstrapConfigRefArgs) ToMachineSetSpecTemplateSpecBootstrapConfigRefOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecBootstrapConfigRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateSpecBootstrapConfigRefOutput)
}

func (i MachineSetSpecTemplateSpecBootstrapConfigRefArgs) ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput() MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return i.ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(context.Background())
}

func (i MachineSetSpecTemplateSpecBootstrapConfigRefArgs) ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateSpecBootstrapConfigRefOutput).ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx)
}

// MachineSetSpecTemplateSpecBootstrapConfigRefPtrInput is an input type that accepts MachineSetSpecTemplateSpecBootstrapConfigRefArgs, MachineSetSpecTemplateSpecBootstrapConfigRefPtr and MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput values.
// You can construct a concrete instance of `MachineSetSpecTemplateSpecBootstrapConfigRefPtrInput` via:
//
//	        MachineSetSpecTemplateSpecBootstrapConfigRefArgs{...}
//
//	or:
//
//	        nil
type MachineSetSpecTemplateSpecBootstrapConfigRefPtrInput interface {
	pulumi.Input

	ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput() MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput
	ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(context.Context) MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput
}

type machineSetSpecTemplateSpecBootstrapConfigRefPtrType MachineSetSpecTemplateSpecBootstrapConfigRefArgs

func MachineSetSpecTemplateSpecBootstrapConfigRefPtr(v *MachineSetSpecTemplateSpecBootstrapConfigRefArgs) MachineSetSpecTemplateSpecBootstrapConfigRefPtrInput {
	return (*machineSetSpecTemplateSpecBootstrapConfigRefPtrType)(v)
}

func (*machineSetSpecTemplateSpecBootstrapConfigRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecTemplateSpecBootstrapConfigRef)(nil)).Elem()
}

func (i *machineSetSpecTemplateSpecBootstrapConfigRefPtrType) ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput() MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return i.ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(context.Background())
}

func (i *machineSetSpecTemplateSpecBootstrapConfigRefPtrType) ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
type MachineSetSpecTemplateSpecBootstrapConfigRefOutput struct{ *pulumi.OutputState }

func (MachineSetSpecTemplateSpecBootstrapConfigRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecTemplateSpecBootstrapConfigRef)(nil)).Elem()
}

func (o MachineSetSpecTemplateSpecBootstrapConfigRefOutput) ToMachineSetSpecTemplateSpecBootstrapConfigRefOutput() MachineSetSpecTemplateSpecBootstrapConfigRefOutput {
	return o
}

func (o MachineSetSpecTemplateSpecBootstrapConfigRefOutput) ToMachineSetSpecTemplateSpecBootstrapConfigRefOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecBootstrapConfigRefOutput {
	return o
}

func (o MachineSetSpecTemplateSpecBootstrapConfigRefOutput) ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput() MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o.ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(context.Background())
}

func (o MachineSetSpecTemplateSpecBootstrapConfigRefOutput) ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSetSpecTemplateSpecBootstrapConfigRef) *MachineSetSpecTemplateSpecBootstrapConfigRef {
		return &v
	}).(MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput)
}

// API version of the referent.
func (o MachineSetSpecTemplateSpecBootstrapConfigRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecBootstrapConfigRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineSetSpecTemplateSpecBootstrapConfigRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecBootstrapConfigRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineSetSpecTemplateSpecBootstrapConfigRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecBootstrapConfigRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineSetSpecTemplateSpecBootstrapConfigRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecBootstrapConfigRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineSetSpecTemplateSpecBootstrapConfigRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecBootstrapConfigRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineSetSpecTemplateSpecBootstrapConfigRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecBootstrapConfigRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineSetSpecTemplateSpecBootstrapConfigRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecBootstrapConfigRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput struct{ *pulumi.OutputState }

func (MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecTemplateSpecBootstrapConfigRef)(nil)).Elem()
}

func (o MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput) ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput() MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o
}

func (o MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput) ToMachineSetSpecTemplateSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput {
	return o
}

func (o MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput) Elem() MachineSetSpecTemplateSpecBootstrapConfigRefOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecBootstrapConfigRef) MachineSetSpecTemplateSpecBootstrapConfigRef {
		if v != nil {
			return *v
		}
		var ret MachineSetSpecTemplateSpecBootstrapConfigRef
		return ret
	}).(MachineSetSpecTemplateSpecBootstrapConfigRefOutput)
}

// API version of the referent.
func (o MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
type MachineSetSpecTemplateSpecInfrastructureRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// MachineSetSpecTemplateSpecInfrastructureRefInput is an input type that accepts MachineSetSpecTemplateSpecInfrastructureRefArgs and MachineSetSpecTemplateSpecInfrastructureRefOutput values.
// You can construct a concrete instance of `MachineSetSpecTemplateSpecInfrastructureRefInput` via:
//
//	MachineSetSpecTemplateSpecInfrastructureRefArgs{...}
type MachineSetSpecTemplateSpecInfrastructureRefInput interface {
	pulumi.Input

	ToMachineSetSpecTemplateSpecInfrastructureRefOutput() MachineSetSpecTemplateSpecInfrastructureRefOutput
	ToMachineSetSpecTemplateSpecInfrastructureRefOutputWithContext(context.Context) MachineSetSpecTemplateSpecInfrastructureRefOutput
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
type MachineSetSpecTemplateSpecInfrastructureRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (MachineSetSpecTemplateSpecInfrastructureRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecTemplateSpecInfrastructureRef)(nil)).Elem()
}

func (i MachineSetSpecTemplateSpecInfrastructureRefArgs) ToMachineSetSpecTemplateSpecInfrastructureRefOutput() MachineSetSpecTemplateSpecInfrastructureRefOutput {
	return i.ToMachineSetSpecTemplateSpecInfrastructureRefOutputWithContext(context.Background())
}

func (i MachineSetSpecTemplateSpecInfrastructureRefArgs) ToMachineSetSpecTemplateSpecInfrastructureRefOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecInfrastructureRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateSpecInfrastructureRefOutput)
}

func (i MachineSetSpecTemplateSpecInfrastructureRefArgs) ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutput() MachineSetSpecTemplateSpecInfrastructureRefPtrOutput {
	return i.ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i MachineSetSpecTemplateSpecInfrastructureRefArgs) ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateSpecInfrastructureRefOutput).ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx)
}

// MachineSetSpecTemplateSpecInfrastructureRefPtrInput is an input type that accepts MachineSetSpecTemplateSpecInfrastructureRefArgs, MachineSetSpecTemplateSpecInfrastructureRefPtr and MachineSetSpecTemplateSpecInfrastructureRefPtrOutput values.
// You can construct a concrete instance of `MachineSetSpecTemplateSpecInfrastructureRefPtrInput` via:
//
//	        MachineSetSpecTemplateSpecInfrastructureRefArgs{...}
//
//	or:
//
//	        nil
type MachineSetSpecTemplateSpecInfrastructureRefPtrInput interface {
	pulumi.Input

	ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutput() MachineSetSpecTemplateSpecInfrastructureRefPtrOutput
	ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutputWithContext(context.Context) MachineSetSpecTemplateSpecInfrastructureRefPtrOutput
}

type machineSetSpecTemplateSpecInfrastructureRefPtrType MachineSetSpecTemplateSpecInfrastructureRefArgs

func MachineSetSpecTemplateSpecInfrastructureRefPtr(v *MachineSetSpecTemplateSpecInfrastructureRefArgs) MachineSetSpecTemplateSpecInfrastructureRefPtrInput {
	return (*machineSetSpecTemplateSpecInfrastructureRefPtrType)(v)
}

func (*machineSetSpecTemplateSpecInfrastructureRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecTemplateSpecInfrastructureRef)(nil)).Elem()
}

func (i *machineSetSpecTemplateSpecInfrastructureRefPtrType) ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutput() MachineSetSpecTemplateSpecInfrastructureRefPtrOutput {
	return i.ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i *machineSetSpecTemplateSpecInfrastructureRefPtrType) ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetSpecTemplateSpecInfrastructureRefPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
type MachineSetSpecTemplateSpecInfrastructureRefOutput struct{ *pulumi.OutputState }

func (MachineSetSpecTemplateSpecInfrastructureRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetSpecTemplateSpecInfrastructureRef)(nil)).Elem()
}

func (o MachineSetSpecTemplateSpecInfrastructureRefOutput) ToMachineSetSpecTemplateSpecInfrastructureRefOutput() MachineSetSpecTemplateSpecInfrastructureRefOutput {
	return o
}

func (o MachineSetSpecTemplateSpecInfrastructureRefOutput) ToMachineSetSpecTemplateSpecInfrastructureRefOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecInfrastructureRefOutput {
	return o
}

func (o MachineSetSpecTemplateSpecInfrastructureRefOutput) ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutput() MachineSetSpecTemplateSpecInfrastructureRefPtrOutput {
	return o.ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (o MachineSetSpecTemplateSpecInfrastructureRefOutput) ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecInfrastructureRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSetSpecTemplateSpecInfrastructureRef) *MachineSetSpecTemplateSpecInfrastructureRef {
		return &v
	}).(MachineSetSpecTemplateSpecInfrastructureRefPtrOutput)
}

// API version of the referent.
func (o MachineSetSpecTemplateSpecInfrastructureRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecInfrastructureRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineSetSpecTemplateSpecInfrastructureRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecInfrastructureRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineSetSpecTemplateSpecInfrastructureRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecInfrastructureRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineSetSpecTemplateSpecInfrastructureRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecInfrastructureRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineSetSpecTemplateSpecInfrastructureRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecInfrastructureRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineSetSpecTemplateSpecInfrastructureRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecInfrastructureRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineSetSpecTemplateSpecInfrastructureRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetSpecTemplateSpecInfrastructureRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type MachineSetSpecTemplateSpecInfrastructureRefPtrOutput struct{ *pulumi.OutputState }

func (MachineSetSpecTemplateSpecInfrastructureRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetSpecTemplateSpecInfrastructureRef)(nil)).Elem()
}

func (o MachineSetSpecTemplateSpecInfrastructureRefPtrOutput) ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutput() MachineSetSpecTemplateSpecInfrastructureRefPtrOutput {
	return o
}

func (o MachineSetSpecTemplateSpecInfrastructureRefPtrOutput) ToMachineSetSpecTemplateSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachineSetSpecTemplateSpecInfrastructureRefPtrOutput {
	return o
}

func (o MachineSetSpecTemplateSpecInfrastructureRefPtrOutput) Elem() MachineSetSpecTemplateSpecInfrastructureRefOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecInfrastructureRef) MachineSetSpecTemplateSpecInfrastructureRef {
		if v != nil {
			return *v
		}
		var ret MachineSetSpecTemplateSpecInfrastructureRef
		return ret
	}).(MachineSetSpecTemplateSpecInfrastructureRefOutput)
}

// API version of the referent.
func (o MachineSetSpecTemplateSpecInfrastructureRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineSetSpecTemplateSpecInfrastructureRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineSetSpecTemplateSpecInfrastructureRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineSetSpecTemplateSpecInfrastructureRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineSetSpecTemplateSpecInfrastructureRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineSetSpecTemplateSpecInfrastructureRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineSetSpecTemplateSpecInfrastructureRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetSpecTemplateSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// MachineSetStatus defines the observed state of MachineSet.
type MachineSetStatus struct {
	// The number of available replicas (ready for at least minReadySeconds) for this MachineSet.
	AvailableReplicas *int `pulumi:"availableReplicas"`
	// Conditions defines current service state of the MachineSet.
	Conditions     []MachineSetStatusConditions `pulumi:"conditions"`
	FailureMessage *string                      `pulumi:"failureMessage"`
	// In the event that there is a terminal problem reconciling the replicas, both FailureReason and FailureMessage will be set. FailureReason will be populated with a succinct value suitable for machine interpretation, while FailureMessage will contain a more verbose string suitable for logging and human consumption.
	//  These fields should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the MachineTemplate's spec or the configuration of the machine controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the machine controller, or the responsible machine controller itself being critically misconfigured.
	//  Any transient errors that occur during the reconciliation of Machines can be added as events to the MachineSet object and/or logged in the controller's output.
	FailureReason *string `pulumi:"failureReason"`
	// The number of replicas that have labels matching the labels of the machine template of the MachineSet.
	FullyLabeledReplicas *int `pulumi:"fullyLabeledReplicas"`
	// ObservedGeneration reflects the generation of the most recently observed MachineSet.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// The number of ready replicas for this MachineSet. A machine is considered ready when the node has been created and is "Ready".
	ReadyReplicas *int `pulumi:"readyReplicas"`
	// Replicas is the most recently observed number of replicas.
	Replicas *int `pulumi:"replicas"`
	// Selector is the same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
	Selector *string `pulumi:"selector"`
}

// MachineSetStatusInput is an input type that accepts MachineSetStatusArgs and MachineSetStatusOutput values.
// You can construct a concrete instance of `MachineSetStatusInput` via:
//
//	MachineSetStatusArgs{...}
type MachineSetStatusInput interface {
	pulumi.Input

	ToMachineSetStatusOutput() MachineSetStatusOutput
	ToMachineSetStatusOutputWithContext(context.Context) MachineSetStatusOutput
}

// MachineSetStatus defines the observed state of MachineSet.
type MachineSetStatusArgs struct {
	// The number of available replicas (ready for at least minReadySeconds) for this MachineSet.
	AvailableReplicas pulumi.IntPtrInput `pulumi:"availableReplicas"`
	// Conditions defines current service state of the MachineSet.
	Conditions     MachineSetStatusConditionsArrayInput `pulumi:"conditions"`
	FailureMessage pulumi.StringPtrInput                `pulumi:"failureMessage"`
	// In the event that there is a terminal problem reconciling the replicas, both FailureReason and FailureMessage will be set. FailureReason will be populated with a succinct value suitable for machine interpretation, while FailureMessage will contain a more verbose string suitable for logging and human consumption.
	//  These fields should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the MachineTemplate's spec or the configuration of the machine controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the machine controller, or the responsible machine controller itself being critically misconfigured.
	//  Any transient errors that occur during the reconciliation of Machines can be added as events to the MachineSet object and/or logged in the controller's output.
	FailureReason pulumi.StringPtrInput `pulumi:"failureReason"`
	// The number of replicas that have labels matching the labels of the machine template of the MachineSet.
	FullyLabeledReplicas pulumi.IntPtrInput `pulumi:"fullyLabeledReplicas"`
	// ObservedGeneration reflects the generation of the most recently observed MachineSet.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// The number of ready replicas for this MachineSet. A machine is considered ready when the node has been created and is "Ready".
	ReadyReplicas pulumi.IntPtrInput `pulumi:"readyReplicas"`
	// Replicas is the most recently observed number of replicas.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// Selector is the same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
	Selector pulumi.StringPtrInput `pulumi:"selector"`
}

func (MachineSetStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetStatus)(nil)).Elem()
}

func (i MachineSetStatusArgs) ToMachineSetStatusOutput() MachineSetStatusOutput {
	return i.ToMachineSetStatusOutputWithContext(context.Background())
}

func (i MachineSetStatusArgs) ToMachineSetStatusOutputWithContext(ctx context.Context) MachineSetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetStatusOutput)
}

func (i MachineSetStatusArgs) ToMachineSetStatusPtrOutput() MachineSetStatusPtrOutput {
	return i.ToMachineSetStatusPtrOutputWithContext(context.Background())
}

func (i MachineSetStatusArgs) ToMachineSetStatusPtrOutputWithContext(ctx context.Context) MachineSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetStatusOutput).ToMachineSetStatusPtrOutputWithContext(ctx)
}

// MachineSetStatusPtrInput is an input type that accepts MachineSetStatusArgs, MachineSetStatusPtr and MachineSetStatusPtrOutput values.
// You can construct a concrete instance of `MachineSetStatusPtrInput` via:
//
//	        MachineSetStatusArgs{...}
//
//	or:
//
//	        nil
type MachineSetStatusPtrInput interface {
	pulumi.Input

	ToMachineSetStatusPtrOutput() MachineSetStatusPtrOutput
	ToMachineSetStatusPtrOutputWithContext(context.Context) MachineSetStatusPtrOutput
}

type machineSetStatusPtrType MachineSetStatusArgs

func MachineSetStatusPtr(v *MachineSetStatusArgs) MachineSetStatusPtrInput {
	return (*machineSetStatusPtrType)(v)
}

func (*machineSetStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetStatus)(nil)).Elem()
}

func (i *machineSetStatusPtrType) ToMachineSetStatusPtrOutput() MachineSetStatusPtrOutput {
	return i.ToMachineSetStatusPtrOutputWithContext(context.Background())
}

func (i *machineSetStatusPtrType) ToMachineSetStatusPtrOutputWithContext(ctx context.Context) MachineSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetStatusPtrOutput)
}

// MachineSetStatus defines the observed state of MachineSet.
type MachineSetStatusOutput struct{ *pulumi.OutputState }

func (MachineSetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetStatus)(nil)).Elem()
}

func (o MachineSetStatusOutput) ToMachineSetStatusOutput() MachineSetStatusOutput {
	return o
}

func (o MachineSetStatusOutput) ToMachineSetStatusOutputWithContext(ctx context.Context) MachineSetStatusOutput {
	return o
}

func (o MachineSetStatusOutput) ToMachineSetStatusPtrOutput() MachineSetStatusPtrOutput {
	return o.ToMachineSetStatusPtrOutputWithContext(context.Background())
}

func (o MachineSetStatusOutput) ToMachineSetStatusPtrOutputWithContext(ctx context.Context) MachineSetStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSetStatus) *MachineSetStatus {
		return &v
	}).(MachineSetStatusPtrOutput)
}

// The number of available replicas (ready for at least minReadySeconds) for this MachineSet.
func (o MachineSetStatusOutput) AvailableReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineSetStatus) *int { return v.AvailableReplicas }).(pulumi.IntPtrOutput)
}

// Conditions defines current service state of the MachineSet.
func (o MachineSetStatusOutput) Conditions() MachineSetStatusConditionsArrayOutput {
	return o.ApplyT(func(v MachineSetStatus) []MachineSetStatusConditions { return v.Conditions }).(MachineSetStatusConditionsArrayOutput)
}

func (o MachineSetStatusOutput) FailureMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetStatus) *string { return v.FailureMessage }).(pulumi.StringPtrOutput)
}

// In the event that there is a terminal problem reconciling the replicas, both FailureReason and FailureMessage will be set. FailureReason will be populated with a succinct value suitable for machine interpretation, while FailureMessage will contain a more verbose string suitable for logging and human consumption.
//
//	These fields should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the MachineTemplate's spec or the configuration of the machine controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the machine controller, or the responsible machine controller itself being critically misconfigured.
//	Any transient errors that occur during the reconciliation of Machines can be added as events to the MachineSet object and/or logged in the controller's output.
func (o MachineSetStatusOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetStatus) *string { return v.FailureReason }).(pulumi.StringPtrOutput)
}

// The number of replicas that have labels matching the labels of the machine template of the MachineSet.
func (o MachineSetStatusOutput) FullyLabeledReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineSetStatus) *int { return v.FullyLabeledReplicas }).(pulumi.IntPtrOutput)
}

// ObservedGeneration reflects the generation of the most recently observed MachineSet.
func (o MachineSetStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineSetStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// The number of ready replicas for this MachineSet. A machine is considered ready when the node has been created and is "Ready".
func (o MachineSetStatusOutput) ReadyReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineSetStatus) *int { return v.ReadyReplicas }).(pulumi.IntPtrOutput)
}

// Replicas is the most recently observed number of replicas.
func (o MachineSetStatusOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineSetStatus) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Selector is the same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
func (o MachineSetStatusOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetStatus) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

type MachineSetStatusPtrOutput struct{ *pulumi.OutputState }

func (MachineSetStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSetStatus)(nil)).Elem()
}

func (o MachineSetStatusPtrOutput) ToMachineSetStatusPtrOutput() MachineSetStatusPtrOutput {
	return o
}

func (o MachineSetStatusPtrOutput) ToMachineSetStatusPtrOutputWithContext(ctx context.Context) MachineSetStatusPtrOutput {
	return o
}

func (o MachineSetStatusPtrOutput) Elem() MachineSetStatusOutput {
	return o.ApplyT(func(v *MachineSetStatus) MachineSetStatus {
		if v != nil {
			return *v
		}
		var ret MachineSetStatus
		return ret
	}).(MachineSetStatusOutput)
}

// The number of available replicas (ready for at least minReadySeconds) for this MachineSet.
func (o MachineSetStatusPtrOutput) AvailableReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.AvailableReplicas
	}).(pulumi.IntPtrOutput)
}

// Conditions defines current service state of the MachineSet.
func (o MachineSetStatusPtrOutput) Conditions() MachineSetStatusConditionsArrayOutput {
	return o.ApplyT(func(v *MachineSetStatus) []MachineSetStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(MachineSetStatusConditionsArrayOutput)
}

func (o MachineSetStatusPtrOutput) FailureMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetStatus) *string {
		if v == nil {
			return nil
		}
		return v.FailureMessage
	}).(pulumi.StringPtrOutput)
}

// In the event that there is a terminal problem reconciling the replicas, both FailureReason and FailureMessage will be set. FailureReason will be populated with a succinct value suitable for machine interpretation, while FailureMessage will contain a more verbose string suitable for logging and human consumption.
//
//	These fields should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the MachineTemplate's spec or the configuration of the machine controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the machine controller, or the responsible machine controller itself being critically misconfigured.
//	Any transient errors that occur during the reconciliation of Machines can be added as events to the MachineSet object and/or logged in the controller's output.
func (o MachineSetStatusPtrOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetStatus) *string {
		if v == nil {
			return nil
		}
		return v.FailureReason
	}).(pulumi.StringPtrOutput)
}

// The number of replicas that have labels matching the labels of the machine template of the MachineSet.
func (o MachineSetStatusPtrOutput) FullyLabeledReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.FullyLabeledReplicas
	}).(pulumi.IntPtrOutput)
}

// ObservedGeneration reflects the generation of the most recently observed MachineSet.
func (o MachineSetStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// The number of ready replicas for this MachineSet. A machine is considered ready when the node has been created and is "Ready".
func (o MachineSetStatusPtrOutput) ReadyReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.ReadyReplicas
	}).(pulumi.IntPtrOutput)
}

// Replicas is the most recently observed number of replicas.
func (o MachineSetStatusPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// Selector is the same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
func (o MachineSetStatusPtrOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSetStatus) *string {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(pulumi.StringPtrOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type MachineSetStatusConditions struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason *string `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity *string `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type string `pulumi:"type"`
}

// MachineSetStatusConditionsInput is an input type that accepts MachineSetStatusConditionsArgs and MachineSetStatusConditionsOutput values.
// You can construct a concrete instance of `MachineSetStatusConditionsInput` via:
//
//	MachineSetStatusConditionsArgs{...}
type MachineSetStatusConditionsInput interface {
	pulumi.Input

	ToMachineSetStatusConditionsOutput() MachineSetStatusConditionsOutput
	ToMachineSetStatusConditionsOutputWithContext(context.Context) MachineSetStatusConditionsOutput
}

// Condition defines an observation of a Cluster API resource operational state.
type MachineSetStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MachineSetStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetStatusConditions)(nil)).Elem()
}

func (i MachineSetStatusConditionsArgs) ToMachineSetStatusConditionsOutput() MachineSetStatusConditionsOutput {
	return i.ToMachineSetStatusConditionsOutputWithContext(context.Background())
}

func (i MachineSetStatusConditionsArgs) ToMachineSetStatusConditionsOutputWithContext(ctx context.Context) MachineSetStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetStatusConditionsOutput)
}

// MachineSetStatusConditionsArrayInput is an input type that accepts MachineSetStatusConditionsArray and MachineSetStatusConditionsArrayOutput values.
// You can construct a concrete instance of `MachineSetStatusConditionsArrayInput` via:
//
//	MachineSetStatusConditionsArray{ MachineSetStatusConditionsArgs{...} }
type MachineSetStatusConditionsArrayInput interface {
	pulumi.Input

	ToMachineSetStatusConditionsArrayOutput() MachineSetStatusConditionsArrayOutput
	ToMachineSetStatusConditionsArrayOutputWithContext(context.Context) MachineSetStatusConditionsArrayOutput
}

type MachineSetStatusConditionsArray []MachineSetStatusConditionsInput

func (MachineSetStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineSetStatusConditions)(nil)).Elem()
}

func (i MachineSetStatusConditionsArray) ToMachineSetStatusConditionsArrayOutput() MachineSetStatusConditionsArrayOutput {
	return i.ToMachineSetStatusConditionsArrayOutputWithContext(context.Background())
}

func (i MachineSetStatusConditionsArray) ToMachineSetStatusConditionsArrayOutputWithContext(ctx context.Context) MachineSetStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetStatusConditionsArrayOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type MachineSetStatusConditionsOutput struct{ *pulumi.OutputState }

func (MachineSetStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSetStatusConditions)(nil)).Elem()
}

func (o MachineSetStatusConditionsOutput) ToMachineSetStatusConditionsOutput() MachineSetStatusConditionsOutput {
	return o
}

func (o MachineSetStatusConditionsOutput) ToMachineSetStatusConditionsOutputWithContext(ctx context.Context) MachineSetStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
func (o MachineSetStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v MachineSetStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A human readable message indicating details about the transition. This field may be empty.
func (o MachineSetStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
func (o MachineSetStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
func (o MachineSetStatusConditionsOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSetStatusConditions) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o MachineSetStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MachineSetStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
func (o MachineSetStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MachineSetStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type MachineSetStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (MachineSetStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineSetStatusConditions)(nil)).Elem()
}

func (o MachineSetStatusConditionsArrayOutput) ToMachineSetStatusConditionsArrayOutput() MachineSetStatusConditionsArrayOutput {
	return o
}

func (o MachineSetStatusConditionsArrayOutput) ToMachineSetStatusConditionsArrayOutputWithContext(ctx context.Context) MachineSetStatusConditionsArrayOutput {
	return o
}

func (o MachineSetStatusConditionsArrayOutput) Index(i pulumi.IntInput) MachineSetStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineSetStatusConditions {
		return vs[0].([]MachineSetStatusConditions)[vs[1].(int)]
	}).(MachineSetStatusConditionsOutput)
}

// MachineSpec defines the desired state of Machine.
type MachineSpec struct {
	// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
	Bootstrap MachineSpecBootstrap `pulumi:"bootstrap"`
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName string `pulumi:"clusterName"`
	// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
	FailureDomain *string `pulumi:"failureDomain"`
	// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
	InfrastructureRef MachineSpecInfrastructureRef `pulumi:"infrastructureRef"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
	NodeDeletionTimeout *string `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
	NodeDrainTimeout *string `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
	NodeVolumeDetachTimeout *string `pulumi:"nodeVolumeDetachTimeout"`
	// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
	ProviderID *string `pulumi:"providerID"`
	// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
	Version *string `pulumi:"version"`
}

// MachineSpecInput is an input type that accepts MachineSpecArgs and MachineSpecOutput values.
// You can construct a concrete instance of `MachineSpecInput` via:
//
//	MachineSpecArgs{...}
type MachineSpecInput interface {
	pulumi.Input

	ToMachineSpecOutput() MachineSpecOutput
	ToMachineSpecOutputWithContext(context.Context) MachineSpecOutput
}

// MachineSpec defines the desired state of Machine.
type MachineSpecArgs struct {
	// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
	Bootstrap MachineSpecBootstrapInput `pulumi:"bootstrap"`
	// ClusterName is the name of the Cluster this object belongs to.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
	FailureDomain pulumi.StringPtrInput `pulumi:"failureDomain"`
	// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
	InfrastructureRef MachineSpecInfrastructureRefInput `pulumi:"infrastructureRef"`
	// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
	NodeDeletionTimeout pulumi.StringPtrInput `pulumi:"nodeDeletionTimeout"`
	// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
	NodeDrainTimeout pulumi.StringPtrInput `pulumi:"nodeDrainTimeout"`
	// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
	NodeVolumeDetachTimeout pulumi.StringPtrInput `pulumi:"nodeVolumeDetachTimeout"`
	// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
	ProviderID pulumi.StringPtrInput `pulumi:"providerID"`
	// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (MachineSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSpec)(nil)).Elem()
}

func (i MachineSpecArgs) ToMachineSpecOutput() MachineSpecOutput {
	return i.ToMachineSpecOutputWithContext(context.Background())
}

func (i MachineSpecArgs) ToMachineSpecOutputWithContext(ctx context.Context) MachineSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSpecOutput)
}

func (i MachineSpecArgs) ToMachineSpecPtrOutput() MachineSpecPtrOutput {
	return i.ToMachineSpecPtrOutputWithContext(context.Background())
}

func (i MachineSpecArgs) ToMachineSpecPtrOutputWithContext(ctx context.Context) MachineSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSpecOutput).ToMachineSpecPtrOutputWithContext(ctx)
}

// MachineSpecPtrInput is an input type that accepts MachineSpecArgs, MachineSpecPtr and MachineSpecPtrOutput values.
// You can construct a concrete instance of `MachineSpecPtrInput` via:
//
//	        MachineSpecArgs{...}
//
//	or:
//
//	        nil
type MachineSpecPtrInput interface {
	pulumi.Input

	ToMachineSpecPtrOutput() MachineSpecPtrOutput
	ToMachineSpecPtrOutputWithContext(context.Context) MachineSpecPtrOutput
}

type machineSpecPtrType MachineSpecArgs

func MachineSpecPtr(v *MachineSpecArgs) MachineSpecPtrInput {
	return (*machineSpecPtrType)(v)
}

func (*machineSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSpec)(nil)).Elem()
}

func (i *machineSpecPtrType) ToMachineSpecPtrOutput() MachineSpecPtrOutput {
	return i.ToMachineSpecPtrOutputWithContext(context.Background())
}

func (i *machineSpecPtrType) ToMachineSpecPtrOutputWithContext(ctx context.Context) MachineSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSpecPtrOutput)
}

// MachineSpec defines the desired state of Machine.
type MachineSpecOutput struct{ *pulumi.OutputState }

func (MachineSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSpec)(nil)).Elem()
}

func (o MachineSpecOutput) ToMachineSpecOutput() MachineSpecOutput {
	return o
}

func (o MachineSpecOutput) ToMachineSpecOutputWithContext(ctx context.Context) MachineSpecOutput {
	return o
}

func (o MachineSpecOutput) ToMachineSpecPtrOutput() MachineSpecPtrOutput {
	return o.ToMachineSpecPtrOutputWithContext(context.Background())
}

func (o MachineSpecOutput) ToMachineSpecPtrOutputWithContext(ctx context.Context) MachineSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSpec) *MachineSpec {
		return &v
	}).(MachineSpecPtrOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
func (o MachineSpecOutput) Bootstrap() MachineSpecBootstrapOutput {
	return o.ApplyT(func(v MachineSpec) MachineSpecBootstrap { return v.Bootstrap }).(MachineSpecBootstrapOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachineSpecOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v MachineSpec) string { return v.ClusterName }).(pulumi.StringOutput)
}

// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
func (o MachineSpecOutput) FailureDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpec) *string { return v.FailureDomain }).(pulumi.StringPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
func (o MachineSpecOutput) InfrastructureRef() MachineSpecInfrastructureRefOutput {
	return o.ApplyT(func(v MachineSpec) MachineSpecInfrastructureRef { return v.InfrastructureRef }).(MachineSpecInfrastructureRefOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
func (o MachineSpecOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpec) *string { return v.NodeDeletionTimeout }).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
func (o MachineSpecOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpec) *string { return v.NodeDrainTimeout }).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
func (o MachineSpecOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpec) *string { return v.NodeVolumeDetachTimeout }).(pulumi.StringPtrOutput)
}

// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
func (o MachineSpecOutput) ProviderID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpec) *string { return v.ProviderID }).(pulumi.StringPtrOutput)
}

// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
func (o MachineSpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MachineSpecPtrOutput struct{ *pulumi.OutputState }

func (MachineSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSpec)(nil)).Elem()
}

func (o MachineSpecPtrOutput) ToMachineSpecPtrOutput() MachineSpecPtrOutput {
	return o
}

func (o MachineSpecPtrOutput) ToMachineSpecPtrOutputWithContext(ctx context.Context) MachineSpecPtrOutput {
	return o
}

func (o MachineSpecPtrOutput) Elem() MachineSpecOutput {
	return o.ApplyT(func(v *MachineSpec) MachineSpec {
		if v != nil {
			return *v
		}
		var ret MachineSpec
		return ret
	}).(MachineSpecOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
func (o MachineSpecPtrOutput) Bootstrap() MachineSpecBootstrapPtrOutput {
	return o.ApplyT(func(v *MachineSpec) *MachineSpecBootstrap {
		if v == nil {
			return nil
		}
		return &v.Bootstrap
	}).(MachineSpecBootstrapPtrOutput)
}

// ClusterName is the name of the Cluster this object belongs to.
func (o MachineSpecPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
func (o MachineSpecPtrOutput) FailureDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpec) *string {
		if v == nil {
			return nil
		}
		return v.FailureDomain
	}).(pulumi.StringPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
func (o MachineSpecPtrOutput) InfrastructureRef() MachineSpecInfrastructureRefPtrOutput {
	return o.ApplyT(func(v *MachineSpec) *MachineSpecInfrastructureRef {
		if v == nil {
			return nil
		}
		return &v.InfrastructureRef
	}).(MachineSpecInfrastructureRefPtrOutput)
}

// NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely. Defaults to 10 seconds.
func (o MachineSpecPtrOutput) NodeDeletionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpec) *string {
		if v == nil {
			return nil
		}
		return v.NodeDeletionTimeout
	}).(pulumi.StringPtrOutput)
}

// NodeDrainTimeout is the total amount of time that the controller will spend on draining a node. The default value is 0, meaning that the node can be drained without any time limitations. NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
func (o MachineSpecPtrOutput) NodeDrainTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpec) *string {
		if v == nil {
			return nil
		}
		return v.NodeDrainTimeout
	}).(pulumi.StringPtrOutput)
}

// NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
func (o MachineSpecPtrOutput) NodeVolumeDetachTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpec) *string {
		if v == nil {
			return nil
		}
		return v.NodeVolumeDetachTimeout
	}).(pulumi.StringPtrOutput)
}

// ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
func (o MachineSpecPtrOutput) ProviderID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpec) *string {
		if v == nil {
			return nil
		}
		return v.ProviderID
	}).(pulumi.StringPtrOutput)
}

// Version defines the desired Kubernetes version. This field is meant to be optionally used by bootstrap providers.
func (o MachineSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
type MachineSpecBootstrap struct {
	// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
	ConfigRef *MachineSpecBootstrapConfigRef `pulumi:"configRef"`
	// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
	DataSecretName *string `pulumi:"dataSecretName"`
}

// MachineSpecBootstrapInput is an input type that accepts MachineSpecBootstrapArgs and MachineSpecBootstrapOutput values.
// You can construct a concrete instance of `MachineSpecBootstrapInput` via:
//
//	MachineSpecBootstrapArgs{...}
type MachineSpecBootstrapInput interface {
	pulumi.Input

	ToMachineSpecBootstrapOutput() MachineSpecBootstrapOutput
	ToMachineSpecBootstrapOutputWithContext(context.Context) MachineSpecBootstrapOutput
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
type MachineSpecBootstrapArgs struct {
	// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
	ConfigRef MachineSpecBootstrapConfigRefPtrInput `pulumi:"configRef"`
	// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
	DataSecretName pulumi.StringPtrInput `pulumi:"dataSecretName"`
}

func (MachineSpecBootstrapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSpecBootstrap)(nil)).Elem()
}

func (i MachineSpecBootstrapArgs) ToMachineSpecBootstrapOutput() MachineSpecBootstrapOutput {
	return i.ToMachineSpecBootstrapOutputWithContext(context.Background())
}

func (i MachineSpecBootstrapArgs) ToMachineSpecBootstrapOutputWithContext(ctx context.Context) MachineSpecBootstrapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSpecBootstrapOutput)
}

func (i MachineSpecBootstrapArgs) ToMachineSpecBootstrapPtrOutput() MachineSpecBootstrapPtrOutput {
	return i.ToMachineSpecBootstrapPtrOutputWithContext(context.Background())
}

func (i MachineSpecBootstrapArgs) ToMachineSpecBootstrapPtrOutputWithContext(ctx context.Context) MachineSpecBootstrapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSpecBootstrapOutput).ToMachineSpecBootstrapPtrOutputWithContext(ctx)
}

// MachineSpecBootstrapPtrInput is an input type that accepts MachineSpecBootstrapArgs, MachineSpecBootstrapPtr and MachineSpecBootstrapPtrOutput values.
// You can construct a concrete instance of `MachineSpecBootstrapPtrInput` via:
//
//	        MachineSpecBootstrapArgs{...}
//
//	or:
//
//	        nil
type MachineSpecBootstrapPtrInput interface {
	pulumi.Input

	ToMachineSpecBootstrapPtrOutput() MachineSpecBootstrapPtrOutput
	ToMachineSpecBootstrapPtrOutputWithContext(context.Context) MachineSpecBootstrapPtrOutput
}

type machineSpecBootstrapPtrType MachineSpecBootstrapArgs

func MachineSpecBootstrapPtr(v *MachineSpecBootstrapArgs) MachineSpecBootstrapPtrInput {
	return (*machineSpecBootstrapPtrType)(v)
}

func (*machineSpecBootstrapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSpecBootstrap)(nil)).Elem()
}

func (i *machineSpecBootstrapPtrType) ToMachineSpecBootstrapPtrOutput() MachineSpecBootstrapPtrOutput {
	return i.ToMachineSpecBootstrapPtrOutputWithContext(context.Background())
}

func (i *machineSpecBootstrapPtrType) ToMachineSpecBootstrapPtrOutputWithContext(ctx context.Context) MachineSpecBootstrapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSpecBootstrapPtrOutput)
}

// Bootstrap is a reference to a local struct which encapsulates fields to configure the Machine’s bootstrapping mechanism.
type MachineSpecBootstrapOutput struct{ *pulumi.OutputState }

func (MachineSpecBootstrapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSpecBootstrap)(nil)).Elem()
}

func (o MachineSpecBootstrapOutput) ToMachineSpecBootstrapOutput() MachineSpecBootstrapOutput {
	return o
}

func (o MachineSpecBootstrapOutput) ToMachineSpecBootstrapOutputWithContext(ctx context.Context) MachineSpecBootstrapOutput {
	return o
}

func (o MachineSpecBootstrapOutput) ToMachineSpecBootstrapPtrOutput() MachineSpecBootstrapPtrOutput {
	return o.ToMachineSpecBootstrapPtrOutputWithContext(context.Background())
}

func (o MachineSpecBootstrapOutput) ToMachineSpecBootstrapPtrOutputWithContext(ctx context.Context) MachineSpecBootstrapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSpecBootstrap) *MachineSpecBootstrap {
		return &v
	}).(MachineSpecBootstrapPtrOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
func (o MachineSpecBootstrapOutput) ConfigRef() MachineSpecBootstrapConfigRefPtrOutput {
	return o.ApplyT(func(v MachineSpecBootstrap) *MachineSpecBootstrapConfigRef { return v.ConfigRef }).(MachineSpecBootstrapConfigRefPtrOutput)
}

// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
func (o MachineSpecBootstrapOutput) DataSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecBootstrap) *string { return v.DataSecretName }).(pulumi.StringPtrOutput)
}

type MachineSpecBootstrapPtrOutput struct{ *pulumi.OutputState }

func (MachineSpecBootstrapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSpecBootstrap)(nil)).Elem()
}

func (o MachineSpecBootstrapPtrOutput) ToMachineSpecBootstrapPtrOutput() MachineSpecBootstrapPtrOutput {
	return o
}

func (o MachineSpecBootstrapPtrOutput) ToMachineSpecBootstrapPtrOutputWithContext(ctx context.Context) MachineSpecBootstrapPtrOutput {
	return o
}

func (o MachineSpecBootstrapPtrOutput) Elem() MachineSpecBootstrapOutput {
	return o.ApplyT(func(v *MachineSpecBootstrap) MachineSpecBootstrap {
		if v != nil {
			return *v
		}
		var ret MachineSpecBootstrap
		return ret
	}).(MachineSpecBootstrapOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
func (o MachineSpecBootstrapPtrOutput) ConfigRef() MachineSpecBootstrapConfigRefPtrOutput {
	return o.ApplyT(func(v *MachineSpecBootstrap) *MachineSpecBootstrapConfigRef {
		if v == nil {
			return nil
		}
		return v.ConfigRef
	}).(MachineSpecBootstrapConfigRefPtrOutput)
}

// DataSecretName is the name of the secret that stores the bootstrap data script. If nil, the Machine should remain in the Pending state.
func (o MachineSpecBootstrapPtrOutput) DataSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecBootstrap) *string {
		if v == nil {
			return nil
		}
		return v.DataSecretName
	}).(pulumi.StringPtrOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
type MachineSpecBootstrapConfigRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// MachineSpecBootstrapConfigRefInput is an input type that accepts MachineSpecBootstrapConfigRefArgs and MachineSpecBootstrapConfigRefOutput values.
// You can construct a concrete instance of `MachineSpecBootstrapConfigRefInput` via:
//
//	MachineSpecBootstrapConfigRefArgs{...}
type MachineSpecBootstrapConfigRefInput interface {
	pulumi.Input

	ToMachineSpecBootstrapConfigRefOutput() MachineSpecBootstrapConfigRefOutput
	ToMachineSpecBootstrapConfigRefOutputWithContext(context.Context) MachineSpecBootstrapConfigRefOutput
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
type MachineSpecBootstrapConfigRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (MachineSpecBootstrapConfigRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSpecBootstrapConfigRef)(nil)).Elem()
}

func (i MachineSpecBootstrapConfigRefArgs) ToMachineSpecBootstrapConfigRefOutput() MachineSpecBootstrapConfigRefOutput {
	return i.ToMachineSpecBootstrapConfigRefOutputWithContext(context.Background())
}

func (i MachineSpecBootstrapConfigRefArgs) ToMachineSpecBootstrapConfigRefOutputWithContext(ctx context.Context) MachineSpecBootstrapConfigRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSpecBootstrapConfigRefOutput)
}

func (i MachineSpecBootstrapConfigRefArgs) ToMachineSpecBootstrapConfigRefPtrOutput() MachineSpecBootstrapConfigRefPtrOutput {
	return i.ToMachineSpecBootstrapConfigRefPtrOutputWithContext(context.Background())
}

func (i MachineSpecBootstrapConfigRefArgs) ToMachineSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachineSpecBootstrapConfigRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSpecBootstrapConfigRefOutput).ToMachineSpecBootstrapConfigRefPtrOutputWithContext(ctx)
}

// MachineSpecBootstrapConfigRefPtrInput is an input type that accepts MachineSpecBootstrapConfigRefArgs, MachineSpecBootstrapConfigRefPtr and MachineSpecBootstrapConfigRefPtrOutput values.
// You can construct a concrete instance of `MachineSpecBootstrapConfigRefPtrInput` via:
//
//	        MachineSpecBootstrapConfigRefArgs{...}
//
//	or:
//
//	        nil
type MachineSpecBootstrapConfigRefPtrInput interface {
	pulumi.Input

	ToMachineSpecBootstrapConfigRefPtrOutput() MachineSpecBootstrapConfigRefPtrOutput
	ToMachineSpecBootstrapConfigRefPtrOutputWithContext(context.Context) MachineSpecBootstrapConfigRefPtrOutput
}

type machineSpecBootstrapConfigRefPtrType MachineSpecBootstrapConfigRefArgs

func MachineSpecBootstrapConfigRefPtr(v *MachineSpecBootstrapConfigRefArgs) MachineSpecBootstrapConfigRefPtrInput {
	return (*machineSpecBootstrapConfigRefPtrType)(v)
}

func (*machineSpecBootstrapConfigRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSpecBootstrapConfigRef)(nil)).Elem()
}

func (i *machineSpecBootstrapConfigRefPtrType) ToMachineSpecBootstrapConfigRefPtrOutput() MachineSpecBootstrapConfigRefPtrOutput {
	return i.ToMachineSpecBootstrapConfigRefPtrOutputWithContext(context.Background())
}

func (i *machineSpecBootstrapConfigRefPtrType) ToMachineSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachineSpecBootstrapConfigRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSpecBootstrapConfigRefPtrOutput)
}

// ConfigRef is a reference to a bootstrap provider-specific resource that holds configuration details. The reference is optional to allow users/operators to specify Bootstrap.DataSecretName without the need of a controller.
type MachineSpecBootstrapConfigRefOutput struct{ *pulumi.OutputState }

func (MachineSpecBootstrapConfigRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSpecBootstrapConfigRef)(nil)).Elem()
}

func (o MachineSpecBootstrapConfigRefOutput) ToMachineSpecBootstrapConfigRefOutput() MachineSpecBootstrapConfigRefOutput {
	return o
}

func (o MachineSpecBootstrapConfigRefOutput) ToMachineSpecBootstrapConfigRefOutputWithContext(ctx context.Context) MachineSpecBootstrapConfigRefOutput {
	return o
}

func (o MachineSpecBootstrapConfigRefOutput) ToMachineSpecBootstrapConfigRefPtrOutput() MachineSpecBootstrapConfigRefPtrOutput {
	return o.ToMachineSpecBootstrapConfigRefPtrOutputWithContext(context.Background())
}

func (o MachineSpecBootstrapConfigRefOutput) ToMachineSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachineSpecBootstrapConfigRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSpecBootstrapConfigRef) *MachineSpecBootstrapConfigRef {
		return &v
	}).(MachineSpecBootstrapConfigRefPtrOutput)
}

// API version of the referent.
func (o MachineSpecBootstrapConfigRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecBootstrapConfigRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineSpecBootstrapConfigRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecBootstrapConfigRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineSpecBootstrapConfigRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecBootstrapConfigRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineSpecBootstrapConfigRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecBootstrapConfigRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineSpecBootstrapConfigRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecBootstrapConfigRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineSpecBootstrapConfigRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecBootstrapConfigRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineSpecBootstrapConfigRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecBootstrapConfigRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type MachineSpecBootstrapConfigRefPtrOutput struct{ *pulumi.OutputState }

func (MachineSpecBootstrapConfigRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSpecBootstrapConfigRef)(nil)).Elem()
}

func (o MachineSpecBootstrapConfigRefPtrOutput) ToMachineSpecBootstrapConfigRefPtrOutput() MachineSpecBootstrapConfigRefPtrOutput {
	return o
}

func (o MachineSpecBootstrapConfigRefPtrOutput) ToMachineSpecBootstrapConfigRefPtrOutputWithContext(ctx context.Context) MachineSpecBootstrapConfigRefPtrOutput {
	return o
}

func (o MachineSpecBootstrapConfigRefPtrOutput) Elem() MachineSpecBootstrapConfigRefOutput {
	return o.ApplyT(func(v *MachineSpecBootstrapConfigRef) MachineSpecBootstrapConfigRef {
		if v != nil {
			return *v
		}
		var ret MachineSpecBootstrapConfigRef
		return ret
	}).(MachineSpecBootstrapConfigRefOutput)
}

// API version of the referent.
func (o MachineSpecBootstrapConfigRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineSpecBootstrapConfigRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineSpecBootstrapConfigRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineSpecBootstrapConfigRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineSpecBootstrapConfigRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineSpecBootstrapConfigRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineSpecBootstrapConfigRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecBootstrapConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
type MachineSpecInfrastructureRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// MachineSpecInfrastructureRefInput is an input type that accepts MachineSpecInfrastructureRefArgs and MachineSpecInfrastructureRefOutput values.
// You can construct a concrete instance of `MachineSpecInfrastructureRefInput` via:
//
//	MachineSpecInfrastructureRefArgs{...}
type MachineSpecInfrastructureRefInput interface {
	pulumi.Input

	ToMachineSpecInfrastructureRefOutput() MachineSpecInfrastructureRefOutput
	ToMachineSpecInfrastructureRefOutputWithContext(context.Context) MachineSpecInfrastructureRefOutput
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
type MachineSpecInfrastructureRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (MachineSpecInfrastructureRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSpecInfrastructureRef)(nil)).Elem()
}

func (i MachineSpecInfrastructureRefArgs) ToMachineSpecInfrastructureRefOutput() MachineSpecInfrastructureRefOutput {
	return i.ToMachineSpecInfrastructureRefOutputWithContext(context.Background())
}

func (i MachineSpecInfrastructureRefArgs) ToMachineSpecInfrastructureRefOutputWithContext(ctx context.Context) MachineSpecInfrastructureRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSpecInfrastructureRefOutput)
}

func (i MachineSpecInfrastructureRefArgs) ToMachineSpecInfrastructureRefPtrOutput() MachineSpecInfrastructureRefPtrOutput {
	return i.ToMachineSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i MachineSpecInfrastructureRefArgs) ToMachineSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachineSpecInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSpecInfrastructureRefOutput).ToMachineSpecInfrastructureRefPtrOutputWithContext(ctx)
}

// MachineSpecInfrastructureRefPtrInput is an input type that accepts MachineSpecInfrastructureRefArgs, MachineSpecInfrastructureRefPtr and MachineSpecInfrastructureRefPtrOutput values.
// You can construct a concrete instance of `MachineSpecInfrastructureRefPtrInput` via:
//
//	        MachineSpecInfrastructureRefArgs{...}
//
//	or:
//
//	        nil
type MachineSpecInfrastructureRefPtrInput interface {
	pulumi.Input

	ToMachineSpecInfrastructureRefPtrOutput() MachineSpecInfrastructureRefPtrOutput
	ToMachineSpecInfrastructureRefPtrOutputWithContext(context.Context) MachineSpecInfrastructureRefPtrOutput
}

type machineSpecInfrastructureRefPtrType MachineSpecInfrastructureRefArgs

func MachineSpecInfrastructureRefPtr(v *MachineSpecInfrastructureRefArgs) MachineSpecInfrastructureRefPtrInput {
	return (*machineSpecInfrastructureRefPtrType)(v)
}

func (*machineSpecInfrastructureRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSpecInfrastructureRef)(nil)).Elem()
}

func (i *machineSpecInfrastructureRefPtrType) ToMachineSpecInfrastructureRefPtrOutput() MachineSpecInfrastructureRefPtrOutput {
	return i.ToMachineSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (i *machineSpecInfrastructureRefPtrType) ToMachineSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachineSpecInfrastructureRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSpecInfrastructureRefPtrOutput)
}

// InfrastructureRef is a required reference to a custom resource offered by an infrastructure provider.
type MachineSpecInfrastructureRefOutput struct{ *pulumi.OutputState }

func (MachineSpecInfrastructureRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineSpecInfrastructureRef)(nil)).Elem()
}

func (o MachineSpecInfrastructureRefOutput) ToMachineSpecInfrastructureRefOutput() MachineSpecInfrastructureRefOutput {
	return o
}

func (o MachineSpecInfrastructureRefOutput) ToMachineSpecInfrastructureRefOutputWithContext(ctx context.Context) MachineSpecInfrastructureRefOutput {
	return o
}

func (o MachineSpecInfrastructureRefOutput) ToMachineSpecInfrastructureRefPtrOutput() MachineSpecInfrastructureRefPtrOutput {
	return o.ToMachineSpecInfrastructureRefPtrOutputWithContext(context.Background())
}

func (o MachineSpecInfrastructureRefOutput) ToMachineSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachineSpecInfrastructureRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineSpecInfrastructureRef) *MachineSpecInfrastructureRef {
		return &v
	}).(MachineSpecInfrastructureRefPtrOutput)
}

// API version of the referent.
func (o MachineSpecInfrastructureRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecInfrastructureRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineSpecInfrastructureRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecInfrastructureRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineSpecInfrastructureRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecInfrastructureRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineSpecInfrastructureRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecInfrastructureRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineSpecInfrastructureRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecInfrastructureRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineSpecInfrastructureRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecInfrastructureRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineSpecInfrastructureRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineSpecInfrastructureRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type MachineSpecInfrastructureRefPtrOutput struct{ *pulumi.OutputState }

func (MachineSpecInfrastructureRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSpecInfrastructureRef)(nil)).Elem()
}

func (o MachineSpecInfrastructureRefPtrOutput) ToMachineSpecInfrastructureRefPtrOutput() MachineSpecInfrastructureRefPtrOutput {
	return o
}

func (o MachineSpecInfrastructureRefPtrOutput) ToMachineSpecInfrastructureRefPtrOutputWithContext(ctx context.Context) MachineSpecInfrastructureRefPtrOutput {
	return o
}

func (o MachineSpecInfrastructureRefPtrOutput) Elem() MachineSpecInfrastructureRefOutput {
	return o.ApplyT(func(v *MachineSpecInfrastructureRef) MachineSpecInfrastructureRef {
		if v != nil {
			return *v
		}
		var ret MachineSpecInfrastructureRef
		return ret
	}).(MachineSpecInfrastructureRefOutput)
}

// API version of the referent.
func (o MachineSpecInfrastructureRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineSpecInfrastructureRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineSpecInfrastructureRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineSpecInfrastructureRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineSpecInfrastructureRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineSpecInfrastructureRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineSpecInfrastructureRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSpecInfrastructureRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// MachineStatus defines the observed state of Machine.
type MachineStatus struct {
	// Addresses is a list of addresses assigned to the machine. This field is copied from the infrastructure provider reference.
	Addresses []MachineStatusAddresses `pulumi:"addresses"`
	// BootstrapReady is the state of the bootstrap provider.
	BootstrapReady *bool `pulumi:"bootstrapReady"`
	// CertificatesExpiryDate is the expiry date of the machine certificates. This value is only set for control plane machines.
	CertificatesExpiryDate *string `pulumi:"certificatesExpiryDate"`
	// Conditions defines current service state of the Machine.
	Conditions []MachineStatusConditions `pulumi:"conditions"`
	// FailureMessage will be set in the event that there is a terminal problem reconciling the Machine and will contain a more verbose string suitable for logging and human consumption.
	//  This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured.
	//  Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output.
	FailureMessage *string `pulumi:"failureMessage"`
	// FailureReason will be set in the event that there is a terminal problem reconciling the Machine and will contain a succinct value suitable for machine interpretation.
	//  This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured.
	//  Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output.
	FailureReason *string `pulumi:"failureReason"`
	// InfrastructureReady is the state of the infrastructure provider.
	InfrastructureReady *bool `pulumi:"infrastructureReady"`
	// LastUpdated identifies when the phase of the Machine last transitioned.
	LastUpdated *string `pulumi:"lastUpdated"`
	// NodeInfo is a set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info
	NodeInfo *MachineStatusNodeInfo `pulumi:"nodeInfo"`
	// NodeRef will point to the corresponding Node if it exists.
	NodeRef *MachineStatusNodeRef `pulumi:"nodeRef"`
	// ObservedGeneration is the latest generation observed by the controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Phase represents the current phase of machine actuation. E.g. Pending, Running, Terminating, Failed etc.
	Phase *string `pulumi:"phase"`
}

// MachineStatusInput is an input type that accepts MachineStatusArgs and MachineStatusOutput values.
// You can construct a concrete instance of `MachineStatusInput` via:
//
//	MachineStatusArgs{...}
type MachineStatusInput interface {
	pulumi.Input

	ToMachineStatusOutput() MachineStatusOutput
	ToMachineStatusOutputWithContext(context.Context) MachineStatusOutput
}

// MachineStatus defines the observed state of Machine.
type MachineStatusArgs struct {
	// Addresses is a list of addresses assigned to the machine. This field is copied from the infrastructure provider reference.
	Addresses MachineStatusAddressesArrayInput `pulumi:"addresses"`
	// BootstrapReady is the state of the bootstrap provider.
	BootstrapReady pulumi.BoolPtrInput `pulumi:"bootstrapReady"`
	// CertificatesExpiryDate is the expiry date of the machine certificates. This value is only set for control plane machines.
	CertificatesExpiryDate pulumi.StringPtrInput `pulumi:"certificatesExpiryDate"`
	// Conditions defines current service state of the Machine.
	Conditions MachineStatusConditionsArrayInput `pulumi:"conditions"`
	// FailureMessage will be set in the event that there is a terminal problem reconciling the Machine and will contain a more verbose string suitable for logging and human consumption.
	//  This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured.
	//  Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output.
	FailureMessage pulumi.StringPtrInput `pulumi:"failureMessage"`
	// FailureReason will be set in the event that there is a terminal problem reconciling the Machine and will contain a succinct value suitable for machine interpretation.
	//  This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured.
	//  Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output.
	FailureReason pulumi.StringPtrInput `pulumi:"failureReason"`
	// InfrastructureReady is the state of the infrastructure provider.
	InfrastructureReady pulumi.BoolPtrInput `pulumi:"infrastructureReady"`
	// LastUpdated identifies when the phase of the Machine last transitioned.
	LastUpdated pulumi.StringPtrInput `pulumi:"lastUpdated"`
	// NodeInfo is a set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info
	NodeInfo MachineStatusNodeInfoPtrInput `pulumi:"nodeInfo"`
	// NodeRef will point to the corresponding Node if it exists.
	NodeRef MachineStatusNodeRefPtrInput `pulumi:"nodeRef"`
	// ObservedGeneration is the latest generation observed by the controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Phase represents the current phase of machine actuation. E.g. Pending, Running, Terminating, Failed etc.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
}

func (MachineStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineStatus)(nil)).Elem()
}

func (i MachineStatusArgs) ToMachineStatusOutput() MachineStatusOutput {
	return i.ToMachineStatusOutputWithContext(context.Background())
}

func (i MachineStatusArgs) ToMachineStatusOutputWithContext(ctx context.Context) MachineStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineStatusOutput)
}

func (i MachineStatusArgs) ToMachineStatusPtrOutput() MachineStatusPtrOutput {
	return i.ToMachineStatusPtrOutputWithContext(context.Background())
}

func (i MachineStatusArgs) ToMachineStatusPtrOutputWithContext(ctx context.Context) MachineStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineStatusOutput).ToMachineStatusPtrOutputWithContext(ctx)
}

// MachineStatusPtrInput is an input type that accepts MachineStatusArgs, MachineStatusPtr and MachineStatusPtrOutput values.
// You can construct a concrete instance of `MachineStatusPtrInput` via:
//
//	        MachineStatusArgs{...}
//
//	or:
//
//	        nil
type MachineStatusPtrInput interface {
	pulumi.Input

	ToMachineStatusPtrOutput() MachineStatusPtrOutput
	ToMachineStatusPtrOutputWithContext(context.Context) MachineStatusPtrOutput
}

type machineStatusPtrType MachineStatusArgs

func MachineStatusPtr(v *MachineStatusArgs) MachineStatusPtrInput {
	return (*machineStatusPtrType)(v)
}

func (*machineStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineStatus)(nil)).Elem()
}

func (i *machineStatusPtrType) ToMachineStatusPtrOutput() MachineStatusPtrOutput {
	return i.ToMachineStatusPtrOutputWithContext(context.Background())
}

func (i *machineStatusPtrType) ToMachineStatusPtrOutputWithContext(ctx context.Context) MachineStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineStatusPtrOutput)
}

// MachineStatus defines the observed state of Machine.
type MachineStatusOutput struct{ *pulumi.OutputState }

func (MachineStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineStatus)(nil)).Elem()
}

func (o MachineStatusOutput) ToMachineStatusOutput() MachineStatusOutput {
	return o
}

func (o MachineStatusOutput) ToMachineStatusOutputWithContext(ctx context.Context) MachineStatusOutput {
	return o
}

func (o MachineStatusOutput) ToMachineStatusPtrOutput() MachineStatusPtrOutput {
	return o.ToMachineStatusPtrOutputWithContext(context.Background())
}

func (o MachineStatusOutput) ToMachineStatusPtrOutputWithContext(ctx context.Context) MachineStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineStatus) *MachineStatus {
		return &v
	}).(MachineStatusPtrOutput)
}

// Addresses is a list of addresses assigned to the machine. This field is copied from the infrastructure provider reference.
func (o MachineStatusOutput) Addresses() MachineStatusAddressesArrayOutput {
	return o.ApplyT(func(v MachineStatus) []MachineStatusAddresses { return v.Addresses }).(MachineStatusAddressesArrayOutput)
}

// BootstrapReady is the state of the bootstrap provider.
func (o MachineStatusOutput) BootstrapReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MachineStatus) *bool { return v.BootstrapReady }).(pulumi.BoolPtrOutput)
}

// CertificatesExpiryDate is the expiry date of the machine certificates. This value is only set for control plane machines.
func (o MachineStatusOutput) CertificatesExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatus) *string { return v.CertificatesExpiryDate }).(pulumi.StringPtrOutput)
}

// Conditions defines current service state of the Machine.
func (o MachineStatusOutput) Conditions() MachineStatusConditionsArrayOutput {
	return o.ApplyT(func(v MachineStatus) []MachineStatusConditions { return v.Conditions }).(MachineStatusConditionsArrayOutput)
}

// FailureMessage will be set in the event that there is a terminal problem reconciling the Machine and will contain a more verbose string suitable for logging and human consumption.
//
//	This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured.
//	Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output.
func (o MachineStatusOutput) FailureMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatus) *string { return v.FailureMessage }).(pulumi.StringPtrOutput)
}

// FailureReason will be set in the event that there is a terminal problem reconciling the Machine and will contain a succinct value suitable for machine interpretation.
//
//	This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured.
//	Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output.
func (o MachineStatusOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatus) *string { return v.FailureReason }).(pulumi.StringPtrOutput)
}

// InfrastructureReady is the state of the infrastructure provider.
func (o MachineStatusOutput) InfrastructureReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MachineStatus) *bool { return v.InfrastructureReady }).(pulumi.BoolPtrOutput)
}

// LastUpdated identifies when the phase of the Machine last transitioned.
func (o MachineStatusOutput) LastUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatus) *string { return v.LastUpdated }).(pulumi.StringPtrOutput)
}

// NodeInfo is a set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info
func (o MachineStatusOutput) NodeInfo() MachineStatusNodeInfoPtrOutput {
	return o.ApplyT(func(v MachineStatus) *MachineStatusNodeInfo { return v.NodeInfo }).(MachineStatusNodeInfoPtrOutput)
}

// NodeRef will point to the corresponding Node if it exists.
func (o MachineStatusOutput) NodeRef() MachineStatusNodeRefPtrOutput {
	return o.ApplyT(func(v MachineStatus) *MachineStatusNodeRef { return v.NodeRef }).(MachineStatusNodeRefPtrOutput)
}

// ObservedGeneration is the latest generation observed by the controller.
func (o MachineStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Phase represents the current phase of machine actuation. E.g. Pending, Running, Terminating, Failed etc.
func (o MachineStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

type MachineStatusPtrOutput struct{ *pulumi.OutputState }

func (MachineStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineStatus)(nil)).Elem()
}

func (o MachineStatusPtrOutput) ToMachineStatusPtrOutput() MachineStatusPtrOutput {
	return o
}

func (o MachineStatusPtrOutput) ToMachineStatusPtrOutputWithContext(ctx context.Context) MachineStatusPtrOutput {
	return o
}

func (o MachineStatusPtrOutput) Elem() MachineStatusOutput {
	return o.ApplyT(func(v *MachineStatus) MachineStatus {
		if v != nil {
			return *v
		}
		var ret MachineStatus
		return ret
	}).(MachineStatusOutput)
}

// Addresses is a list of addresses assigned to the machine. This field is copied from the infrastructure provider reference.
func (o MachineStatusPtrOutput) Addresses() MachineStatusAddressesArrayOutput {
	return o.ApplyT(func(v *MachineStatus) []MachineStatusAddresses {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(MachineStatusAddressesArrayOutput)
}

// BootstrapReady is the state of the bootstrap provider.
func (o MachineStatusPtrOutput) BootstrapReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MachineStatus) *bool {
		if v == nil {
			return nil
		}
		return v.BootstrapReady
	}).(pulumi.BoolPtrOutput)
}

// CertificatesExpiryDate is the expiry date of the machine certificates. This value is only set for control plane machines.
func (o MachineStatusPtrOutput) CertificatesExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatus) *string {
		if v == nil {
			return nil
		}
		return v.CertificatesExpiryDate
	}).(pulumi.StringPtrOutput)
}

// Conditions defines current service state of the Machine.
func (o MachineStatusPtrOutput) Conditions() MachineStatusConditionsArrayOutput {
	return o.ApplyT(func(v *MachineStatus) []MachineStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(MachineStatusConditionsArrayOutput)
}

// FailureMessage will be set in the event that there is a terminal problem reconciling the Machine and will contain a more verbose string suitable for logging and human consumption.
//
//	This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured.
//	Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output.
func (o MachineStatusPtrOutput) FailureMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatus) *string {
		if v == nil {
			return nil
		}
		return v.FailureMessage
	}).(pulumi.StringPtrOutput)
}

// FailureReason will be set in the event that there is a terminal problem reconciling the Machine and will contain a succinct value suitable for machine interpretation.
//
//	This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured.
//	Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output.
func (o MachineStatusPtrOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatus) *string {
		if v == nil {
			return nil
		}
		return v.FailureReason
	}).(pulumi.StringPtrOutput)
}

// InfrastructureReady is the state of the infrastructure provider.
func (o MachineStatusPtrOutput) InfrastructureReady() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MachineStatus) *bool {
		if v == nil {
			return nil
		}
		return v.InfrastructureReady
	}).(pulumi.BoolPtrOutput)
}

// LastUpdated identifies when the phase of the Machine last transitioned.
func (o MachineStatusPtrOutput) LastUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdated
	}).(pulumi.StringPtrOutput)
}

// NodeInfo is a set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info
func (o MachineStatusPtrOutput) NodeInfo() MachineStatusNodeInfoPtrOutput {
	return o.ApplyT(func(v *MachineStatus) *MachineStatusNodeInfo {
		if v == nil {
			return nil
		}
		return v.NodeInfo
	}).(MachineStatusNodeInfoPtrOutput)
}

// NodeRef will point to the corresponding Node if it exists.
func (o MachineStatusPtrOutput) NodeRef() MachineStatusNodeRefPtrOutput {
	return o.ApplyT(func(v *MachineStatus) *MachineStatusNodeRef {
		if v == nil {
			return nil
		}
		return v.NodeRef
	}).(MachineStatusNodeRefPtrOutput)
}

// ObservedGeneration is the latest generation observed by the controller.
func (o MachineStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MachineStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Phase represents the current phase of machine actuation. E.g. Pending, Running, Terminating, Failed etc.
func (o MachineStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

// MachineAddress contains information for the node's address.
type MachineStatusAddresses struct {
	// The machine address.
	Address string `pulumi:"address"`
	// Machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.
	Type string `pulumi:"type"`
}

// MachineStatusAddressesInput is an input type that accepts MachineStatusAddressesArgs and MachineStatusAddressesOutput values.
// You can construct a concrete instance of `MachineStatusAddressesInput` via:
//
//	MachineStatusAddressesArgs{...}
type MachineStatusAddressesInput interface {
	pulumi.Input

	ToMachineStatusAddressesOutput() MachineStatusAddressesOutput
	ToMachineStatusAddressesOutputWithContext(context.Context) MachineStatusAddressesOutput
}

// MachineAddress contains information for the node's address.
type MachineStatusAddressesArgs struct {
	// The machine address.
	Address pulumi.StringInput `pulumi:"address"`
	// Machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MachineStatusAddressesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineStatusAddresses)(nil)).Elem()
}

func (i MachineStatusAddressesArgs) ToMachineStatusAddressesOutput() MachineStatusAddressesOutput {
	return i.ToMachineStatusAddressesOutputWithContext(context.Background())
}

func (i MachineStatusAddressesArgs) ToMachineStatusAddressesOutputWithContext(ctx context.Context) MachineStatusAddressesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineStatusAddressesOutput)
}

// MachineStatusAddressesArrayInput is an input type that accepts MachineStatusAddressesArray and MachineStatusAddressesArrayOutput values.
// You can construct a concrete instance of `MachineStatusAddressesArrayInput` via:
//
//	MachineStatusAddressesArray{ MachineStatusAddressesArgs{...} }
type MachineStatusAddressesArrayInput interface {
	pulumi.Input

	ToMachineStatusAddressesArrayOutput() MachineStatusAddressesArrayOutput
	ToMachineStatusAddressesArrayOutputWithContext(context.Context) MachineStatusAddressesArrayOutput
}

type MachineStatusAddressesArray []MachineStatusAddressesInput

func (MachineStatusAddressesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineStatusAddresses)(nil)).Elem()
}

func (i MachineStatusAddressesArray) ToMachineStatusAddressesArrayOutput() MachineStatusAddressesArrayOutput {
	return i.ToMachineStatusAddressesArrayOutputWithContext(context.Background())
}

func (i MachineStatusAddressesArray) ToMachineStatusAddressesArrayOutputWithContext(ctx context.Context) MachineStatusAddressesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineStatusAddressesArrayOutput)
}

// MachineAddress contains information for the node's address.
type MachineStatusAddressesOutput struct{ *pulumi.OutputState }

func (MachineStatusAddressesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineStatusAddresses)(nil)).Elem()
}

func (o MachineStatusAddressesOutput) ToMachineStatusAddressesOutput() MachineStatusAddressesOutput {
	return o
}

func (o MachineStatusAddressesOutput) ToMachineStatusAddressesOutputWithContext(ctx context.Context) MachineStatusAddressesOutput {
	return o
}

// The machine address.
func (o MachineStatusAddressesOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusAddresses) string { return v.Address }).(pulumi.StringOutput)
}

// Machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.
func (o MachineStatusAddressesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusAddresses) string { return v.Type }).(pulumi.StringOutput)
}

type MachineStatusAddressesArrayOutput struct{ *pulumi.OutputState }

func (MachineStatusAddressesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineStatusAddresses)(nil)).Elem()
}

func (o MachineStatusAddressesArrayOutput) ToMachineStatusAddressesArrayOutput() MachineStatusAddressesArrayOutput {
	return o
}

func (o MachineStatusAddressesArrayOutput) ToMachineStatusAddressesArrayOutputWithContext(ctx context.Context) MachineStatusAddressesArrayOutput {
	return o
}

func (o MachineStatusAddressesArrayOutput) Index(i pulumi.IntInput) MachineStatusAddressesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineStatusAddresses {
		return vs[0].([]MachineStatusAddresses)[vs[1].(int)]
	}).(MachineStatusAddressesOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type MachineStatusConditions struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason *string `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity *string `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type string `pulumi:"type"`
}

// MachineStatusConditionsInput is an input type that accepts MachineStatusConditionsArgs and MachineStatusConditionsOutput values.
// You can construct a concrete instance of `MachineStatusConditionsInput` via:
//
//	MachineStatusConditionsArgs{...}
type MachineStatusConditionsInput interface {
	pulumi.Input

	ToMachineStatusConditionsOutput() MachineStatusConditionsOutput
	ToMachineStatusConditionsOutputWithContext(context.Context) MachineStatusConditionsOutput
}

// Condition defines an observation of a Cluster API resource operational state.
type MachineStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MachineStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineStatusConditions)(nil)).Elem()
}

func (i MachineStatusConditionsArgs) ToMachineStatusConditionsOutput() MachineStatusConditionsOutput {
	return i.ToMachineStatusConditionsOutputWithContext(context.Background())
}

func (i MachineStatusConditionsArgs) ToMachineStatusConditionsOutputWithContext(ctx context.Context) MachineStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineStatusConditionsOutput)
}

// MachineStatusConditionsArrayInput is an input type that accepts MachineStatusConditionsArray and MachineStatusConditionsArrayOutput values.
// You can construct a concrete instance of `MachineStatusConditionsArrayInput` via:
//
//	MachineStatusConditionsArray{ MachineStatusConditionsArgs{...} }
type MachineStatusConditionsArrayInput interface {
	pulumi.Input

	ToMachineStatusConditionsArrayOutput() MachineStatusConditionsArrayOutput
	ToMachineStatusConditionsArrayOutputWithContext(context.Context) MachineStatusConditionsArrayOutput
}

type MachineStatusConditionsArray []MachineStatusConditionsInput

func (MachineStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineStatusConditions)(nil)).Elem()
}

func (i MachineStatusConditionsArray) ToMachineStatusConditionsArrayOutput() MachineStatusConditionsArrayOutput {
	return i.ToMachineStatusConditionsArrayOutputWithContext(context.Background())
}

func (i MachineStatusConditionsArray) ToMachineStatusConditionsArrayOutputWithContext(ctx context.Context) MachineStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineStatusConditionsArrayOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type MachineStatusConditionsOutput struct{ *pulumi.OutputState }

func (MachineStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineStatusConditions)(nil)).Elem()
}

func (o MachineStatusConditionsOutput) ToMachineStatusConditionsOutput() MachineStatusConditionsOutput {
	return o
}

func (o MachineStatusConditionsOutput) ToMachineStatusConditionsOutputWithContext(ctx context.Context) MachineStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
func (o MachineStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A human readable message indicating details about the transition. This field may be empty.
func (o MachineStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
func (o MachineStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
func (o MachineStatusConditionsOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatusConditions) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o MachineStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
func (o MachineStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type MachineStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (MachineStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineStatusConditions)(nil)).Elem()
}

func (o MachineStatusConditionsArrayOutput) ToMachineStatusConditionsArrayOutput() MachineStatusConditionsArrayOutput {
	return o
}

func (o MachineStatusConditionsArrayOutput) ToMachineStatusConditionsArrayOutputWithContext(ctx context.Context) MachineStatusConditionsArrayOutput {
	return o
}

func (o MachineStatusConditionsArrayOutput) Index(i pulumi.IntInput) MachineStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineStatusConditions {
		return vs[0].([]MachineStatusConditions)[vs[1].(int)]
	}).(MachineStatusConditionsOutput)
}

// NodeInfo is a set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info
type MachineStatusNodeInfo struct {
	// The Architecture reported by the node
	Architecture string `pulumi:"architecture"`
	// Boot ID reported by the node.
	BootID string `pulumi:"bootID"`
	// ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2).
	ContainerRuntimeVersion string `pulumi:"containerRuntimeVersion"`
	// Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).
	KernelVersion string `pulumi:"kernelVersion"`
	// KubeProxy Version reported by the node.
	KubeProxyVersion string `pulumi:"kubeProxyVersion"`
	// Kubelet Version reported by the node.
	KubeletVersion string `pulumi:"kubeletVersion"`
	// MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html
	MachineID string `pulumi:"machineID"`
	// The Operating System reported by the node
	OperatingSystem string `pulumi:"operatingSystem"`
	// OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).
	OsImage string `pulumi:"osImage"`
	// SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid
	SystemUUID string `pulumi:"systemUUID"`
}

// MachineStatusNodeInfoInput is an input type that accepts MachineStatusNodeInfoArgs and MachineStatusNodeInfoOutput values.
// You can construct a concrete instance of `MachineStatusNodeInfoInput` via:
//
//	MachineStatusNodeInfoArgs{...}
type MachineStatusNodeInfoInput interface {
	pulumi.Input

	ToMachineStatusNodeInfoOutput() MachineStatusNodeInfoOutput
	ToMachineStatusNodeInfoOutputWithContext(context.Context) MachineStatusNodeInfoOutput
}

// NodeInfo is a set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info
type MachineStatusNodeInfoArgs struct {
	// The Architecture reported by the node
	Architecture pulumi.StringInput `pulumi:"architecture"`
	// Boot ID reported by the node.
	BootID pulumi.StringInput `pulumi:"bootID"`
	// ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2).
	ContainerRuntimeVersion pulumi.StringInput `pulumi:"containerRuntimeVersion"`
	// Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).
	KernelVersion pulumi.StringInput `pulumi:"kernelVersion"`
	// KubeProxy Version reported by the node.
	KubeProxyVersion pulumi.StringInput `pulumi:"kubeProxyVersion"`
	// Kubelet Version reported by the node.
	KubeletVersion pulumi.StringInput `pulumi:"kubeletVersion"`
	// MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html
	MachineID pulumi.StringInput `pulumi:"machineID"`
	// The Operating System reported by the node
	OperatingSystem pulumi.StringInput `pulumi:"operatingSystem"`
	// OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).
	OsImage pulumi.StringInput `pulumi:"osImage"`
	// SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid
	SystemUUID pulumi.StringInput `pulumi:"systemUUID"`
}

func (MachineStatusNodeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineStatusNodeInfo)(nil)).Elem()
}

func (i MachineStatusNodeInfoArgs) ToMachineStatusNodeInfoOutput() MachineStatusNodeInfoOutput {
	return i.ToMachineStatusNodeInfoOutputWithContext(context.Background())
}

func (i MachineStatusNodeInfoArgs) ToMachineStatusNodeInfoOutputWithContext(ctx context.Context) MachineStatusNodeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineStatusNodeInfoOutput)
}

func (i MachineStatusNodeInfoArgs) ToMachineStatusNodeInfoPtrOutput() MachineStatusNodeInfoPtrOutput {
	return i.ToMachineStatusNodeInfoPtrOutputWithContext(context.Background())
}

func (i MachineStatusNodeInfoArgs) ToMachineStatusNodeInfoPtrOutputWithContext(ctx context.Context) MachineStatusNodeInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineStatusNodeInfoOutput).ToMachineStatusNodeInfoPtrOutputWithContext(ctx)
}

// MachineStatusNodeInfoPtrInput is an input type that accepts MachineStatusNodeInfoArgs, MachineStatusNodeInfoPtr and MachineStatusNodeInfoPtrOutput values.
// You can construct a concrete instance of `MachineStatusNodeInfoPtrInput` via:
//
//	        MachineStatusNodeInfoArgs{...}
//
//	or:
//
//	        nil
type MachineStatusNodeInfoPtrInput interface {
	pulumi.Input

	ToMachineStatusNodeInfoPtrOutput() MachineStatusNodeInfoPtrOutput
	ToMachineStatusNodeInfoPtrOutputWithContext(context.Context) MachineStatusNodeInfoPtrOutput
}

type machineStatusNodeInfoPtrType MachineStatusNodeInfoArgs

func MachineStatusNodeInfoPtr(v *MachineStatusNodeInfoArgs) MachineStatusNodeInfoPtrInput {
	return (*machineStatusNodeInfoPtrType)(v)
}

func (*machineStatusNodeInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineStatusNodeInfo)(nil)).Elem()
}

func (i *machineStatusNodeInfoPtrType) ToMachineStatusNodeInfoPtrOutput() MachineStatusNodeInfoPtrOutput {
	return i.ToMachineStatusNodeInfoPtrOutputWithContext(context.Background())
}

func (i *machineStatusNodeInfoPtrType) ToMachineStatusNodeInfoPtrOutputWithContext(ctx context.Context) MachineStatusNodeInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineStatusNodeInfoPtrOutput)
}

// NodeInfo is a set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info
type MachineStatusNodeInfoOutput struct{ *pulumi.OutputState }

func (MachineStatusNodeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineStatusNodeInfo)(nil)).Elem()
}

func (o MachineStatusNodeInfoOutput) ToMachineStatusNodeInfoOutput() MachineStatusNodeInfoOutput {
	return o
}

func (o MachineStatusNodeInfoOutput) ToMachineStatusNodeInfoOutputWithContext(ctx context.Context) MachineStatusNodeInfoOutput {
	return o
}

func (o MachineStatusNodeInfoOutput) ToMachineStatusNodeInfoPtrOutput() MachineStatusNodeInfoPtrOutput {
	return o.ToMachineStatusNodeInfoPtrOutputWithContext(context.Background())
}

func (o MachineStatusNodeInfoOutput) ToMachineStatusNodeInfoPtrOutputWithContext(ctx context.Context) MachineStatusNodeInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineStatusNodeInfo) *MachineStatusNodeInfo {
		return &v
	}).(MachineStatusNodeInfoPtrOutput)
}

// The Architecture reported by the node
func (o MachineStatusNodeInfoOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusNodeInfo) string { return v.Architecture }).(pulumi.StringOutput)
}

// Boot ID reported by the node.
func (o MachineStatusNodeInfoOutput) BootID() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusNodeInfo) string { return v.BootID }).(pulumi.StringOutput)
}

// ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2).
func (o MachineStatusNodeInfoOutput) ContainerRuntimeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusNodeInfo) string { return v.ContainerRuntimeVersion }).(pulumi.StringOutput)
}

// Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).
func (o MachineStatusNodeInfoOutput) KernelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusNodeInfo) string { return v.KernelVersion }).(pulumi.StringOutput)
}

// KubeProxy Version reported by the node.
func (o MachineStatusNodeInfoOutput) KubeProxyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusNodeInfo) string { return v.KubeProxyVersion }).(pulumi.StringOutput)
}

// Kubelet Version reported by the node.
func (o MachineStatusNodeInfoOutput) KubeletVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusNodeInfo) string { return v.KubeletVersion }).(pulumi.StringOutput)
}

// MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html
func (o MachineStatusNodeInfoOutput) MachineID() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusNodeInfo) string { return v.MachineID }).(pulumi.StringOutput)
}

// The Operating System reported by the node
func (o MachineStatusNodeInfoOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusNodeInfo) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

// OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).
func (o MachineStatusNodeInfoOutput) OsImage() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusNodeInfo) string { return v.OsImage }).(pulumi.StringOutput)
}

// SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid
func (o MachineStatusNodeInfoOutput) SystemUUID() pulumi.StringOutput {
	return o.ApplyT(func(v MachineStatusNodeInfo) string { return v.SystemUUID }).(pulumi.StringOutput)
}

type MachineStatusNodeInfoPtrOutput struct{ *pulumi.OutputState }

func (MachineStatusNodeInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineStatusNodeInfo)(nil)).Elem()
}

func (o MachineStatusNodeInfoPtrOutput) ToMachineStatusNodeInfoPtrOutput() MachineStatusNodeInfoPtrOutput {
	return o
}

func (o MachineStatusNodeInfoPtrOutput) ToMachineStatusNodeInfoPtrOutputWithContext(ctx context.Context) MachineStatusNodeInfoPtrOutput {
	return o
}

func (o MachineStatusNodeInfoPtrOutput) Elem() MachineStatusNodeInfoOutput {
	return o.ApplyT(func(v *MachineStatusNodeInfo) MachineStatusNodeInfo {
		if v != nil {
			return *v
		}
		var ret MachineStatusNodeInfo
		return ret
	}).(MachineStatusNodeInfoOutput)
}

// The Architecture reported by the node
func (o MachineStatusNodeInfoPtrOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Architecture
	}).(pulumi.StringPtrOutput)
}

// Boot ID reported by the node.
func (o MachineStatusNodeInfoPtrOutput) BootID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeInfo) *string {
		if v == nil {
			return nil
		}
		return &v.BootID
	}).(pulumi.StringPtrOutput)
}

// ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2).
func (o MachineStatusNodeInfoPtrOutput) ContainerRuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerRuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).
func (o MachineStatusNodeInfoPtrOutput) KernelVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeInfo) *string {
		if v == nil {
			return nil
		}
		return &v.KernelVersion
	}).(pulumi.StringPtrOutput)
}

// KubeProxy Version reported by the node.
func (o MachineStatusNodeInfoPtrOutput) KubeProxyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeInfo) *string {
		if v == nil {
			return nil
		}
		return &v.KubeProxyVersion
	}).(pulumi.StringPtrOutput)
}

// Kubelet Version reported by the node.
func (o MachineStatusNodeInfoPtrOutput) KubeletVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeInfo) *string {
		if v == nil {
			return nil
		}
		return &v.KubeletVersion
	}).(pulumi.StringPtrOutput)
}

// MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html
func (o MachineStatusNodeInfoPtrOutput) MachineID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeInfo) *string {
		if v == nil {
			return nil
		}
		return &v.MachineID
	}).(pulumi.StringPtrOutput)
}

// The Operating System reported by the node
func (o MachineStatusNodeInfoPtrOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeInfo) *string {
		if v == nil {
			return nil
		}
		return &v.OperatingSystem
	}).(pulumi.StringPtrOutput)
}

// OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).
func (o MachineStatusNodeInfoPtrOutput) OsImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeInfo) *string {
		if v == nil {
			return nil
		}
		return &v.OsImage
	}).(pulumi.StringPtrOutput)
}

// SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid
func (o MachineStatusNodeInfoPtrOutput) SystemUUID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeInfo) *string {
		if v == nil {
			return nil
		}
		return &v.SystemUUID
	}).(pulumi.StringPtrOutput)
}

// NodeRef will point to the corresponding Node if it exists.
type MachineStatusNodeRef struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// MachineStatusNodeRefInput is an input type that accepts MachineStatusNodeRefArgs and MachineStatusNodeRefOutput values.
// You can construct a concrete instance of `MachineStatusNodeRefInput` via:
//
//	MachineStatusNodeRefArgs{...}
type MachineStatusNodeRefInput interface {
	pulumi.Input

	ToMachineStatusNodeRefOutput() MachineStatusNodeRefOutput
	ToMachineStatusNodeRefOutputWithContext(context.Context) MachineStatusNodeRefOutput
}

// NodeRef will point to the corresponding Node if it exists.
type MachineStatusNodeRefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (MachineStatusNodeRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineStatusNodeRef)(nil)).Elem()
}

func (i MachineStatusNodeRefArgs) ToMachineStatusNodeRefOutput() MachineStatusNodeRefOutput {
	return i.ToMachineStatusNodeRefOutputWithContext(context.Background())
}

func (i MachineStatusNodeRefArgs) ToMachineStatusNodeRefOutputWithContext(ctx context.Context) MachineStatusNodeRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineStatusNodeRefOutput)
}

func (i MachineStatusNodeRefArgs) ToMachineStatusNodeRefPtrOutput() MachineStatusNodeRefPtrOutput {
	return i.ToMachineStatusNodeRefPtrOutputWithContext(context.Background())
}

func (i MachineStatusNodeRefArgs) ToMachineStatusNodeRefPtrOutputWithContext(ctx context.Context) MachineStatusNodeRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineStatusNodeRefOutput).ToMachineStatusNodeRefPtrOutputWithContext(ctx)
}

// MachineStatusNodeRefPtrInput is an input type that accepts MachineStatusNodeRefArgs, MachineStatusNodeRefPtr and MachineStatusNodeRefPtrOutput values.
// You can construct a concrete instance of `MachineStatusNodeRefPtrInput` via:
//
//	        MachineStatusNodeRefArgs{...}
//
//	or:
//
//	        nil
type MachineStatusNodeRefPtrInput interface {
	pulumi.Input

	ToMachineStatusNodeRefPtrOutput() MachineStatusNodeRefPtrOutput
	ToMachineStatusNodeRefPtrOutputWithContext(context.Context) MachineStatusNodeRefPtrOutput
}

type machineStatusNodeRefPtrType MachineStatusNodeRefArgs

func MachineStatusNodeRefPtr(v *MachineStatusNodeRefArgs) MachineStatusNodeRefPtrInput {
	return (*machineStatusNodeRefPtrType)(v)
}

func (*machineStatusNodeRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineStatusNodeRef)(nil)).Elem()
}

func (i *machineStatusNodeRefPtrType) ToMachineStatusNodeRefPtrOutput() MachineStatusNodeRefPtrOutput {
	return i.ToMachineStatusNodeRefPtrOutputWithContext(context.Background())
}

func (i *machineStatusNodeRefPtrType) ToMachineStatusNodeRefPtrOutputWithContext(ctx context.Context) MachineStatusNodeRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineStatusNodeRefPtrOutput)
}

// NodeRef will point to the corresponding Node if it exists.
type MachineStatusNodeRefOutput struct{ *pulumi.OutputState }

func (MachineStatusNodeRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineStatusNodeRef)(nil)).Elem()
}

func (o MachineStatusNodeRefOutput) ToMachineStatusNodeRefOutput() MachineStatusNodeRefOutput {
	return o
}

func (o MachineStatusNodeRefOutput) ToMachineStatusNodeRefOutputWithContext(ctx context.Context) MachineStatusNodeRefOutput {
	return o
}

func (o MachineStatusNodeRefOutput) ToMachineStatusNodeRefPtrOutput() MachineStatusNodeRefPtrOutput {
	return o.ToMachineStatusNodeRefPtrOutputWithContext(context.Background())
}

func (o MachineStatusNodeRefOutput) ToMachineStatusNodeRefPtrOutputWithContext(ctx context.Context) MachineStatusNodeRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineStatusNodeRef) *MachineStatusNodeRef {
		return &v
	}).(MachineStatusNodeRefPtrOutput)
}

// API version of the referent.
func (o MachineStatusNodeRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatusNodeRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineStatusNodeRefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatusNodeRef) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineStatusNodeRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatusNodeRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineStatusNodeRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatusNodeRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineStatusNodeRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatusNodeRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineStatusNodeRefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatusNodeRef) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineStatusNodeRefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MachineStatusNodeRef) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type MachineStatusNodeRefPtrOutput struct{ *pulumi.OutputState }

func (MachineStatusNodeRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineStatusNodeRef)(nil)).Elem()
}

func (o MachineStatusNodeRefPtrOutput) ToMachineStatusNodeRefPtrOutput() MachineStatusNodeRefPtrOutput {
	return o
}

func (o MachineStatusNodeRefPtrOutput) ToMachineStatusNodeRefPtrOutputWithContext(ctx context.Context) MachineStatusNodeRefPtrOutput {
	return o
}

func (o MachineStatusNodeRefPtrOutput) Elem() MachineStatusNodeRefOutput {
	return o.ApplyT(func(v *MachineStatusNodeRef) MachineStatusNodeRef {
		if v != nil {
			return *v
		}
		var ret MachineStatusNodeRef
		return ret
	}).(MachineStatusNodeRefOutput)
}

// API version of the referent.
func (o MachineStatusNodeRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o MachineStatusNodeRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeRef) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MachineStatusNodeRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o MachineStatusNodeRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o MachineStatusNodeRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o MachineStatusNodeRefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeRef) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o MachineStatusNodeRefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineStatusNodeRef) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecInput)(nil)).Elem(), ClusterClassSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPtrInput)(nil)).Elem(), ClusterClassSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneInput)(nil)).Elem(), ClusterClassSpecControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlanePtrInput)(nil)).Elem(), ClusterClassSpecControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneMachineHealthCheckInput)(nil)).Elem(), ClusterClassSpecControlPlaneMachineHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneMachineHealthCheckPtrInput)(nil)).Elem(), ClusterClassSpecControlPlaneMachineHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateInput)(nil)).Elem(), ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrInput)(nil)).Elem(), ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsInput)(nil)).Elem(), ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayInput)(nil)).Elem(), ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneMachineInfrastructureInput)(nil)).Elem(), ClusterClassSpecControlPlaneMachineInfrastructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneMachineInfrastructurePtrInput)(nil)).Elem(), ClusterClassSpecControlPlaneMachineInfrastructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneMachineInfrastructureRefInput)(nil)).Elem(), ClusterClassSpecControlPlaneMachineInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneMachineInfrastructureRefPtrInput)(nil)).Elem(), ClusterClassSpecControlPlaneMachineInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneMetadataInput)(nil)).Elem(), ClusterClassSpecControlPlaneMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneMetadataPtrInput)(nil)).Elem(), ClusterClassSpecControlPlaneMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneNamingStrategyInput)(nil)).Elem(), ClusterClassSpecControlPlaneNamingStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneNamingStrategyPtrInput)(nil)).Elem(), ClusterClassSpecControlPlaneNamingStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneRefInput)(nil)).Elem(), ClusterClassSpecControlPlaneRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecControlPlaneRefPtrInput)(nil)).Elem(), ClusterClassSpecControlPlaneRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecInfrastructureInput)(nil)).Elem(), ClusterClassSpecInfrastructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecInfrastructurePtrInput)(nil)).Elem(), ClusterClassSpecInfrastructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecInfrastructureRefInput)(nil)).Elem(), ClusterClassSpecInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecInfrastructureRefPtrInput)(nil)).Elem(), ClusterClassSpecInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesInput)(nil)).Elem(), ClusterClassSpecPatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesArrayInput)(nil)).Elem(), ClusterClassSpecPatchesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsInput)(nil)).Elem(), ClusterClassSpecPatchesDefinitionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsArrayInput)(nil)).Elem(), ClusterClassSpecPatchesDefinitionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsJsonPatchesInput)(nil)).Elem(), ClusterClassSpecPatchesDefinitionsJsonPatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsJsonPatchesArrayInput)(nil)).Elem(), ClusterClassSpecPatchesDefinitionsJsonPatchesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromInput)(nil)).Elem(), ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrInput)(nil)).Elem(), ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsSelectorInput)(nil)).Elem(), ClusterClassSpecPatchesDefinitionsSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesInput)(nil)).Elem(), ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassInput)(nil)).Elem(), ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrInput)(nil)).Elem(), ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesExternalInput)(nil)).Elem(), ClusterClassSpecPatchesExternalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecPatchesExternalPtrInput)(nil)).Elem(), ClusterClassSpecPatchesExternalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecVariablesInput)(nil)).Elem(), ClusterClassSpecVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecVariablesArrayInput)(nil)).Elem(), ClusterClassSpecVariablesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecVariablesSchemaInput)(nil)).Elem(), ClusterClassSpecVariablesSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecVariablesSchemaOpenAPIV3SchemaInput)(nil)).Elem(), ClusterClassSpecVariablesSchemaOpenAPIV3SchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersInput)(nil)).Elem(), ClusterClassSpecWorkersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersPtrInput)(nil)).Elem(), ClusterClassSpecWorkersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsArrayInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsNamingStrategyInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsNamingStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsStrategyInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsStrategyPtrInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrInput)(nil)).Elem(), ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassStatusInput)(nil)).Elem(), ClusterClassStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassStatusPtrInput)(nil)).Elem(), ClusterClassStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassStatusConditionsInput)(nil)).Elem(), ClusterClassStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassStatusConditionsArrayInput)(nil)).Elem(), ClusterClassStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassStatusVariablesInput)(nil)).Elem(), ClusterClassStatusVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassStatusVariablesArrayInput)(nil)).Elem(), ClusterClassStatusVariablesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassStatusVariablesDefinitionsInput)(nil)).Elem(), ClusterClassStatusVariablesDefinitionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassStatusVariablesDefinitionsArrayInput)(nil)).Elem(), ClusterClassStatusVariablesDefinitionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassStatusVariablesDefinitionsSchemaInput)(nil)).Elem(), ClusterClassStatusVariablesDefinitionsSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaInput)(nil)).Elem(), ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecInput)(nil)).Elem(), ClusterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecPtrInput)(nil)).Elem(), ClusterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecClusterNetworkInput)(nil)).Elem(), ClusterSpecClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecClusterNetworkPtrInput)(nil)).Elem(), ClusterSpecClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecClusterNetworkPodsInput)(nil)).Elem(), ClusterSpecClusterNetworkPodsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecClusterNetworkPodsPtrInput)(nil)).Elem(), ClusterSpecClusterNetworkPodsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecClusterNetworkServicesInput)(nil)).Elem(), ClusterSpecClusterNetworkServicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecClusterNetworkServicesPtrInput)(nil)).Elem(), ClusterSpecClusterNetworkServicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecControlPlaneEndpointInput)(nil)).Elem(), ClusterSpecControlPlaneEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecControlPlaneEndpointPtrInput)(nil)).Elem(), ClusterSpecControlPlaneEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecControlPlaneRefInput)(nil)).Elem(), ClusterSpecControlPlaneRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecControlPlaneRefPtrInput)(nil)).Elem(), ClusterSpecControlPlaneRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecInfrastructureRefInput)(nil)).Elem(), ClusterSpecInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecInfrastructureRefPtrInput)(nil)).Elem(), ClusterSpecInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyInput)(nil)).Elem(), ClusterSpecTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyPtrInput)(nil)).Elem(), ClusterSpecTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyControlPlaneInput)(nil)).Elem(), ClusterSpecTopologyControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyControlPlanePtrInput)(nil)).Elem(), ClusterSpecTopologyControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyControlPlaneMachineHealthCheckInput)(nil)).Elem(), ClusterSpecTopologyControlPlaneMachineHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyControlPlaneMachineHealthCheckPtrInput)(nil)).Elem(), ClusterSpecTopologyControlPlaneMachineHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateInput)(nil)).Elem(), ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrInput)(nil)).Elem(), ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsInput)(nil)).Elem(), ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayInput)(nil)).Elem(), ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyControlPlaneMetadataInput)(nil)).Elem(), ClusterSpecTopologyControlPlaneMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyControlPlaneMetadataPtrInput)(nil)).Elem(), ClusterSpecTopologyControlPlaneMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyVariablesInput)(nil)).Elem(), ClusterSpecTopologyVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyVariablesArrayInput)(nil)).Elem(), ClusterSpecTopologyVariablesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersInput)(nil)).Elem(), ClusterSpecTopologyWorkersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersPtrInput)(nil)).Elem(), ClusterSpecTopologyWorkersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsArrayInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMetadataInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsStrategyInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsVariablesInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayInput)(nil)).Elem(), ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStatusInput)(nil)).Elem(), ClusterStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStatusPtrInput)(nil)).Elem(), ClusterStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStatusConditionsInput)(nil)).Elem(), ClusterStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStatusConditionsArrayInput)(nil)).Elem(), ClusterStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStatusFailureDomainsInput)(nil)).Elem(), ClusterStatusFailureDomainsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStatusFailureDomainsMapInput)(nil)).Elem(), ClusterStatusFailureDomainsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecInput)(nil)).Elem(), MachineDeploymentSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecPtrInput)(nil)).Elem(), MachineDeploymentSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecSelectorInput)(nil)).Elem(), MachineDeploymentSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecSelectorPtrInput)(nil)).Elem(), MachineDeploymentSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecSelectorMatchExpressionsInput)(nil)).Elem(), MachineDeploymentSpecSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecSelectorMatchExpressionsArrayInput)(nil)).Elem(), MachineDeploymentSpecSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecStrategyInput)(nil)).Elem(), MachineDeploymentSpecStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecStrategyPtrInput)(nil)).Elem(), MachineDeploymentSpecStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecStrategyRollingUpdateInput)(nil)).Elem(), MachineDeploymentSpecStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecStrategyRollingUpdatePtrInput)(nil)).Elem(), MachineDeploymentSpecStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecTemplateInput)(nil)).Elem(), MachineDeploymentSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecTemplatePtrInput)(nil)).Elem(), MachineDeploymentSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecTemplateMetadataInput)(nil)).Elem(), MachineDeploymentSpecTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecTemplateMetadataPtrInput)(nil)).Elem(), MachineDeploymentSpecTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecTemplateSpecInput)(nil)).Elem(), MachineDeploymentSpecTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecTemplateSpecPtrInput)(nil)).Elem(), MachineDeploymentSpecTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecTemplateSpecBootstrapInput)(nil)).Elem(), MachineDeploymentSpecTemplateSpecBootstrapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecTemplateSpecBootstrapPtrInput)(nil)).Elem(), MachineDeploymentSpecTemplateSpecBootstrapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecTemplateSpecBootstrapConfigRefInput)(nil)).Elem(), MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrInput)(nil)).Elem(), MachineDeploymentSpecTemplateSpecBootstrapConfigRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecTemplateSpecInfrastructureRefInput)(nil)).Elem(), MachineDeploymentSpecTemplateSpecInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentSpecTemplateSpecInfrastructureRefPtrInput)(nil)).Elem(), MachineDeploymentSpecTemplateSpecInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentStatusInput)(nil)).Elem(), MachineDeploymentStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentStatusPtrInput)(nil)).Elem(), MachineDeploymentStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentStatusConditionsInput)(nil)).Elem(), MachineDeploymentStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineDeploymentStatusConditionsArrayInput)(nil)).Elem(), MachineDeploymentStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckSpecInput)(nil)).Elem(), MachineHealthCheckSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckSpecPtrInput)(nil)).Elem(), MachineHealthCheckSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckSpecRemediationTemplateInput)(nil)).Elem(), MachineHealthCheckSpecRemediationTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckSpecRemediationTemplatePtrInput)(nil)).Elem(), MachineHealthCheckSpecRemediationTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckSpecSelectorInput)(nil)).Elem(), MachineHealthCheckSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckSpecSelectorPtrInput)(nil)).Elem(), MachineHealthCheckSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckSpecSelectorMatchExpressionsInput)(nil)).Elem(), MachineHealthCheckSpecSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckSpecSelectorMatchExpressionsArrayInput)(nil)).Elem(), MachineHealthCheckSpecSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckSpecUnhealthyConditionsInput)(nil)).Elem(), MachineHealthCheckSpecUnhealthyConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckSpecUnhealthyConditionsArrayInput)(nil)).Elem(), MachineHealthCheckSpecUnhealthyConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckStatusInput)(nil)).Elem(), MachineHealthCheckStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckStatusPtrInput)(nil)).Elem(), MachineHealthCheckStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckStatusConditionsInput)(nil)).Elem(), MachineHealthCheckStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineHealthCheckStatusConditionsArrayInput)(nil)).Elem(), MachineHealthCheckStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecInput)(nil)).Elem(), MachinePoolSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecPtrInput)(nil)).Elem(), MachinePoolSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecTemplateInput)(nil)).Elem(), MachinePoolSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecTemplatePtrInput)(nil)).Elem(), MachinePoolSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecTemplateMetadataInput)(nil)).Elem(), MachinePoolSpecTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecTemplateMetadataPtrInput)(nil)).Elem(), MachinePoolSpecTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecTemplateSpecInput)(nil)).Elem(), MachinePoolSpecTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecTemplateSpecPtrInput)(nil)).Elem(), MachinePoolSpecTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecTemplateSpecBootstrapInput)(nil)).Elem(), MachinePoolSpecTemplateSpecBootstrapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecTemplateSpecBootstrapPtrInput)(nil)).Elem(), MachinePoolSpecTemplateSpecBootstrapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecTemplateSpecBootstrapConfigRefInput)(nil)).Elem(), MachinePoolSpecTemplateSpecBootstrapConfigRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecTemplateSpecBootstrapConfigRefPtrInput)(nil)).Elem(), MachinePoolSpecTemplateSpecBootstrapConfigRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecTemplateSpecInfrastructureRefInput)(nil)).Elem(), MachinePoolSpecTemplateSpecInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolSpecTemplateSpecInfrastructureRefPtrInput)(nil)).Elem(), MachinePoolSpecTemplateSpecInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolStatusInput)(nil)).Elem(), MachinePoolStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolStatusPtrInput)(nil)).Elem(), MachinePoolStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolStatusConditionsInput)(nil)).Elem(), MachinePoolStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolStatusConditionsArrayInput)(nil)).Elem(), MachinePoolStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolStatusNodeRefsInput)(nil)).Elem(), MachinePoolStatusNodeRefsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachinePoolStatusNodeRefsArrayInput)(nil)).Elem(), MachinePoolStatusNodeRefsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecInput)(nil)).Elem(), MachineSetSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecPtrInput)(nil)).Elem(), MachineSetSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecSelectorInput)(nil)).Elem(), MachineSetSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecSelectorPtrInput)(nil)).Elem(), MachineSetSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecSelectorMatchExpressionsInput)(nil)).Elem(), MachineSetSpecSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecSelectorMatchExpressionsArrayInput)(nil)).Elem(), MachineSetSpecSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecTemplateInput)(nil)).Elem(), MachineSetSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecTemplatePtrInput)(nil)).Elem(), MachineSetSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecTemplateMetadataInput)(nil)).Elem(), MachineSetSpecTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecTemplateMetadataPtrInput)(nil)).Elem(), MachineSetSpecTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecTemplateSpecInput)(nil)).Elem(), MachineSetSpecTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecTemplateSpecPtrInput)(nil)).Elem(), MachineSetSpecTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecTemplateSpecBootstrapInput)(nil)).Elem(), MachineSetSpecTemplateSpecBootstrapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecTemplateSpecBootstrapPtrInput)(nil)).Elem(), MachineSetSpecTemplateSpecBootstrapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecTemplateSpecBootstrapConfigRefInput)(nil)).Elem(), MachineSetSpecTemplateSpecBootstrapConfigRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecTemplateSpecBootstrapConfigRefPtrInput)(nil)).Elem(), MachineSetSpecTemplateSpecBootstrapConfigRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecTemplateSpecInfrastructureRefInput)(nil)).Elem(), MachineSetSpecTemplateSpecInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetSpecTemplateSpecInfrastructureRefPtrInput)(nil)).Elem(), MachineSetSpecTemplateSpecInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetStatusInput)(nil)).Elem(), MachineSetStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetStatusPtrInput)(nil)).Elem(), MachineSetStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetStatusConditionsInput)(nil)).Elem(), MachineSetStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetStatusConditionsArrayInput)(nil)).Elem(), MachineSetStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSpecInput)(nil)).Elem(), MachineSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSpecPtrInput)(nil)).Elem(), MachineSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSpecBootstrapInput)(nil)).Elem(), MachineSpecBootstrapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSpecBootstrapPtrInput)(nil)).Elem(), MachineSpecBootstrapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSpecBootstrapConfigRefInput)(nil)).Elem(), MachineSpecBootstrapConfigRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSpecBootstrapConfigRefPtrInput)(nil)).Elem(), MachineSpecBootstrapConfigRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSpecInfrastructureRefInput)(nil)).Elem(), MachineSpecInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSpecInfrastructureRefPtrInput)(nil)).Elem(), MachineSpecInfrastructureRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineStatusInput)(nil)).Elem(), MachineStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineStatusPtrInput)(nil)).Elem(), MachineStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineStatusAddressesInput)(nil)).Elem(), MachineStatusAddressesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineStatusAddressesArrayInput)(nil)).Elem(), MachineStatusAddressesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineStatusConditionsInput)(nil)).Elem(), MachineStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineStatusConditionsArrayInput)(nil)).Elem(), MachineStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineStatusNodeInfoInput)(nil)).Elem(), MachineStatusNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineStatusNodeInfoPtrInput)(nil)).Elem(), MachineStatusNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineStatusNodeRefInput)(nil)).Elem(), MachineStatusNodeRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineStatusNodeRefPtrInput)(nil)).Elem(), MachineStatusNodeRefArgs{})
	pulumi.RegisterOutputType(ClusterClassSpecOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlanePtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneMachineHealthCheckOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneMachineHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplateOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneMachineHealthCheckRemediationTemplatePtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneMachineInfrastructureOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneMachineInfrastructurePtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneMachineInfrastructureRefOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneMachineInfrastructureRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneMetadataOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneMetadataPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneNamingStrategyOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneNamingStrategyPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneRefOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecControlPlaneRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecInfrastructureOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecInfrastructurePtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecInfrastructureRefOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecInfrastructureRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesArrayOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesDefinitionsOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesDefinitionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesDefinitionsJsonPatchesOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesDefinitionsJsonPatchesArrayOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesDefinitionsJsonPatchesValueFromPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesDefinitionsSelectorOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesDefinitionsSelectorMatchResourcesMachineDeploymentClassPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesExternalOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecPatchesExternalPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecVariablesOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecVariablesArrayOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecVariablesSchemaOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecVariablesSchemaOpenAPIV3SchemaOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsArrayOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsNamingStrategyOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsNamingStrategyPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsStrategyOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsStrategyPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdateOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsTemplateOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsTemplateBootstrapRefOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsTemplateInfrastructureRefOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataOutput{})
	pulumi.RegisterOutputType(ClusterClassSpecWorkersMachineDeploymentsTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassStatusOutput{})
	pulumi.RegisterOutputType(ClusterClassStatusPtrOutput{})
	pulumi.RegisterOutputType(ClusterClassStatusConditionsOutput{})
	pulumi.RegisterOutputType(ClusterClassStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterClassStatusVariablesOutput{})
	pulumi.RegisterOutputType(ClusterClassStatusVariablesArrayOutput{})
	pulumi.RegisterOutputType(ClusterClassStatusVariablesDefinitionsOutput{})
	pulumi.RegisterOutputType(ClusterClassStatusVariablesDefinitionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterClassStatusVariablesDefinitionsSchemaOutput{})
	pulumi.RegisterOutputType(ClusterClassStatusVariablesDefinitionsSchemaOpenAPIV3SchemaOutput{})
	pulumi.RegisterOutputType(ClusterSpecOutput{})
	pulumi.RegisterOutputType(ClusterSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecClusterNetworkOutput{})
	pulumi.RegisterOutputType(ClusterSpecClusterNetworkPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecClusterNetworkPodsOutput{})
	pulumi.RegisterOutputType(ClusterSpecClusterNetworkPodsPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecClusterNetworkServicesOutput{})
	pulumi.RegisterOutputType(ClusterSpecClusterNetworkServicesPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecControlPlaneEndpointOutput{})
	pulumi.RegisterOutputType(ClusterSpecControlPlaneEndpointPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecControlPlaneRefOutput{})
	pulumi.RegisterOutputType(ClusterSpecControlPlaneRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecInfrastructureRefOutput{})
	pulumi.RegisterOutputType(ClusterSpecInfrastructureRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyControlPlaneOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyControlPlanePtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyControlPlaneMachineHealthCheckOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyControlPlaneMachineHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplateOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyControlPlaneMachineHealthCheckRemediationTemplatePtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyControlPlaneMachineHealthCheckUnhealthyConditionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyControlPlaneMetadataOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyControlPlaneMetadataPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyVariablesOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyVariablesArrayOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsArrayOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplateOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckRemediationTemplatePtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsMachineHealthCheckUnhealthyConditionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsMetadataOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsMetadataPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsStrategyOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsStrategyPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdateOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsStrategyRollingUpdatePtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsVariablesOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsVariablesPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesOutput{})
	pulumi.RegisterOutputType(ClusterSpecTopologyWorkersMachineDeploymentsVariablesOverridesArrayOutput{})
	pulumi.RegisterOutputType(ClusterStatusOutput{})
	pulumi.RegisterOutputType(ClusterStatusPtrOutput{})
	pulumi.RegisterOutputType(ClusterStatusConditionsOutput{})
	pulumi.RegisterOutputType(ClusterStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ClusterStatusFailureDomainsOutput{})
	pulumi.RegisterOutputType(ClusterStatusFailureDomainsMapOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecPtrOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecSelectorOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecStrategyOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecStrategyPtrOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecStrategyRollingUpdateOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecStrategyRollingUpdatePtrOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecTemplateOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecTemplatePtrOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecTemplateMetadataOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecTemplateSpecOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecTemplateSpecBootstrapOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecTemplateSpecBootstrapPtrOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecTemplateSpecBootstrapConfigRefOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecTemplateSpecBootstrapConfigRefPtrOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecTemplateSpecInfrastructureRefOutput{})
	pulumi.RegisterOutputType(MachineDeploymentSpecTemplateSpecInfrastructureRefPtrOutput{})
	pulumi.RegisterOutputType(MachineDeploymentStatusOutput{})
	pulumi.RegisterOutputType(MachineDeploymentStatusPtrOutput{})
	pulumi.RegisterOutputType(MachineDeploymentStatusConditionsOutput{})
	pulumi.RegisterOutputType(MachineDeploymentStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckSpecOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckSpecPtrOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckSpecRemediationTemplateOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckSpecRemediationTemplatePtrOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckSpecSelectorOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckSpecSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckSpecSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckSpecUnhealthyConditionsOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckSpecUnhealthyConditionsArrayOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckStatusOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckStatusPtrOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckStatusConditionsOutput{})
	pulumi.RegisterOutputType(MachineHealthCheckStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecPtrOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecTemplateOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecTemplatePtrOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecTemplateMetadataOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecTemplateSpecOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecTemplateSpecBootstrapOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecTemplateSpecBootstrapPtrOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecTemplateSpecBootstrapConfigRefOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecTemplateSpecBootstrapConfigRefPtrOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecTemplateSpecInfrastructureRefOutput{})
	pulumi.RegisterOutputType(MachinePoolSpecTemplateSpecInfrastructureRefPtrOutput{})
	pulumi.RegisterOutputType(MachinePoolStatusOutput{})
	pulumi.RegisterOutputType(MachinePoolStatusPtrOutput{})
	pulumi.RegisterOutputType(MachinePoolStatusConditionsOutput{})
	pulumi.RegisterOutputType(MachinePoolStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(MachinePoolStatusNodeRefsOutput{})
	pulumi.RegisterOutputType(MachinePoolStatusNodeRefsArrayOutput{})
	pulumi.RegisterOutputType(MachineSetSpecOutput{})
	pulumi.RegisterOutputType(MachineSetSpecPtrOutput{})
	pulumi.RegisterOutputType(MachineSetSpecSelectorOutput{})
	pulumi.RegisterOutputType(MachineSetSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(MachineSetSpecSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(MachineSetSpecSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(MachineSetSpecTemplateOutput{})
	pulumi.RegisterOutputType(MachineSetSpecTemplatePtrOutput{})
	pulumi.RegisterOutputType(MachineSetSpecTemplateMetadataOutput{})
	pulumi.RegisterOutputType(MachineSetSpecTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(MachineSetSpecTemplateSpecOutput{})
	pulumi.RegisterOutputType(MachineSetSpecTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(MachineSetSpecTemplateSpecBootstrapOutput{})
	pulumi.RegisterOutputType(MachineSetSpecTemplateSpecBootstrapPtrOutput{})
	pulumi.RegisterOutputType(MachineSetSpecTemplateSpecBootstrapConfigRefOutput{})
	pulumi.RegisterOutputType(MachineSetSpecTemplateSpecBootstrapConfigRefPtrOutput{})
	pulumi.RegisterOutputType(MachineSetSpecTemplateSpecInfrastructureRefOutput{})
	pulumi.RegisterOutputType(MachineSetSpecTemplateSpecInfrastructureRefPtrOutput{})
	pulumi.RegisterOutputType(MachineSetStatusOutput{})
	pulumi.RegisterOutputType(MachineSetStatusPtrOutput{})
	pulumi.RegisterOutputType(MachineSetStatusConditionsOutput{})
	pulumi.RegisterOutputType(MachineSetStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(MachineSpecOutput{})
	pulumi.RegisterOutputType(MachineSpecPtrOutput{})
	pulumi.RegisterOutputType(MachineSpecBootstrapOutput{})
	pulumi.RegisterOutputType(MachineSpecBootstrapPtrOutput{})
	pulumi.RegisterOutputType(MachineSpecBootstrapConfigRefOutput{})
	pulumi.RegisterOutputType(MachineSpecBootstrapConfigRefPtrOutput{})
	pulumi.RegisterOutputType(MachineSpecInfrastructureRefOutput{})
	pulumi.RegisterOutputType(MachineSpecInfrastructureRefPtrOutput{})
	pulumi.RegisterOutputType(MachineStatusOutput{})
	pulumi.RegisterOutputType(MachineStatusPtrOutput{})
	pulumi.RegisterOutputType(MachineStatusAddressesOutput{})
	pulumi.RegisterOutputType(MachineStatusAddressesArrayOutput{})
	pulumi.RegisterOutputType(MachineStatusConditionsOutput{})
	pulumi.RegisterOutputType(MachineStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(MachineStatusNodeInfoOutput{})
	pulumi.RegisterOutputType(MachineStatusNodeInfoPtrOutput{})
	pulumi.RegisterOutputType(MachineStatusNodeRefOutput{})
	pulumi.RegisterOutputType(MachineStatusNodeRefPtrOutput{})
}
