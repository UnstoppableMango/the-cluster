// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// MachineSet is the Schema for the machinesets API.
type MachineSet struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// MachineSetSpec defines the desired state of MachineSet.
	Spec MachineSetSpecPtrOutput `pulumi:"spec"`
	// MachineSetStatus defines the observed state of MachineSet.
	Status MachineSetStatusPtrOutput `pulumi:"status"`
}

// NewMachineSet registers a new resource with the given unique name, arguments, and options.
func NewMachineSet(ctx *pulumi.Context,
	name string, args *MachineSetArgs, opts ...pulumi.ResourceOption) (*MachineSet, error) {
	if args == nil {
		args = &MachineSetArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("cluster.x-k8s.io/v1beta1")
	args.Kind = pulumi.StringPtr("MachineSet")
	if args.Spec != nil {
		args.Spec = args.Spec.ToMachineSetSpecPtrOutput().ApplyT(func(v *MachineSetSpec) *MachineSetSpec { return v.Defaults() }).(MachineSetSpecPtrOutput)
	}
	var resource MachineSet
	err := ctx.RegisterResource("kubernetes:cluster.x-k8s.io/v1beta1:MachineSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMachineSet gets an existing MachineSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMachineSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MachineSetState, opts ...pulumi.ResourceOption) (*MachineSet, error) {
	var resource MachineSet
	err := ctx.ReadResource("kubernetes:cluster.x-k8s.io/v1beta1:MachineSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MachineSet resources.
type machineSetState struct {
}

type MachineSetState struct {
}

func (MachineSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*machineSetState)(nil)).Elem()
}

type machineSetArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// MachineSetSpec defines the desired state of MachineSet.
	Spec *MachineSetSpec `pulumi:"spec"`
	// MachineSetStatus defines the observed state of MachineSet.
	Status *MachineSetStatus `pulumi:"status"`
}

// The set of arguments for constructing a MachineSet resource.
type MachineSetArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// MachineSetSpec defines the desired state of MachineSet.
	Spec MachineSetSpecPtrInput
	// MachineSetStatus defines the observed state of MachineSet.
	Status MachineSetStatusPtrInput
}

func (MachineSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*machineSetArgs)(nil)).Elem()
}

type MachineSetInput interface {
	pulumi.Input

	ToMachineSetOutput() MachineSetOutput
	ToMachineSetOutputWithContext(ctx context.Context) MachineSetOutput
}

func (*MachineSet) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSet)(nil)).Elem()
}

func (i *MachineSet) ToMachineSetOutput() MachineSetOutput {
	return i.ToMachineSetOutputWithContext(context.Background())
}

func (i *MachineSet) ToMachineSetOutputWithContext(ctx context.Context) MachineSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineSetOutput)
}

type MachineSetOutput struct{ *pulumi.OutputState }

func (MachineSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineSet)(nil)).Elem()
}

func (o MachineSetOutput) ToMachineSetOutput() MachineSetOutput {
	return o
}

func (o MachineSetOutput) ToMachineSetOutputWithContext(ctx context.Context) MachineSetOutput {
	return o
}

func (o MachineSetOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSet) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o MachineSetOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineSet) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o MachineSetOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *MachineSet) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// MachineSetSpec defines the desired state of MachineSet.
func (o MachineSetOutput) Spec() MachineSetSpecPtrOutput {
	return o.ApplyT(func(v *MachineSet) MachineSetSpecPtrOutput { return v.Spec }).(MachineSetSpecPtrOutput)
}

// MachineSetStatus defines the observed state of MachineSet.
func (o MachineSetOutput) Status() MachineSetStatusPtrOutput {
	return o.ApplyT(func(v *MachineSet) MachineSetStatusPtrOutput { return v.Status }).(MachineSetStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MachineSetInput)(nil)).Elem(), &MachineSet{})
	pulumi.RegisterOutputType(MachineSetOutput{})
}
