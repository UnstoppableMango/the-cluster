// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha4

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ClusterClass is a template which can be used to create managed topologies.
//
//	Deprecated: This type will be removed in one of the next releases.
type ClusterClass struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// ClusterClassSpec describes the desired state of the ClusterClass.
	Spec ClusterClassSpecPtrOutput `pulumi:"spec"`
}

// NewClusterClass registers a new resource with the given unique name, arguments, and options.
func NewClusterClass(ctx *pulumi.Context,
	name string, args *ClusterClassArgs, opts ...pulumi.ResourceOption) (*ClusterClass, error) {
	if args == nil {
		args = &ClusterClassArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("cluster.x-k8s.io/v1alpha4")
	args.Kind = pulumi.StringPtr("ClusterClass")
	var resource ClusterClass
	err := ctx.RegisterResource("kubernetes:cluster.x-k8s.io/v1alpha4:ClusterClass", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterClass gets an existing ClusterClass resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterClass(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterClassState, opts ...pulumi.ResourceOption) (*ClusterClass, error) {
	var resource ClusterClass
	err := ctx.ReadResource("kubernetes:cluster.x-k8s.io/v1alpha4:ClusterClass", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterClass resources.
type clusterClassState struct {
}

type ClusterClassState struct {
}

func (ClusterClassState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterClassState)(nil)).Elem()
}

type clusterClassArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ClusterClassSpec describes the desired state of the ClusterClass.
	Spec *ClusterClassSpec `pulumi:"spec"`
}

// The set of arguments for constructing a ClusterClass resource.
type ClusterClassArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// ClusterClassSpec describes the desired state of the ClusterClass.
	Spec ClusterClassSpecPtrInput
}

func (ClusterClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterClassArgs)(nil)).Elem()
}

type ClusterClassInput interface {
	pulumi.Input

	ToClusterClassOutput() ClusterClassOutput
	ToClusterClassOutputWithContext(ctx context.Context) ClusterClassOutput
}

func (*ClusterClass) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClass)(nil)).Elem()
}

func (i *ClusterClass) ToClusterClassOutput() ClusterClassOutput {
	return i.ToClusterClassOutputWithContext(context.Background())
}

func (i *ClusterClass) ToClusterClassOutputWithContext(ctx context.Context) ClusterClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClassOutput)
}

type ClusterClassOutput struct{ *pulumi.OutputState }

func (ClusterClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClass)(nil)).Elem()
}

func (o ClusterClassOutput) ToClusterClassOutput() ClusterClassOutput {
	return o
}

func (o ClusterClassOutput) ToClusterClassOutputWithContext(ctx context.Context) ClusterClassOutput {
	return o
}

func (o ClusterClassOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClass) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ClusterClassOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClass) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ClusterClassOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *ClusterClass) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// ClusterClassSpec describes the desired state of the ClusterClass.
func (o ClusterClassOutput) Spec() ClusterClassSpecPtrOutput {
	return o.ApplyT(func(v *ClusterClass) ClusterClassSpecPtrOutput { return v.Spec }).(ClusterClassSpecPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClassInput)(nil)).Elem(), &ClusterClass{})
	pulumi.RegisterOutputType(ClusterClassOutput{})
}
