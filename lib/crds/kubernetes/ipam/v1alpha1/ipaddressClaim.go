// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// IPAddressClaim is the Schema for the ipaddressclaim API.
type IPAddressClaim struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// IPAddressClaimSpec is the desired state of an IPAddressClaim.
	Spec IPAddressClaimSpecPtrOutput `pulumi:"spec"`
	// IPAddressClaimStatus is the observed status of a IPAddressClaim.
	Status IPAddressClaimStatusPtrOutput `pulumi:"status"`
}

// NewIPAddressClaim registers a new resource with the given unique name, arguments, and options.
func NewIPAddressClaim(ctx *pulumi.Context,
	name string, args *IPAddressClaimArgs, opts ...pulumi.ResourceOption) (*IPAddressClaim, error) {
	if args == nil {
		args = &IPAddressClaimArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("ipam.cluster.x-k8s.io/v1alpha1")
	args.Kind = pulumi.StringPtr("IPAddressClaim")
	var resource IPAddressClaim
	err := ctx.RegisterResource("kubernetes:ipam.cluster.x-k8s.io/v1alpha1:IPAddressClaim", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIPAddressClaim gets an existing IPAddressClaim resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIPAddressClaim(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IPAddressClaimState, opts ...pulumi.ResourceOption) (*IPAddressClaim, error) {
	var resource IPAddressClaim
	err := ctx.ReadResource("kubernetes:ipam.cluster.x-k8s.io/v1alpha1:IPAddressClaim", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IPAddressClaim resources.
type ipaddressClaimState struct {
}

type IPAddressClaimState struct {
}

func (IPAddressClaimState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipaddressClaimState)(nil)).Elem()
}

type ipaddressClaimArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// IPAddressClaimSpec is the desired state of an IPAddressClaim.
	Spec *IPAddressClaimSpec `pulumi:"spec"`
	// IPAddressClaimStatus is the observed status of a IPAddressClaim.
	Status *IPAddressClaimStatus `pulumi:"status"`
}

// The set of arguments for constructing a IPAddressClaim resource.
type IPAddressClaimArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// IPAddressClaimSpec is the desired state of an IPAddressClaim.
	Spec IPAddressClaimSpecPtrInput
	// IPAddressClaimStatus is the observed status of a IPAddressClaim.
	Status IPAddressClaimStatusPtrInput
}

func (IPAddressClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipaddressClaimArgs)(nil)).Elem()
}

type IPAddressClaimInput interface {
	pulumi.Input

	ToIPAddressClaimOutput() IPAddressClaimOutput
	ToIPAddressClaimOutputWithContext(ctx context.Context) IPAddressClaimOutput
}

func (*IPAddressClaim) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressClaim)(nil)).Elem()
}

func (i *IPAddressClaim) ToIPAddressClaimOutput() IPAddressClaimOutput {
	return i.ToIPAddressClaimOutputWithContext(context.Background())
}

func (i *IPAddressClaim) ToIPAddressClaimOutputWithContext(ctx context.Context) IPAddressClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimOutput)
}

type IPAddressClaimOutput struct{ *pulumi.OutputState }

func (IPAddressClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressClaim)(nil)).Elem()
}

func (o IPAddressClaimOutput) ToIPAddressClaimOutput() IPAddressClaimOutput {
	return o
}

func (o IPAddressClaimOutput) ToIPAddressClaimOutputWithContext(ctx context.Context) IPAddressClaimOutput {
	return o
}

func (o IPAddressClaimOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPAddressClaim) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o IPAddressClaimOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPAddressClaim) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o IPAddressClaimOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *IPAddressClaim) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// IPAddressClaimSpec is the desired state of an IPAddressClaim.
func (o IPAddressClaimOutput) Spec() IPAddressClaimSpecPtrOutput {
	return o.ApplyT(func(v *IPAddressClaim) IPAddressClaimSpecPtrOutput { return v.Spec }).(IPAddressClaimSpecPtrOutput)
}

// IPAddressClaimStatus is the observed status of a IPAddressClaim.
func (o IPAddressClaimOutput) Status() IPAddressClaimStatusPtrOutput {
	return o.ApplyT(func(v *IPAddressClaim) IPAddressClaimStatusPtrOutput { return v.Status }).(IPAddressClaimStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressClaimInput)(nil)).Elem(), &IPAddressClaim{})
	pulumi.RegisterOutputType(IPAddressClaimOutput{})
}
