// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// IPAddress is the Schema for the ipaddress API.
type IPAddressType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// IPAddressSpec is the desired state of an IPAddress.
	Spec *IPAddressSpec `pulumi:"spec"`
}

// IPAddressClaim is the Schema for the ipaddressclaim API.
type IPAddressClaimType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// IPAddressClaimSpec is the desired state of an IPAddressClaim.
	Spec *IPAddressClaimSpec `pulumi:"spec"`
	// IPAddressClaimStatus is the observed status of a IPAddressClaim.
	Status *IPAddressClaimStatus `pulumi:"status"`
}

type IPAddressClaimMetadata struct {
}

// IPAddressClaimSpec is the desired state of an IPAddressClaim.
type IPAddressClaimSpec struct {
	// PoolRef is a reference to the pool from which an IP address should be created.
	PoolRef IPAddressClaimSpecPoolRef `pulumi:"poolRef"`
}

// IPAddressClaimSpecInput is an input type that accepts IPAddressClaimSpecArgs and IPAddressClaimSpecOutput values.
// You can construct a concrete instance of `IPAddressClaimSpecInput` via:
//
//	IPAddressClaimSpecArgs{...}
type IPAddressClaimSpecInput interface {
	pulumi.Input

	ToIPAddressClaimSpecOutput() IPAddressClaimSpecOutput
	ToIPAddressClaimSpecOutputWithContext(context.Context) IPAddressClaimSpecOutput
}

// IPAddressClaimSpec is the desired state of an IPAddressClaim.
type IPAddressClaimSpecArgs struct {
	// PoolRef is a reference to the pool from which an IP address should be created.
	PoolRef IPAddressClaimSpecPoolRefInput `pulumi:"poolRef"`
}

func (IPAddressClaimSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressClaimSpec)(nil)).Elem()
}

func (i IPAddressClaimSpecArgs) ToIPAddressClaimSpecOutput() IPAddressClaimSpecOutput {
	return i.ToIPAddressClaimSpecOutputWithContext(context.Background())
}

func (i IPAddressClaimSpecArgs) ToIPAddressClaimSpecOutputWithContext(ctx context.Context) IPAddressClaimSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimSpecOutput)
}

func (i IPAddressClaimSpecArgs) ToIPAddressClaimSpecPtrOutput() IPAddressClaimSpecPtrOutput {
	return i.ToIPAddressClaimSpecPtrOutputWithContext(context.Background())
}

func (i IPAddressClaimSpecArgs) ToIPAddressClaimSpecPtrOutputWithContext(ctx context.Context) IPAddressClaimSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimSpecOutput).ToIPAddressClaimSpecPtrOutputWithContext(ctx)
}

// IPAddressClaimSpecPtrInput is an input type that accepts IPAddressClaimSpecArgs, IPAddressClaimSpecPtr and IPAddressClaimSpecPtrOutput values.
// You can construct a concrete instance of `IPAddressClaimSpecPtrInput` via:
//
//	        IPAddressClaimSpecArgs{...}
//
//	or:
//
//	        nil
type IPAddressClaimSpecPtrInput interface {
	pulumi.Input

	ToIPAddressClaimSpecPtrOutput() IPAddressClaimSpecPtrOutput
	ToIPAddressClaimSpecPtrOutputWithContext(context.Context) IPAddressClaimSpecPtrOutput
}

type ipaddressClaimSpecPtrType IPAddressClaimSpecArgs

func IPAddressClaimSpecPtr(v *IPAddressClaimSpecArgs) IPAddressClaimSpecPtrInput {
	return (*ipaddressClaimSpecPtrType)(v)
}

func (*ipaddressClaimSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressClaimSpec)(nil)).Elem()
}

func (i *ipaddressClaimSpecPtrType) ToIPAddressClaimSpecPtrOutput() IPAddressClaimSpecPtrOutput {
	return i.ToIPAddressClaimSpecPtrOutputWithContext(context.Background())
}

func (i *ipaddressClaimSpecPtrType) ToIPAddressClaimSpecPtrOutputWithContext(ctx context.Context) IPAddressClaimSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimSpecPtrOutput)
}

// IPAddressClaimSpec is the desired state of an IPAddressClaim.
type IPAddressClaimSpecOutput struct{ *pulumi.OutputState }

func (IPAddressClaimSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressClaimSpec)(nil)).Elem()
}

func (o IPAddressClaimSpecOutput) ToIPAddressClaimSpecOutput() IPAddressClaimSpecOutput {
	return o
}

func (o IPAddressClaimSpecOutput) ToIPAddressClaimSpecOutputWithContext(ctx context.Context) IPAddressClaimSpecOutput {
	return o
}

func (o IPAddressClaimSpecOutput) ToIPAddressClaimSpecPtrOutput() IPAddressClaimSpecPtrOutput {
	return o.ToIPAddressClaimSpecPtrOutputWithContext(context.Background())
}

func (o IPAddressClaimSpecOutput) ToIPAddressClaimSpecPtrOutputWithContext(ctx context.Context) IPAddressClaimSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IPAddressClaimSpec) *IPAddressClaimSpec {
		return &v
	}).(IPAddressClaimSpecPtrOutput)
}

// PoolRef is a reference to the pool from which an IP address should be created.
func (o IPAddressClaimSpecOutput) PoolRef() IPAddressClaimSpecPoolRefOutput {
	return o.ApplyT(func(v IPAddressClaimSpec) IPAddressClaimSpecPoolRef { return v.PoolRef }).(IPAddressClaimSpecPoolRefOutput)
}

type IPAddressClaimSpecPtrOutput struct{ *pulumi.OutputState }

func (IPAddressClaimSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressClaimSpec)(nil)).Elem()
}

func (o IPAddressClaimSpecPtrOutput) ToIPAddressClaimSpecPtrOutput() IPAddressClaimSpecPtrOutput {
	return o
}

func (o IPAddressClaimSpecPtrOutput) ToIPAddressClaimSpecPtrOutputWithContext(ctx context.Context) IPAddressClaimSpecPtrOutput {
	return o
}

func (o IPAddressClaimSpecPtrOutput) Elem() IPAddressClaimSpecOutput {
	return o.ApplyT(func(v *IPAddressClaimSpec) IPAddressClaimSpec {
		if v != nil {
			return *v
		}
		var ret IPAddressClaimSpec
		return ret
	}).(IPAddressClaimSpecOutput)
}

// PoolRef is a reference to the pool from which an IP address should be created.
func (o IPAddressClaimSpecPtrOutput) PoolRef() IPAddressClaimSpecPoolRefPtrOutput {
	return o.ApplyT(func(v *IPAddressClaimSpec) *IPAddressClaimSpecPoolRef {
		if v == nil {
			return nil
		}
		return &v.PoolRef
	}).(IPAddressClaimSpecPoolRefPtrOutput)
}

// PoolRef is a reference to the pool from which an IP address should be created.
type IPAddressClaimSpecPoolRef struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name string `pulumi:"name"`
}

// IPAddressClaimSpecPoolRefInput is an input type that accepts IPAddressClaimSpecPoolRefArgs and IPAddressClaimSpecPoolRefOutput values.
// You can construct a concrete instance of `IPAddressClaimSpecPoolRefInput` via:
//
//	IPAddressClaimSpecPoolRefArgs{...}
type IPAddressClaimSpecPoolRefInput interface {
	pulumi.Input

	ToIPAddressClaimSpecPoolRefOutput() IPAddressClaimSpecPoolRefOutput
	ToIPAddressClaimSpecPoolRefOutputWithContext(context.Context) IPAddressClaimSpecPoolRefOutput
}

// PoolRef is a reference to the pool from which an IP address should be created.
type IPAddressClaimSpecPoolRefArgs struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringInput `pulumi:"name"`
}

func (IPAddressClaimSpecPoolRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressClaimSpecPoolRef)(nil)).Elem()
}

func (i IPAddressClaimSpecPoolRefArgs) ToIPAddressClaimSpecPoolRefOutput() IPAddressClaimSpecPoolRefOutput {
	return i.ToIPAddressClaimSpecPoolRefOutputWithContext(context.Background())
}

func (i IPAddressClaimSpecPoolRefArgs) ToIPAddressClaimSpecPoolRefOutputWithContext(ctx context.Context) IPAddressClaimSpecPoolRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimSpecPoolRefOutput)
}

func (i IPAddressClaimSpecPoolRefArgs) ToIPAddressClaimSpecPoolRefPtrOutput() IPAddressClaimSpecPoolRefPtrOutput {
	return i.ToIPAddressClaimSpecPoolRefPtrOutputWithContext(context.Background())
}

func (i IPAddressClaimSpecPoolRefArgs) ToIPAddressClaimSpecPoolRefPtrOutputWithContext(ctx context.Context) IPAddressClaimSpecPoolRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimSpecPoolRefOutput).ToIPAddressClaimSpecPoolRefPtrOutputWithContext(ctx)
}

// IPAddressClaimSpecPoolRefPtrInput is an input type that accepts IPAddressClaimSpecPoolRefArgs, IPAddressClaimSpecPoolRefPtr and IPAddressClaimSpecPoolRefPtrOutput values.
// You can construct a concrete instance of `IPAddressClaimSpecPoolRefPtrInput` via:
//
//	        IPAddressClaimSpecPoolRefArgs{...}
//
//	or:
//
//	        nil
type IPAddressClaimSpecPoolRefPtrInput interface {
	pulumi.Input

	ToIPAddressClaimSpecPoolRefPtrOutput() IPAddressClaimSpecPoolRefPtrOutput
	ToIPAddressClaimSpecPoolRefPtrOutputWithContext(context.Context) IPAddressClaimSpecPoolRefPtrOutput
}

type ipaddressClaimSpecPoolRefPtrType IPAddressClaimSpecPoolRefArgs

func IPAddressClaimSpecPoolRefPtr(v *IPAddressClaimSpecPoolRefArgs) IPAddressClaimSpecPoolRefPtrInput {
	return (*ipaddressClaimSpecPoolRefPtrType)(v)
}

func (*ipaddressClaimSpecPoolRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressClaimSpecPoolRef)(nil)).Elem()
}

func (i *ipaddressClaimSpecPoolRefPtrType) ToIPAddressClaimSpecPoolRefPtrOutput() IPAddressClaimSpecPoolRefPtrOutput {
	return i.ToIPAddressClaimSpecPoolRefPtrOutputWithContext(context.Background())
}

func (i *ipaddressClaimSpecPoolRefPtrType) ToIPAddressClaimSpecPoolRefPtrOutputWithContext(ctx context.Context) IPAddressClaimSpecPoolRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimSpecPoolRefPtrOutput)
}

// PoolRef is a reference to the pool from which an IP address should be created.
type IPAddressClaimSpecPoolRefOutput struct{ *pulumi.OutputState }

func (IPAddressClaimSpecPoolRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressClaimSpecPoolRef)(nil)).Elem()
}

func (o IPAddressClaimSpecPoolRefOutput) ToIPAddressClaimSpecPoolRefOutput() IPAddressClaimSpecPoolRefOutput {
	return o
}

func (o IPAddressClaimSpecPoolRefOutput) ToIPAddressClaimSpecPoolRefOutputWithContext(ctx context.Context) IPAddressClaimSpecPoolRefOutput {
	return o
}

func (o IPAddressClaimSpecPoolRefOutput) ToIPAddressClaimSpecPoolRefPtrOutput() IPAddressClaimSpecPoolRefPtrOutput {
	return o.ToIPAddressClaimSpecPoolRefPtrOutputWithContext(context.Background())
}

func (o IPAddressClaimSpecPoolRefOutput) ToIPAddressClaimSpecPoolRefPtrOutputWithContext(ctx context.Context) IPAddressClaimSpecPoolRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IPAddressClaimSpecPoolRef) *IPAddressClaimSpecPoolRef {
		return &v
	}).(IPAddressClaimSpecPoolRefPtrOutput)
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o IPAddressClaimSpecPoolRefOutput) ApiGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IPAddressClaimSpecPoolRef) string { return v.ApiGroup }).(pulumi.StringOutput)
}

// Kind is the type of resource being referenced
func (o IPAddressClaimSpecPoolRefOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v IPAddressClaimSpecPoolRef) string { return v.Kind }).(pulumi.StringOutput)
}

// Name is the name of resource being referenced
func (o IPAddressClaimSpecPoolRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IPAddressClaimSpecPoolRef) string { return v.Name }).(pulumi.StringOutput)
}

type IPAddressClaimSpecPoolRefPtrOutput struct{ *pulumi.OutputState }

func (IPAddressClaimSpecPoolRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressClaimSpecPoolRef)(nil)).Elem()
}

func (o IPAddressClaimSpecPoolRefPtrOutput) ToIPAddressClaimSpecPoolRefPtrOutput() IPAddressClaimSpecPoolRefPtrOutput {
	return o
}

func (o IPAddressClaimSpecPoolRefPtrOutput) ToIPAddressClaimSpecPoolRefPtrOutputWithContext(ctx context.Context) IPAddressClaimSpecPoolRefPtrOutput {
	return o
}

func (o IPAddressClaimSpecPoolRefPtrOutput) Elem() IPAddressClaimSpecPoolRefOutput {
	return o.ApplyT(func(v *IPAddressClaimSpecPoolRef) IPAddressClaimSpecPoolRef {
		if v != nil {
			return *v
		}
		var ret IPAddressClaimSpecPoolRef
		return ret
	}).(IPAddressClaimSpecPoolRefOutput)
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o IPAddressClaimSpecPoolRefPtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPAddressClaimSpecPoolRef) *string {
		if v == nil {
			return nil
		}
		return &v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o IPAddressClaimSpecPoolRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPAddressClaimSpecPoolRef) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o IPAddressClaimSpecPoolRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPAddressClaimSpecPoolRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// IPAddressClaimStatus is the observed status of a IPAddressClaim.
type IPAddressClaimStatus struct {
	// AddressRef is a reference to the address that was created for this claim.
	AddressRef *IPAddressClaimStatusAddressRef `pulumi:"addressRef"`
	// Conditions summarises the current state of the IPAddressClaim
	Conditions []IPAddressClaimStatusConditions `pulumi:"conditions"`
}

// IPAddressClaimStatusInput is an input type that accepts IPAddressClaimStatusArgs and IPAddressClaimStatusOutput values.
// You can construct a concrete instance of `IPAddressClaimStatusInput` via:
//
//	IPAddressClaimStatusArgs{...}
type IPAddressClaimStatusInput interface {
	pulumi.Input

	ToIPAddressClaimStatusOutput() IPAddressClaimStatusOutput
	ToIPAddressClaimStatusOutputWithContext(context.Context) IPAddressClaimStatusOutput
}

// IPAddressClaimStatus is the observed status of a IPAddressClaim.
type IPAddressClaimStatusArgs struct {
	// AddressRef is a reference to the address that was created for this claim.
	AddressRef IPAddressClaimStatusAddressRefPtrInput `pulumi:"addressRef"`
	// Conditions summarises the current state of the IPAddressClaim
	Conditions IPAddressClaimStatusConditionsArrayInput `pulumi:"conditions"`
}

func (IPAddressClaimStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressClaimStatus)(nil)).Elem()
}

func (i IPAddressClaimStatusArgs) ToIPAddressClaimStatusOutput() IPAddressClaimStatusOutput {
	return i.ToIPAddressClaimStatusOutputWithContext(context.Background())
}

func (i IPAddressClaimStatusArgs) ToIPAddressClaimStatusOutputWithContext(ctx context.Context) IPAddressClaimStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimStatusOutput)
}

func (i IPAddressClaimStatusArgs) ToIPAddressClaimStatusPtrOutput() IPAddressClaimStatusPtrOutput {
	return i.ToIPAddressClaimStatusPtrOutputWithContext(context.Background())
}

func (i IPAddressClaimStatusArgs) ToIPAddressClaimStatusPtrOutputWithContext(ctx context.Context) IPAddressClaimStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimStatusOutput).ToIPAddressClaimStatusPtrOutputWithContext(ctx)
}

// IPAddressClaimStatusPtrInput is an input type that accepts IPAddressClaimStatusArgs, IPAddressClaimStatusPtr and IPAddressClaimStatusPtrOutput values.
// You can construct a concrete instance of `IPAddressClaimStatusPtrInput` via:
//
//	        IPAddressClaimStatusArgs{...}
//
//	or:
//
//	        nil
type IPAddressClaimStatusPtrInput interface {
	pulumi.Input

	ToIPAddressClaimStatusPtrOutput() IPAddressClaimStatusPtrOutput
	ToIPAddressClaimStatusPtrOutputWithContext(context.Context) IPAddressClaimStatusPtrOutput
}

type ipaddressClaimStatusPtrType IPAddressClaimStatusArgs

func IPAddressClaimStatusPtr(v *IPAddressClaimStatusArgs) IPAddressClaimStatusPtrInput {
	return (*ipaddressClaimStatusPtrType)(v)
}

func (*ipaddressClaimStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressClaimStatus)(nil)).Elem()
}

func (i *ipaddressClaimStatusPtrType) ToIPAddressClaimStatusPtrOutput() IPAddressClaimStatusPtrOutput {
	return i.ToIPAddressClaimStatusPtrOutputWithContext(context.Background())
}

func (i *ipaddressClaimStatusPtrType) ToIPAddressClaimStatusPtrOutputWithContext(ctx context.Context) IPAddressClaimStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimStatusPtrOutput)
}

// IPAddressClaimStatus is the observed status of a IPAddressClaim.
type IPAddressClaimStatusOutput struct{ *pulumi.OutputState }

func (IPAddressClaimStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressClaimStatus)(nil)).Elem()
}

func (o IPAddressClaimStatusOutput) ToIPAddressClaimStatusOutput() IPAddressClaimStatusOutput {
	return o
}

func (o IPAddressClaimStatusOutput) ToIPAddressClaimStatusOutputWithContext(ctx context.Context) IPAddressClaimStatusOutput {
	return o
}

func (o IPAddressClaimStatusOutput) ToIPAddressClaimStatusPtrOutput() IPAddressClaimStatusPtrOutput {
	return o.ToIPAddressClaimStatusPtrOutputWithContext(context.Background())
}

func (o IPAddressClaimStatusOutput) ToIPAddressClaimStatusPtrOutputWithContext(ctx context.Context) IPAddressClaimStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IPAddressClaimStatus) *IPAddressClaimStatus {
		return &v
	}).(IPAddressClaimStatusPtrOutput)
}

// AddressRef is a reference to the address that was created for this claim.
func (o IPAddressClaimStatusOutput) AddressRef() IPAddressClaimStatusAddressRefPtrOutput {
	return o.ApplyT(func(v IPAddressClaimStatus) *IPAddressClaimStatusAddressRef { return v.AddressRef }).(IPAddressClaimStatusAddressRefPtrOutput)
}

// Conditions summarises the current state of the IPAddressClaim
func (o IPAddressClaimStatusOutput) Conditions() IPAddressClaimStatusConditionsArrayOutput {
	return o.ApplyT(func(v IPAddressClaimStatus) []IPAddressClaimStatusConditions { return v.Conditions }).(IPAddressClaimStatusConditionsArrayOutput)
}

type IPAddressClaimStatusPtrOutput struct{ *pulumi.OutputState }

func (IPAddressClaimStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressClaimStatus)(nil)).Elem()
}

func (o IPAddressClaimStatusPtrOutput) ToIPAddressClaimStatusPtrOutput() IPAddressClaimStatusPtrOutput {
	return o
}

func (o IPAddressClaimStatusPtrOutput) ToIPAddressClaimStatusPtrOutputWithContext(ctx context.Context) IPAddressClaimStatusPtrOutput {
	return o
}

func (o IPAddressClaimStatusPtrOutput) Elem() IPAddressClaimStatusOutput {
	return o.ApplyT(func(v *IPAddressClaimStatus) IPAddressClaimStatus {
		if v != nil {
			return *v
		}
		var ret IPAddressClaimStatus
		return ret
	}).(IPAddressClaimStatusOutput)
}

// AddressRef is a reference to the address that was created for this claim.
func (o IPAddressClaimStatusPtrOutput) AddressRef() IPAddressClaimStatusAddressRefPtrOutput {
	return o.ApplyT(func(v *IPAddressClaimStatus) *IPAddressClaimStatusAddressRef {
		if v == nil {
			return nil
		}
		return v.AddressRef
	}).(IPAddressClaimStatusAddressRefPtrOutput)
}

// Conditions summarises the current state of the IPAddressClaim
func (o IPAddressClaimStatusPtrOutput) Conditions() IPAddressClaimStatusConditionsArrayOutput {
	return o.ApplyT(func(v *IPAddressClaimStatus) []IPAddressClaimStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(IPAddressClaimStatusConditionsArrayOutput)
}

// AddressRef is a reference to the address that was created for this claim.
type IPAddressClaimStatusAddressRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// IPAddressClaimStatusAddressRefInput is an input type that accepts IPAddressClaimStatusAddressRefArgs and IPAddressClaimStatusAddressRefOutput values.
// You can construct a concrete instance of `IPAddressClaimStatusAddressRefInput` via:
//
//	IPAddressClaimStatusAddressRefArgs{...}
type IPAddressClaimStatusAddressRefInput interface {
	pulumi.Input

	ToIPAddressClaimStatusAddressRefOutput() IPAddressClaimStatusAddressRefOutput
	ToIPAddressClaimStatusAddressRefOutputWithContext(context.Context) IPAddressClaimStatusAddressRefOutput
}

// AddressRef is a reference to the address that was created for this claim.
type IPAddressClaimStatusAddressRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IPAddressClaimStatusAddressRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressClaimStatusAddressRef)(nil)).Elem()
}

func (i IPAddressClaimStatusAddressRefArgs) ToIPAddressClaimStatusAddressRefOutput() IPAddressClaimStatusAddressRefOutput {
	return i.ToIPAddressClaimStatusAddressRefOutputWithContext(context.Background())
}

func (i IPAddressClaimStatusAddressRefArgs) ToIPAddressClaimStatusAddressRefOutputWithContext(ctx context.Context) IPAddressClaimStatusAddressRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimStatusAddressRefOutput)
}

func (i IPAddressClaimStatusAddressRefArgs) ToIPAddressClaimStatusAddressRefPtrOutput() IPAddressClaimStatusAddressRefPtrOutput {
	return i.ToIPAddressClaimStatusAddressRefPtrOutputWithContext(context.Background())
}

func (i IPAddressClaimStatusAddressRefArgs) ToIPAddressClaimStatusAddressRefPtrOutputWithContext(ctx context.Context) IPAddressClaimStatusAddressRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimStatusAddressRefOutput).ToIPAddressClaimStatusAddressRefPtrOutputWithContext(ctx)
}

// IPAddressClaimStatusAddressRefPtrInput is an input type that accepts IPAddressClaimStatusAddressRefArgs, IPAddressClaimStatusAddressRefPtr and IPAddressClaimStatusAddressRefPtrOutput values.
// You can construct a concrete instance of `IPAddressClaimStatusAddressRefPtrInput` via:
//
//	        IPAddressClaimStatusAddressRefArgs{...}
//
//	or:
//
//	        nil
type IPAddressClaimStatusAddressRefPtrInput interface {
	pulumi.Input

	ToIPAddressClaimStatusAddressRefPtrOutput() IPAddressClaimStatusAddressRefPtrOutput
	ToIPAddressClaimStatusAddressRefPtrOutputWithContext(context.Context) IPAddressClaimStatusAddressRefPtrOutput
}

type ipaddressClaimStatusAddressRefPtrType IPAddressClaimStatusAddressRefArgs

func IPAddressClaimStatusAddressRefPtr(v *IPAddressClaimStatusAddressRefArgs) IPAddressClaimStatusAddressRefPtrInput {
	return (*ipaddressClaimStatusAddressRefPtrType)(v)
}

func (*ipaddressClaimStatusAddressRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressClaimStatusAddressRef)(nil)).Elem()
}

func (i *ipaddressClaimStatusAddressRefPtrType) ToIPAddressClaimStatusAddressRefPtrOutput() IPAddressClaimStatusAddressRefPtrOutput {
	return i.ToIPAddressClaimStatusAddressRefPtrOutputWithContext(context.Background())
}

func (i *ipaddressClaimStatusAddressRefPtrType) ToIPAddressClaimStatusAddressRefPtrOutputWithContext(ctx context.Context) IPAddressClaimStatusAddressRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimStatusAddressRefPtrOutput)
}

// AddressRef is a reference to the address that was created for this claim.
type IPAddressClaimStatusAddressRefOutput struct{ *pulumi.OutputState }

func (IPAddressClaimStatusAddressRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressClaimStatusAddressRef)(nil)).Elem()
}

func (o IPAddressClaimStatusAddressRefOutput) ToIPAddressClaimStatusAddressRefOutput() IPAddressClaimStatusAddressRefOutput {
	return o
}

func (o IPAddressClaimStatusAddressRefOutput) ToIPAddressClaimStatusAddressRefOutputWithContext(ctx context.Context) IPAddressClaimStatusAddressRefOutput {
	return o
}

func (o IPAddressClaimStatusAddressRefOutput) ToIPAddressClaimStatusAddressRefPtrOutput() IPAddressClaimStatusAddressRefPtrOutput {
	return o.ToIPAddressClaimStatusAddressRefPtrOutputWithContext(context.Background())
}

func (o IPAddressClaimStatusAddressRefOutput) ToIPAddressClaimStatusAddressRefPtrOutputWithContext(ctx context.Context) IPAddressClaimStatusAddressRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IPAddressClaimStatusAddressRef) *IPAddressClaimStatusAddressRef {
		return &v
	}).(IPAddressClaimStatusAddressRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o IPAddressClaimStatusAddressRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPAddressClaimStatusAddressRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IPAddressClaimStatusAddressRefPtrOutput struct{ *pulumi.OutputState }

func (IPAddressClaimStatusAddressRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressClaimStatusAddressRef)(nil)).Elem()
}

func (o IPAddressClaimStatusAddressRefPtrOutput) ToIPAddressClaimStatusAddressRefPtrOutput() IPAddressClaimStatusAddressRefPtrOutput {
	return o
}

func (o IPAddressClaimStatusAddressRefPtrOutput) ToIPAddressClaimStatusAddressRefPtrOutputWithContext(ctx context.Context) IPAddressClaimStatusAddressRefPtrOutput {
	return o
}

func (o IPAddressClaimStatusAddressRefPtrOutput) Elem() IPAddressClaimStatusAddressRefOutput {
	return o.ApplyT(func(v *IPAddressClaimStatusAddressRef) IPAddressClaimStatusAddressRef {
		if v != nil {
			return *v
		}
		var ret IPAddressClaimStatusAddressRef
		return ret
	}).(IPAddressClaimStatusAddressRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o IPAddressClaimStatusAddressRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPAddressClaimStatusAddressRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type IPAddressClaimStatusConditions struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason *string `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity *string `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type string `pulumi:"type"`
}

// IPAddressClaimStatusConditionsInput is an input type that accepts IPAddressClaimStatusConditionsArgs and IPAddressClaimStatusConditionsOutput values.
// You can construct a concrete instance of `IPAddressClaimStatusConditionsInput` via:
//
//	IPAddressClaimStatusConditionsArgs{...}
type IPAddressClaimStatusConditionsInput interface {
	pulumi.Input

	ToIPAddressClaimStatusConditionsOutput() IPAddressClaimStatusConditionsOutput
	ToIPAddressClaimStatusConditionsOutputWithContext(context.Context) IPAddressClaimStatusConditionsOutput
}

// Condition defines an observation of a Cluster API resource operational state.
type IPAddressClaimStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IPAddressClaimStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressClaimStatusConditions)(nil)).Elem()
}

func (i IPAddressClaimStatusConditionsArgs) ToIPAddressClaimStatusConditionsOutput() IPAddressClaimStatusConditionsOutput {
	return i.ToIPAddressClaimStatusConditionsOutputWithContext(context.Background())
}

func (i IPAddressClaimStatusConditionsArgs) ToIPAddressClaimStatusConditionsOutputWithContext(ctx context.Context) IPAddressClaimStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimStatusConditionsOutput)
}

// IPAddressClaimStatusConditionsArrayInput is an input type that accepts IPAddressClaimStatusConditionsArray and IPAddressClaimStatusConditionsArrayOutput values.
// You can construct a concrete instance of `IPAddressClaimStatusConditionsArrayInput` via:
//
//	IPAddressClaimStatusConditionsArray{ IPAddressClaimStatusConditionsArgs{...} }
type IPAddressClaimStatusConditionsArrayInput interface {
	pulumi.Input

	ToIPAddressClaimStatusConditionsArrayOutput() IPAddressClaimStatusConditionsArrayOutput
	ToIPAddressClaimStatusConditionsArrayOutputWithContext(context.Context) IPAddressClaimStatusConditionsArrayOutput
}

type IPAddressClaimStatusConditionsArray []IPAddressClaimStatusConditionsInput

func (IPAddressClaimStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPAddressClaimStatusConditions)(nil)).Elem()
}

func (i IPAddressClaimStatusConditionsArray) ToIPAddressClaimStatusConditionsArrayOutput() IPAddressClaimStatusConditionsArrayOutput {
	return i.ToIPAddressClaimStatusConditionsArrayOutputWithContext(context.Background())
}

func (i IPAddressClaimStatusConditionsArray) ToIPAddressClaimStatusConditionsArrayOutputWithContext(ctx context.Context) IPAddressClaimStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressClaimStatusConditionsArrayOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type IPAddressClaimStatusConditionsOutput struct{ *pulumi.OutputState }

func (IPAddressClaimStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressClaimStatusConditions)(nil)).Elem()
}

func (o IPAddressClaimStatusConditionsOutput) ToIPAddressClaimStatusConditionsOutput() IPAddressClaimStatusConditionsOutput {
	return o
}

func (o IPAddressClaimStatusConditionsOutput) ToIPAddressClaimStatusConditionsOutputWithContext(ctx context.Context) IPAddressClaimStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
func (o IPAddressClaimStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v IPAddressClaimStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A human readable message indicating details about the transition. This field may be empty.
func (o IPAddressClaimStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPAddressClaimStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
func (o IPAddressClaimStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPAddressClaimStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
func (o IPAddressClaimStatusConditionsOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPAddressClaimStatusConditions) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o IPAddressClaimStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v IPAddressClaimStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
func (o IPAddressClaimStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IPAddressClaimStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type IPAddressClaimStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (IPAddressClaimStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPAddressClaimStatusConditions)(nil)).Elem()
}

func (o IPAddressClaimStatusConditionsArrayOutput) ToIPAddressClaimStatusConditionsArrayOutput() IPAddressClaimStatusConditionsArrayOutput {
	return o
}

func (o IPAddressClaimStatusConditionsArrayOutput) ToIPAddressClaimStatusConditionsArrayOutputWithContext(ctx context.Context) IPAddressClaimStatusConditionsArrayOutput {
	return o
}

func (o IPAddressClaimStatusConditionsArrayOutput) Index(i pulumi.IntInput) IPAddressClaimStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPAddressClaimStatusConditions {
		return vs[0].([]IPAddressClaimStatusConditions)[vs[1].(int)]
	}).(IPAddressClaimStatusConditionsOutput)
}

type IPAddressMetadata struct {
}

// IPAddressSpec is the desired state of an IPAddress.
type IPAddressSpec struct {
	// Address is the IP address.
	Address string `pulumi:"address"`
	// ClaimRef is a reference to the claim this IPAddress was created for.
	ClaimRef IPAddressSpecClaimRef `pulumi:"claimRef"`
	// Gateway is the network gateway of the network the address is from.
	Gateway *string `pulumi:"gateway"`
	// PoolRef is a reference to the pool that this IPAddress was created from.
	PoolRef IPAddressSpecPoolRef `pulumi:"poolRef"`
	// Prefix is the prefix of the address.
	Prefix int `pulumi:"prefix"`
}

// IPAddressSpecInput is an input type that accepts IPAddressSpecArgs and IPAddressSpecOutput values.
// You can construct a concrete instance of `IPAddressSpecInput` via:
//
//	IPAddressSpecArgs{...}
type IPAddressSpecInput interface {
	pulumi.Input

	ToIPAddressSpecOutput() IPAddressSpecOutput
	ToIPAddressSpecOutputWithContext(context.Context) IPAddressSpecOutput
}

// IPAddressSpec is the desired state of an IPAddress.
type IPAddressSpecArgs struct {
	// Address is the IP address.
	Address pulumi.StringInput `pulumi:"address"`
	// ClaimRef is a reference to the claim this IPAddress was created for.
	ClaimRef IPAddressSpecClaimRefInput `pulumi:"claimRef"`
	// Gateway is the network gateway of the network the address is from.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// PoolRef is a reference to the pool that this IPAddress was created from.
	PoolRef IPAddressSpecPoolRefInput `pulumi:"poolRef"`
	// Prefix is the prefix of the address.
	Prefix pulumi.IntInput `pulumi:"prefix"`
}

func (IPAddressSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressSpec)(nil)).Elem()
}

func (i IPAddressSpecArgs) ToIPAddressSpecOutput() IPAddressSpecOutput {
	return i.ToIPAddressSpecOutputWithContext(context.Background())
}

func (i IPAddressSpecArgs) ToIPAddressSpecOutputWithContext(ctx context.Context) IPAddressSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressSpecOutput)
}

func (i IPAddressSpecArgs) ToIPAddressSpecPtrOutput() IPAddressSpecPtrOutput {
	return i.ToIPAddressSpecPtrOutputWithContext(context.Background())
}

func (i IPAddressSpecArgs) ToIPAddressSpecPtrOutputWithContext(ctx context.Context) IPAddressSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressSpecOutput).ToIPAddressSpecPtrOutputWithContext(ctx)
}

// IPAddressSpecPtrInput is an input type that accepts IPAddressSpecArgs, IPAddressSpecPtr and IPAddressSpecPtrOutput values.
// You can construct a concrete instance of `IPAddressSpecPtrInput` via:
//
//	        IPAddressSpecArgs{...}
//
//	or:
//
//	        nil
type IPAddressSpecPtrInput interface {
	pulumi.Input

	ToIPAddressSpecPtrOutput() IPAddressSpecPtrOutput
	ToIPAddressSpecPtrOutputWithContext(context.Context) IPAddressSpecPtrOutput
}

type ipaddressSpecPtrType IPAddressSpecArgs

func IPAddressSpecPtr(v *IPAddressSpecArgs) IPAddressSpecPtrInput {
	return (*ipaddressSpecPtrType)(v)
}

func (*ipaddressSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressSpec)(nil)).Elem()
}

func (i *ipaddressSpecPtrType) ToIPAddressSpecPtrOutput() IPAddressSpecPtrOutput {
	return i.ToIPAddressSpecPtrOutputWithContext(context.Background())
}

func (i *ipaddressSpecPtrType) ToIPAddressSpecPtrOutputWithContext(ctx context.Context) IPAddressSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressSpecPtrOutput)
}

// IPAddressSpec is the desired state of an IPAddress.
type IPAddressSpecOutput struct{ *pulumi.OutputState }

func (IPAddressSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressSpec)(nil)).Elem()
}

func (o IPAddressSpecOutput) ToIPAddressSpecOutput() IPAddressSpecOutput {
	return o
}

func (o IPAddressSpecOutput) ToIPAddressSpecOutputWithContext(ctx context.Context) IPAddressSpecOutput {
	return o
}

func (o IPAddressSpecOutput) ToIPAddressSpecPtrOutput() IPAddressSpecPtrOutput {
	return o.ToIPAddressSpecPtrOutputWithContext(context.Background())
}

func (o IPAddressSpecOutput) ToIPAddressSpecPtrOutputWithContext(ctx context.Context) IPAddressSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IPAddressSpec) *IPAddressSpec {
		return &v
	}).(IPAddressSpecPtrOutput)
}

// Address is the IP address.
func (o IPAddressSpecOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v IPAddressSpec) string { return v.Address }).(pulumi.StringOutput)
}

// ClaimRef is a reference to the claim this IPAddress was created for.
func (o IPAddressSpecOutput) ClaimRef() IPAddressSpecClaimRefOutput {
	return o.ApplyT(func(v IPAddressSpec) IPAddressSpecClaimRef { return v.ClaimRef }).(IPAddressSpecClaimRefOutput)
}

// Gateway is the network gateway of the network the address is from.
func (o IPAddressSpecOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPAddressSpec) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// PoolRef is a reference to the pool that this IPAddress was created from.
func (o IPAddressSpecOutput) PoolRef() IPAddressSpecPoolRefOutput {
	return o.ApplyT(func(v IPAddressSpec) IPAddressSpecPoolRef { return v.PoolRef }).(IPAddressSpecPoolRefOutput)
}

// Prefix is the prefix of the address.
func (o IPAddressSpecOutput) Prefix() pulumi.IntOutput {
	return o.ApplyT(func(v IPAddressSpec) int { return v.Prefix }).(pulumi.IntOutput)
}

type IPAddressSpecPtrOutput struct{ *pulumi.OutputState }

func (IPAddressSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressSpec)(nil)).Elem()
}

func (o IPAddressSpecPtrOutput) ToIPAddressSpecPtrOutput() IPAddressSpecPtrOutput {
	return o
}

func (o IPAddressSpecPtrOutput) ToIPAddressSpecPtrOutputWithContext(ctx context.Context) IPAddressSpecPtrOutput {
	return o
}

func (o IPAddressSpecPtrOutput) Elem() IPAddressSpecOutput {
	return o.ApplyT(func(v *IPAddressSpec) IPAddressSpec {
		if v != nil {
			return *v
		}
		var ret IPAddressSpec
		return ret
	}).(IPAddressSpecOutput)
}

// Address is the IP address.
func (o IPAddressSpecPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPAddressSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// ClaimRef is a reference to the claim this IPAddress was created for.
func (o IPAddressSpecPtrOutput) ClaimRef() IPAddressSpecClaimRefPtrOutput {
	return o.ApplyT(func(v *IPAddressSpec) *IPAddressSpecClaimRef {
		if v == nil {
			return nil
		}
		return &v.ClaimRef
	}).(IPAddressSpecClaimRefPtrOutput)
}

// Gateway is the network gateway of the network the address is from.
func (o IPAddressSpecPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPAddressSpec) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

// PoolRef is a reference to the pool that this IPAddress was created from.
func (o IPAddressSpecPtrOutput) PoolRef() IPAddressSpecPoolRefPtrOutput {
	return o.ApplyT(func(v *IPAddressSpec) *IPAddressSpecPoolRef {
		if v == nil {
			return nil
		}
		return &v.PoolRef
	}).(IPAddressSpecPoolRefPtrOutput)
}

// Prefix is the prefix of the address.
func (o IPAddressSpecPtrOutput) Prefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IPAddressSpec) *int {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.IntPtrOutput)
}

// ClaimRef is a reference to the claim this IPAddress was created for.
type IPAddressSpecClaimRef struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name *string `pulumi:"name"`
}

// IPAddressSpecClaimRefInput is an input type that accepts IPAddressSpecClaimRefArgs and IPAddressSpecClaimRefOutput values.
// You can construct a concrete instance of `IPAddressSpecClaimRefInput` via:
//
//	IPAddressSpecClaimRefArgs{...}
type IPAddressSpecClaimRefInput interface {
	pulumi.Input

	ToIPAddressSpecClaimRefOutput() IPAddressSpecClaimRefOutput
	ToIPAddressSpecClaimRefOutputWithContext(context.Context) IPAddressSpecClaimRefOutput
}

// ClaimRef is a reference to the claim this IPAddress was created for.
type IPAddressSpecClaimRefArgs struct {
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IPAddressSpecClaimRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressSpecClaimRef)(nil)).Elem()
}

func (i IPAddressSpecClaimRefArgs) ToIPAddressSpecClaimRefOutput() IPAddressSpecClaimRefOutput {
	return i.ToIPAddressSpecClaimRefOutputWithContext(context.Background())
}

func (i IPAddressSpecClaimRefArgs) ToIPAddressSpecClaimRefOutputWithContext(ctx context.Context) IPAddressSpecClaimRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressSpecClaimRefOutput)
}

func (i IPAddressSpecClaimRefArgs) ToIPAddressSpecClaimRefPtrOutput() IPAddressSpecClaimRefPtrOutput {
	return i.ToIPAddressSpecClaimRefPtrOutputWithContext(context.Background())
}

func (i IPAddressSpecClaimRefArgs) ToIPAddressSpecClaimRefPtrOutputWithContext(ctx context.Context) IPAddressSpecClaimRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressSpecClaimRefOutput).ToIPAddressSpecClaimRefPtrOutputWithContext(ctx)
}

// IPAddressSpecClaimRefPtrInput is an input type that accepts IPAddressSpecClaimRefArgs, IPAddressSpecClaimRefPtr and IPAddressSpecClaimRefPtrOutput values.
// You can construct a concrete instance of `IPAddressSpecClaimRefPtrInput` via:
//
//	        IPAddressSpecClaimRefArgs{...}
//
//	or:
//
//	        nil
type IPAddressSpecClaimRefPtrInput interface {
	pulumi.Input

	ToIPAddressSpecClaimRefPtrOutput() IPAddressSpecClaimRefPtrOutput
	ToIPAddressSpecClaimRefPtrOutputWithContext(context.Context) IPAddressSpecClaimRefPtrOutput
}

type ipaddressSpecClaimRefPtrType IPAddressSpecClaimRefArgs

func IPAddressSpecClaimRefPtr(v *IPAddressSpecClaimRefArgs) IPAddressSpecClaimRefPtrInput {
	return (*ipaddressSpecClaimRefPtrType)(v)
}

func (*ipaddressSpecClaimRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressSpecClaimRef)(nil)).Elem()
}

func (i *ipaddressSpecClaimRefPtrType) ToIPAddressSpecClaimRefPtrOutput() IPAddressSpecClaimRefPtrOutput {
	return i.ToIPAddressSpecClaimRefPtrOutputWithContext(context.Background())
}

func (i *ipaddressSpecClaimRefPtrType) ToIPAddressSpecClaimRefPtrOutputWithContext(ctx context.Context) IPAddressSpecClaimRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressSpecClaimRefPtrOutput)
}

// ClaimRef is a reference to the claim this IPAddress was created for.
type IPAddressSpecClaimRefOutput struct{ *pulumi.OutputState }

func (IPAddressSpecClaimRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressSpecClaimRef)(nil)).Elem()
}

func (o IPAddressSpecClaimRefOutput) ToIPAddressSpecClaimRefOutput() IPAddressSpecClaimRefOutput {
	return o
}

func (o IPAddressSpecClaimRefOutput) ToIPAddressSpecClaimRefOutputWithContext(ctx context.Context) IPAddressSpecClaimRefOutput {
	return o
}

func (o IPAddressSpecClaimRefOutput) ToIPAddressSpecClaimRefPtrOutput() IPAddressSpecClaimRefPtrOutput {
	return o.ToIPAddressSpecClaimRefPtrOutputWithContext(context.Background())
}

func (o IPAddressSpecClaimRefOutput) ToIPAddressSpecClaimRefPtrOutputWithContext(ctx context.Context) IPAddressSpecClaimRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IPAddressSpecClaimRef) *IPAddressSpecClaimRef {
		return &v
	}).(IPAddressSpecClaimRefPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o IPAddressSpecClaimRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPAddressSpecClaimRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IPAddressSpecClaimRefPtrOutput struct{ *pulumi.OutputState }

func (IPAddressSpecClaimRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressSpecClaimRef)(nil)).Elem()
}

func (o IPAddressSpecClaimRefPtrOutput) ToIPAddressSpecClaimRefPtrOutput() IPAddressSpecClaimRefPtrOutput {
	return o
}

func (o IPAddressSpecClaimRefPtrOutput) ToIPAddressSpecClaimRefPtrOutputWithContext(ctx context.Context) IPAddressSpecClaimRefPtrOutput {
	return o
}

func (o IPAddressSpecClaimRefPtrOutput) Elem() IPAddressSpecClaimRefOutput {
	return o.ApplyT(func(v *IPAddressSpecClaimRef) IPAddressSpecClaimRef {
		if v != nil {
			return *v
		}
		var ret IPAddressSpecClaimRef
		return ret
	}).(IPAddressSpecClaimRefOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
func (o IPAddressSpecClaimRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPAddressSpecClaimRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// PoolRef is a reference to the pool that this IPAddress was created from.
type IPAddressSpecPoolRef struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name string `pulumi:"name"`
}

// IPAddressSpecPoolRefInput is an input type that accepts IPAddressSpecPoolRefArgs and IPAddressSpecPoolRefOutput values.
// You can construct a concrete instance of `IPAddressSpecPoolRefInput` via:
//
//	IPAddressSpecPoolRefArgs{...}
type IPAddressSpecPoolRefInput interface {
	pulumi.Input

	ToIPAddressSpecPoolRefOutput() IPAddressSpecPoolRefOutput
	ToIPAddressSpecPoolRefOutputWithContext(context.Context) IPAddressSpecPoolRefOutput
}

// PoolRef is a reference to the pool that this IPAddress was created from.
type IPAddressSpecPoolRefArgs struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringInput `pulumi:"name"`
}

func (IPAddressSpecPoolRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressSpecPoolRef)(nil)).Elem()
}

func (i IPAddressSpecPoolRefArgs) ToIPAddressSpecPoolRefOutput() IPAddressSpecPoolRefOutput {
	return i.ToIPAddressSpecPoolRefOutputWithContext(context.Background())
}

func (i IPAddressSpecPoolRefArgs) ToIPAddressSpecPoolRefOutputWithContext(ctx context.Context) IPAddressSpecPoolRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressSpecPoolRefOutput)
}

func (i IPAddressSpecPoolRefArgs) ToIPAddressSpecPoolRefPtrOutput() IPAddressSpecPoolRefPtrOutput {
	return i.ToIPAddressSpecPoolRefPtrOutputWithContext(context.Background())
}

func (i IPAddressSpecPoolRefArgs) ToIPAddressSpecPoolRefPtrOutputWithContext(ctx context.Context) IPAddressSpecPoolRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressSpecPoolRefOutput).ToIPAddressSpecPoolRefPtrOutputWithContext(ctx)
}

// IPAddressSpecPoolRefPtrInput is an input type that accepts IPAddressSpecPoolRefArgs, IPAddressSpecPoolRefPtr and IPAddressSpecPoolRefPtrOutput values.
// You can construct a concrete instance of `IPAddressSpecPoolRefPtrInput` via:
//
//	        IPAddressSpecPoolRefArgs{...}
//
//	or:
//
//	        nil
type IPAddressSpecPoolRefPtrInput interface {
	pulumi.Input

	ToIPAddressSpecPoolRefPtrOutput() IPAddressSpecPoolRefPtrOutput
	ToIPAddressSpecPoolRefPtrOutputWithContext(context.Context) IPAddressSpecPoolRefPtrOutput
}

type ipaddressSpecPoolRefPtrType IPAddressSpecPoolRefArgs

func IPAddressSpecPoolRefPtr(v *IPAddressSpecPoolRefArgs) IPAddressSpecPoolRefPtrInput {
	return (*ipaddressSpecPoolRefPtrType)(v)
}

func (*ipaddressSpecPoolRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressSpecPoolRef)(nil)).Elem()
}

func (i *ipaddressSpecPoolRefPtrType) ToIPAddressSpecPoolRefPtrOutput() IPAddressSpecPoolRefPtrOutput {
	return i.ToIPAddressSpecPoolRefPtrOutputWithContext(context.Background())
}

func (i *ipaddressSpecPoolRefPtrType) ToIPAddressSpecPoolRefPtrOutputWithContext(ctx context.Context) IPAddressSpecPoolRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressSpecPoolRefPtrOutput)
}

// PoolRef is a reference to the pool that this IPAddress was created from.
type IPAddressSpecPoolRefOutput struct{ *pulumi.OutputState }

func (IPAddressSpecPoolRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAddressSpecPoolRef)(nil)).Elem()
}

func (o IPAddressSpecPoolRefOutput) ToIPAddressSpecPoolRefOutput() IPAddressSpecPoolRefOutput {
	return o
}

func (o IPAddressSpecPoolRefOutput) ToIPAddressSpecPoolRefOutputWithContext(ctx context.Context) IPAddressSpecPoolRefOutput {
	return o
}

func (o IPAddressSpecPoolRefOutput) ToIPAddressSpecPoolRefPtrOutput() IPAddressSpecPoolRefPtrOutput {
	return o.ToIPAddressSpecPoolRefPtrOutputWithContext(context.Background())
}

func (o IPAddressSpecPoolRefOutput) ToIPAddressSpecPoolRefPtrOutputWithContext(ctx context.Context) IPAddressSpecPoolRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IPAddressSpecPoolRef) *IPAddressSpecPoolRef {
		return &v
	}).(IPAddressSpecPoolRefPtrOutput)
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o IPAddressSpecPoolRefOutput) ApiGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IPAddressSpecPoolRef) string { return v.ApiGroup }).(pulumi.StringOutput)
}

// Kind is the type of resource being referenced
func (o IPAddressSpecPoolRefOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v IPAddressSpecPoolRef) string { return v.Kind }).(pulumi.StringOutput)
}

// Name is the name of resource being referenced
func (o IPAddressSpecPoolRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IPAddressSpecPoolRef) string { return v.Name }).(pulumi.StringOutput)
}

type IPAddressSpecPoolRefPtrOutput struct{ *pulumi.OutputState }

func (IPAddressSpecPoolRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressSpecPoolRef)(nil)).Elem()
}

func (o IPAddressSpecPoolRefPtrOutput) ToIPAddressSpecPoolRefPtrOutput() IPAddressSpecPoolRefPtrOutput {
	return o
}

func (o IPAddressSpecPoolRefPtrOutput) ToIPAddressSpecPoolRefPtrOutputWithContext(ctx context.Context) IPAddressSpecPoolRefPtrOutput {
	return o
}

func (o IPAddressSpecPoolRefPtrOutput) Elem() IPAddressSpecPoolRefOutput {
	return o.ApplyT(func(v *IPAddressSpecPoolRef) IPAddressSpecPoolRef {
		if v != nil {
			return *v
		}
		var ret IPAddressSpecPoolRef
		return ret
	}).(IPAddressSpecPoolRefOutput)
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o IPAddressSpecPoolRefPtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPAddressSpecPoolRef) *string {
		if v == nil {
			return nil
		}
		return &v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o IPAddressSpecPoolRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPAddressSpecPoolRef) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o IPAddressSpecPoolRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPAddressSpecPoolRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressClaimSpecInput)(nil)).Elem(), IPAddressClaimSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressClaimSpecPtrInput)(nil)).Elem(), IPAddressClaimSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressClaimSpecPoolRefInput)(nil)).Elem(), IPAddressClaimSpecPoolRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressClaimSpecPoolRefPtrInput)(nil)).Elem(), IPAddressClaimSpecPoolRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressClaimStatusInput)(nil)).Elem(), IPAddressClaimStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressClaimStatusPtrInput)(nil)).Elem(), IPAddressClaimStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressClaimStatusAddressRefInput)(nil)).Elem(), IPAddressClaimStatusAddressRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressClaimStatusAddressRefPtrInput)(nil)).Elem(), IPAddressClaimStatusAddressRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressClaimStatusConditionsInput)(nil)).Elem(), IPAddressClaimStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressClaimStatusConditionsArrayInput)(nil)).Elem(), IPAddressClaimStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressSpecInput)(nil)).Elem(), IPAddressSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressSpecPtrInput)(nil)).Elem(), IPAddressSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressSpecClaimRefInput)(nil)).Elem(), IPAddressSpecClaimRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressSpecClaimRefPtrInput)(nil)).Elem(), IPAddressSpecClaimRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressSpecPoolRefInput)(nil)).Elem(), IPAddressSpecPoolRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressSpecPoolRefPtrInput)(nil)).Elem(), IPAddressSpecPoolRefArgs{})
	pulumi.RegisterOutputType(IPAddressClaimSpecOutput{})
	pulumi.RegisterOutputType(IPAddressClaimSpecPtrOutput{})
	pulumi.RegisterOutputType(IPAddressClaimSpecPoolRefOutput{})
	pulumi.RegisterOutputType(IPAddressClaimSpecPoolRefPtrOutput{})
	pulumi.RegisterOutputType(IPAddressClaimStatusOutput{})
	pulumi.RegisterOutputType(IPAddressClaimStatusPtrOutput{})
	pulumi.RegisterOutputType(IPAddressClaimStatusAddressRefOutput{})
	pulumi.RegisterOutputType(IPAddressClaimStatusAddressRefPtrOutput{})
	pulumi.RegisterOutputType(IPAddressClaimStatusConditionsOutput{})
	pulumi.RegisterOutputType(IPAddressClaimStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(IPAddressSpecOutput{})
	pulumi.RegisterOutputType(IPAddressSpecPtrOutput{})
	pulumi.RegisterOutputType(IPAddressSpecClaimRefOutput{})
	pulumi.RegisterOutputType(IPAddressSpecClaimRefPtrOutput{})
	pulumi.RegisterOutputType(IPAddressSpecPoolRefOutput{})
	pulumi.RegisterOutputType(IPAddressSpecPoolRefPtrOutput{})
}
