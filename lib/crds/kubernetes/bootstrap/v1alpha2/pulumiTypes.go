// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// TalosConfig is the Schema for the talosconfigs API
type TalosConfigType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TalosConfigSpec defines the desired state of TalosConfig
	Spec *TalosConfigSpec `pulumi:"spec"`
	// TalosConfigStatus defines the observed state of TalosConfig
	Status *TalosConfigStatus `pulumi:"status"`
}

type TalosConfigMetadata struct {
}

// TalosConfigSpec defines the desired state of TalosConfig
type TalosConfigSpec struct {
	Data         *string `pulumi:"data"`
	GenerateType string  `pulumi:"generateType"`
}

// TalosConfigSpecInput is an input type that accepts TalosConfigSpecArgs and TalosConfigSpecOutput values.
// You can construct a concrete instance of `TalosConfigSpecInput` via:
//
//	TalosConfigSpecArgs{...}
type TalosConfigSpecInput interface {
	pulumi.Input

	ToTalosConfigSpecOutput() TalosConfigSpecOutput
	ToTalosConfigSpecOutputWithContext(context.Context) TalosConfigSpecOutput
}

// TalosConfigSpec defines the desired state of TalosConfig
type TalosConfigSpecArgs struct {
	Data         pulumi.StringPtrInput `pulumi:"data"`
	GenerateType pulumi.StringInput    `pulumi:"generateType"`
}

func (TalosConfigSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigSpec)(nil)).Elem()
}

func (i TalosConfigSpecArgs) ToTalosConfigSpecOutput() TalosConfigSpecOutput {
	return i.ToTalosConfigSpecOutputWithContext(context.Background())
}

func (i TalosConfigSpecArgs) ToTalosConfigSpecOutputWithContext(ctx context.Context) TalosConfigSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigSpecOutput)
}

func (i TalosConfigSpecArgs) ToTalosConfigSpecPtrOutput() TalosConfigSpecPtrOutput {
	return i.ToTalosConfigSpecPtrOutputWithContext(context.Background())
}

func (i TalosConfigSpecArgs) ToTalosConfigSpecPtrOutputWithContext(ctx context.Context) TalosConfigSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigSpecOutput).ToTalosConfigSpecPtrOutputWithContext(ctx)
}

// TalosConfigSpecPtrInput is an input type that accepts TalosConfigSpecArgs, TalosConfigSpecPtr and TalosConfigSpecPtrOutput values.
// You can construct a concrete instance of `TalosConfigSpecPtrInput` via:
//
//	        TalosConfigSpecArgs{...}
//
//	or:
//
//	        nil
type TalosConfigSpecPtrInput interface {
	pulumi.Input

	ToTalosConfigSpecPtrOutput() TalosConfigSpecPtrOutput
	ToTalosConfigSpecPtrOutputWithContext(context.Context) TalosConfigSpecPtrOutput
}

type talosConfigSpecPtrType TalosConfigSpecArgs

func TalosConfigSpecPtr(v *TalosConfigSpecArgs) TalosConfigSpecPtrInput {
	return (*talosConfigSpecPtrType)(v)
}

func (*talosConfigSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigSpec)(nil)).Elem()
}

func (i *talosConfigSpecPtrType) ToTalosConfigSpecPtrOutput() TalosConfigSpecPtrOutput {
	return i.ToTalosConfigSpecPtrOutputWithContext(context.Background())
}

func (i *talosConfigSpecPtrType) ToTalosConfigSpecPtrOutputWithContext(ctx context.Context) TalosConfigSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigSpecPtrOutput)
}

// TalosConfigSpec defines the desired state of TalosConfig
type TalosConfigSpecOutput struct{ *pulumi.OutputState }

func (TalosConfigSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigSpec)(nil)).Elem()
}

func (o TalosConfigSpecOutput) ToTalosConfigSpecOutput() TalosConfigSpecOutput {
	return o
}

func (o TalosConfigSpecOutput) ToTalosConfigSpecOutputWithContext(ctx context.Context) TalosConfigSpecOutput {
	return o
}

func (o TalosConfigSpecOutput) ToTalosConfigSpecPtrOutput() TalosConfigSpecPtrOutput {
	return o.ToTalosConfigSpecPtrOutputWithContext(context.Background())
}

func (o TalosConfigSpecOutput) ToTalosConfigSpecPtrOutputWithContext(ctx context.Context) TalosConfigSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TalosConfigSpec) *TalosConfigSpec {
		return &v
	}).(TalosConfigSpecPtrOutput)
}

func (o TalosConfigSpecOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigSpec) *string { return v.Data }).(pulumi.StringPtrOutput)
}

func (o TalosConfigSpecOutput) GenerateType() pulumi.StringOutput {
	return o.ApplyT(func(v TalosConfigSpec) string { return v.GenerateType }).(pulumi.StringOutput)
}

type TalosConfigSpecPtrOutput struct{ *pulumi.OutputState }

func (TalosConfigSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigSpec)(nil)).Elem()
}

func (o TalosConfigSpecPtrOutput) ToTalosConfigSpecPtrOutput() TalosConfigSpecPtrOutput {
	return o
}

func (o TalosConfigSpecPtrOutput) ToTalosConfigSpecPtrOutputWithContext(ctx context.Context) TalosConfigSpecPtrOutput {
	return o
}

func (o TalosConfigSpecPtrOutput) Elem() TalosConfigSpecOutput {
	return o.ApplyT(func(v *TalosConfigSpec) TalosConfigSpec {
		if v != nil {
			return *v
		}
		var ret TalosConfigSpec
		return ret
	}).(TalosConfigSpecOutput)
}

func (o TalosConfigSpecPtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigSpec) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

func (o TalosConfigSpecPtrOutput) GenerateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigSpec) *string {
		if v == nil {
			return nil
		}
		return &v.GenerateType
	}).(pulumi.StringPtrOutput)
}

// TalosConfigStatus defines the observed state of TalosConfig
type TalosConfigStatus struct {
	// BootstrapData will be a slice of bootstrap data
	BootstrapData *string `pulumi:"bootstrapData"`
	// ErrorMessage will be set on non-retryable errors
	ErrorMessage *string `pulumi:"errorMessage"`
	// ErrorReason will be set on non-retryable errors
	ErrorReason *string `pulumi:"errorReason"`
	// Ready indicates the BootstrapData field is ready to be consumed
	Ready *bool `pulumi:"ready"`
	// Talos config will be a string containing the config for download
	TalosConfig *string `pulumi:"talosConfig"`
}

// TalosConfigStatusInput is an input type that accepts TalosConfigStatusArgs and TalosConfigStatusOutput values.
// You can construct a concrete instance of `TalosConfigStatusInput` via:
//
//	TalosConfigStatusArgs{...}
type TalosConfigStatusInput interface {
	pulumi.Input

	ToTalosConfigStatusOutput() TalosConfigStatusOutput
	ToTalosConfigStatusOutputWithContext(context.Context) TalosConfigStatusOutput
}

// TalosConfigStatus defines the observed state of TalosConfig
type TalosConfigStatusArgs struct {
	// BootstrapData will be a slice of bootstrap data
	BootstrapData pulumi.StringPtrInput `pulumi:"bootstrapData"`
	// ErrorMessage will be set on non-retryable errors
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
	// ErrorReason will be set on non-retryable errors
	ErrorReason pulumi.StringPtrInput `pulumi:"errorReason"`
	// Ready indicates the BootstrapData field is ready to be consumed
	Ready pulumi.BoolPtrInput `pulumi:"ready"`
	// Talos config will be a string containing the config for download
	TalosConfig pulumi.StringPtrInput `pulumi:"talosConfig"`
}

func (TalosConfigStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigStatus)(nil)).Elem()
}

func (i TalosConfigStatusArgs) ToTalosConfigStatusOutput() TalosConfigStatusOutput {
	return i.ToTalosConfigStatusOutputWithContext(context.Background())
}

func (i TalosConfigStatusArgs) ToTalosConfigStatusOutputWithContext(ctx context.Context) TalosConfigStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigStatusOutput)
}

func (i TalosConfigStatusArgs) ToTalosConfigStatusPtrOutput() TalosConfigStatusPtrOutput {
	return i.ToTalosConfigStatusPtrOutputWithContext(context.Background())
}

func (i TalosConfigStatusArgs) ToTalosConfigStatusPtrOutputWithContext(ctx context.Context) TalosConfigStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigStatusOutput).ToTalosConfigStatusPtrOutputWithContext(ctx)
}

// TalosConfigStatusPtrInput is an input type that accepts TalosConfigStatusArgs, TalosConfigStatusPtr and TalosConfigStatusPtrOutput values.
// You can construct a concrete instance of `TalosConfigStatusPtrInput` via:
//
//	        TalosConfigStatusArgs{...}
//
//	or:
//
//	        nil
type TalosConfigStatusPtrInput interface {
	pulumi.Input

	ToTalosConfigStatusPtrOutput() TalosConfigStatusPtrOutput
	ToTalosConfigStatusPtrOutputWithContext(context.Context) TalosConfigStatusPtrOutput
}

type talosConfigStatusPtrType TalosConfigStatusArgs

func TalosConfigStatusPtr(v *TalosConfigStatusArgs) TalosConfigStatusPtrInput {
	return (*talosConfigStatusPtrType)(v)
}

func (*talosConfigStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigStatus)(nil)).Elem()
}

func (i *talosConfigStatusPtrType) ToTalosConfigStatusPtrOutput() TalosConfigStatusPtrOutput {
	return i.ToTalosConfigStatusPtrOutputWithContext(context.Background())
}

func (i *talosConfigStatusPtrType) ToTalosConfigStatusPtrOutputWithContext(ctx context.Context) TalosConfigStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigStatusPtrOutput)
}

// TalosConfigStatus defines the observed state of TalosConfig
type TalosConfigStatusOutput struct{ *pulumi.OutputState }

func (TalosConfigStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigStatus)(nil)).Elem()
}

func (o TalosConfigStatusOutput) ToTalosConfigStatusOutput() TalosConfigStatusOutput {
	return o
}

func (o TalosConfigStatusOutput) ToTalosConfigStatusOutputWithContext(ctx context.Context) TalosConfigStatusOutput {
	return o
}

func (o TalosConfigStatusOutput) ToTalosConfigStatusPtrOutput() TalosConfigStatusPtrOutput {
	return o.ToTalosConfigStatusPtrOutputWithContext(context.Background())
}

func (o TalosConfigStatusOutput) ToTalosConfigStatusPtrOutputWithContext(ctx context.Context) TalosConfigStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TalosConfigStatus) *TalosConfigStatus {
		return &v
	}).(TalosConfigStatusPtrOutput)
}

// BootstrapData will be a slice of bootstrap data
func (o TalosConfigStatusOutput) BootstrapData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigStatus) *string { return v.BootstrapData }).(pulumi.StringPtrOutput)
}

// ErrorMessage will be set on non-retryable errors
func (o TalosConfigStatusOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigStatus) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// ErrorReason will be set on non-retryable errors
func (o TalosConfigStatusOutput) ErrorReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigStatus) *string { return v.ErrorReason }).(pulumi.StringPtrOutput)
}

// Ready indicates the BootstrapData field is ready to be consumed
func (o TalosConfigStatusOutput) Ready() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TalosConfigStatus) *bool { return v.Ready }).(pulumi.BoolPtrOutput)
}

// Talos config will be a string containing the config for download
func (o TalosConfigStatusOutput) TalosConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigStatus) *string { return v.TalosConfig }).(pulumi.StringPtrOutput)
}

type TalosConfigStatusPtrOutput struct{ *pulumi.OutputState }

func (TalosConfigStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigStatus)(nil)).Elem()
}

func (o TalosConfigStatusPtrOutput) ToTalosConfigStatusPtrOutput() TalosConfigStatusPtrOutput {
	return o
}

func (o TalosConfigStatusPtrOutput) ToTalosConfigStatusPtrOutputWithContext(ctx context.Context) TalosConfigStatusPtrOutput {
	return o
}

func (o TalosConfigStatusPtrOutput) Elem() TalosConfigStatusOutput {
	return o.ApplyT(func(v *TalosConfigStatus) TalosConfigStatus {
		if v != nil {
			return *v
		}
		var ret TalosConfigStatus
		return ret
	}).(TalosConfigStatusOutput)
}

// BootstrapData will be a slice of bootstrap data
func (o TalosConfigStatusPtrOutput) BootstrapData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigStatus) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapData
	}).(pulumi.StringPtrOutput)
}

// ErrorMessage will be set on non-retryable errors
func (o TalosConfigStatusPtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigStatus) *string {
		if v == nil {
			return nil
		}
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

// ErrorReason will be set on non-retryable errors
func (o TalosConfigStatusPtrOutput) ErrorReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigStatus) *string {
		if v == nil {
			return nil
		}
		return v.ErrorReason
	}).(pulumi.StringPtrOutput)
}

// Ready indicates the BootstrapData field is ready to be consumed
func (o TalosConfigStatusPtrOutput) Ready() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TalosConfigStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Ready
	}).(pulumi.BoolPtrOutput)
}

// Talos config will be a string containing the config for download
func (o TalosConfigStatusPtrOutput) TalosConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigStatus) *string {
		if v == nil {
			return nil
		}
		return v.TalosConfig
	}).(pulumi.StringPtrOutput)
}

// TalosConfigTemplate is the Schema for the talosconfigtemplates API
type TalosConfigTemplateType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TalosConfigTemplateSpec defines the desired state of TalosConfigTemplate
	Spec *TalosConfigTemplateSpec `pulumi:"spec"`
}

type TalosConfigTemplateMetadata struct {
}

// TalosConfigTemplateSpec defines the desired state of TalosConfigTemplate
type TalosConfigTemplateSpec struct {
	// TalosConfigTemplateResource defines the Template structure
	Template TalosConfigTemplateSpecTemplate `pulumi:"template"`
}

// TalosConfigTemplateSpecInput is an input type that accepts TalosConfigTemplateSpecArgs and TalosConfigTemplateSpecOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecInput` via:
//
//	TalosConfigTemplateSpecArgs{...}
type TalosConfigTemplateSpecInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecOutput() TalosConfigTemplateSpecOutput
	ToTalosConfigTemplateSpecOutputWithContext(context.Context) TalosConfigTemplateSpecOutput
}

// TalosConfigTemplateSpec defines the desired state of TalosConfigTemplate
type TalosConfigTemplateSpecArgs struct {
	// TalosConfigTemplateResource defines the Template structure
	Template TalosConfigTemplateSpecTemplateInput `pulumi:"template"`
}

func (TalosConfigTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpec)(nil)).Elem()
}

func (i TalosConfigTemplateSpecArgs) ToTalosConfigTemplateSpecOutput() TalosConfigTemplateSpecOutput {
	return i.ToTalosConfigTemplateSpecOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecArgs) ToTalosConfigTemplateSpecOutputWithContext(ctx context.Context) TalosConfigTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecOutput)
}

func (i TalosConfigTemplateSpecArgs) ToTalosConfigTemplateSpecPtrOutput() TalosConfigTemplateSpecPtrOutput {
	return i.ToTalosConfigTemplateSpecPtrOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecArgs) ToTalosConfigTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecOutput).ToTalosConfigTemplateSpecPtrOutputWithContext(ctx)
}

// TalosConfigTemplateSpecPtrInput is an input type that accepts TalosConfigTemplateSpecArgs, TalosConfigTemplateSpecPtr and TalosConfigTemplateSpecPtrOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecPtrInput` via:
//
//	        TalosConfigTemplateSpecArgs{...}
//
//	or:
//
//	        nil
type TalosConfigTemplateSpecPtrInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecPtrOutput() TalosConfigTemplateSpecPtrOutput
	ToTalosConfigTemplateSpecPtrOutputWithContext(context.Context) TalosConfigTemplateSpecPtrOutput
}

type talosConfigTemplateSpecPtrType TalosConfigTemplateSpecArgs

func TalosConfigTemplateSpecPtr(v *TalosConfigTemplateSpecArgs) TalosConfigTemplateSpecPtrInput {
	return (*talosConfigTemplateSpecPtrType)(v)
}

func (*talosConfigTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpec)(nil)).Elem()
}

func (i *talosConfigTemplateSpecPtrType) ToTalosConfigTemplateSpecPtrOutput() TalosConfigTemplateSpecPtrOutput {
	return i.ToTalosConfigTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *talosConfigTemplateSpecPtrType) ToTalosConfigTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecPtrOutput)
}

// TalosConfigTemplateSpec defines the desired state of TalosConfigTemplate
type TalosConfigTemplateSpecOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpec)(nil)).Elem()
}

func (o TalosConfigTemplateSpecOutput) ToTalosConfigTemplateSpecOutput() TalosConfigTemplateSpecOutput {
	return o
}

func (o TalosConfigTemplateSpecOutput) ToTalosConfigTemplateSpecOutputWithContext(ctx context.Context) TalosConfigTemplateSpecOutput {
	return o
}

func (o TalosConfigTemplateSpecOutput) ToTalosConfigTemplateSpecPtrOutput() TalosConfigTemplateSpecPtrOutput {
	return o.ToTalosConfigTemplateSpecPtrOutputWithContext(context.Background())
}

func (o TalosConfigTemplateSpecOutput) ToTalosConfigTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TalosConfigTemplateSpec) *TalosConfigTemplateSpec {
		return &v
	}).(TalosConfigTemplateSpecPtrOutput)
}

// TalosConfigTemplateResource defines the Template structure
func (o TalosConfigTemplateSpecOutput) Template() TalosConfigTemplateSpecTemplateOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpec) TalosConfigTemplateSpecTemplate { return v.Template }).(TalosConfigTemplateSpecTemplateOutput)
}

type TalosConfigTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpec)(nil)).Elem()
}

func (o TalosConfigTemplateSpecPtrOutput) ToTalosConfigTemplateSpecPtrOutput() TalosConfigTemplateSpecPtrOutput {
	return o
}

func (o TalosConfigTemplateSpecPtrOutput) ToTalosConfigTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecPtrOutput {
	return o
}

func (o TalosConfigTemplateSpecPtrOutput) Elem() TalosConfigTemplateSpecOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpec) TalosConfigTemplateSpec {
		if v != nil {
			return *v
		}
		var ret TalosConfigTemplateSpec
		return ret
	}).(TalosConfigTemplateSpecOutput)
}

// TalosConfigTemplateResource defines the Template structure
func (o TalosConfigTemplateSpecPtrOutput) Template() TalosConfigTemplateSpecTemplatePtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpec) *TalosConfigTemplateSpecTemplate {
		if v == nil {
			return nil
		}
		return &v.Template
	}).(TalosConfigTemplateSpecTemplatePtrOutput)
}

// TalosConfigTemplateResource defines the Template structure
type TalosConfigTemplateSpecTemplate struct {
	// TalosConfigSpec defines the desired state of TalosConfig
	Spec *TalosConfigTemplateSpecTemplateSpec `pulumi:"spec"`
}

// TalosConfigTemplateSpecTemplateInput is an input type that accepts TalosConfigTemplateSpecTemplateArgs and TalosConfigTemplateSpecTemplateOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecTemplateInput` via:
//
//	TalosConfigTemplateSpecTemplateArgs{...}
type TalosConfigTemplateSpecTemplateInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecTemplateOutput() TalosConfigTemplateSpecTemplateOutput
	ToTalosConfigTemplateSpecTemplateOutputWithContext(context.Context) TalosConfigTemplateSpecTemplateOutput
}

// TalosConfigTemplateResource defines the Template structure
type TalosConfigTemplateSpecTemplateArgs struct {
	// TalosConfigSpec defines the desired state of TalosConfig
	Spec TalosConfigTemplateSpecTemplateSpecPtrInput `pulumi:"spec"`
}

func (TalosConfigTemplateSpecTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpecTemplate)(nil)).Elem()
}

func (i TalosConfigTemplateSpecTemplateArgs) ToTalosConfigTemplateSpecTemplateOutput() TalosConfigTemplateSpecTemplateOutput {
	return i.ToTalosConfigTemplateSpecTemplateOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecTemplateArgs) ToTalosConfigTemplateSpecTemplateOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateOutput)
}

func (i TalosConfigTemplateSpecTemplateArgs) ToTalosConfigTemplateSpecTemplatePtrOutput() TalosConfigTemplateSpecTemplatePtrOutput {
	return i.ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecTemplateArgs) ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateOutput).ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(ctx)
}

// TalosConfigTemplateSpecTemplatePtrInput is an input type that accepts TalosConfigTemplateSpecTemplateArgs, TalosConfigTemplateSpecTemplatePtr and TalosConfigTemplateSpecTemplatePtrOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecTemplatePtrInput` via:
//
//	        TalosConfigTemplateSpecTemplateArgs{...}
//
//	or:
//
//	        nil
type TalosConfigTemplateSpecTemplatePtrInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecTemplatePtrOutput() TalosConfigTemplateSpecTemplatePtrOutput
	ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(context.Context) TalosConfigTemplateSpecTemplatePtrOutput
}

type talosConfigTemplateSpecTemplatePtrType TalosConfigTemplateSpecTemplateArgs

func TalosConfigTemplateSpecTemplatePtr(v *TalosConfigTemplateSpecTemplateArgs) TalosConfigTemplateSpecTemplatePtrInput {
	return (*talosConfigTemplateSpecTemplatePtrType)(v)
}

func (*talosConfigTemplateSpecTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpecTemplate)(nil)).Elem()
}

func (i *talosConfigTemplateSpecTemplatePtrType) ToTalosConfigTemplateSpecTemplatePtrOutput() TalosConfigTemplateSpecTemplatePtrOutput {
	return i.ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(context.Background())
}

func (i *talosConfigTemplateSpecTemplatePtrType) ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplatePtrOutput)
}

// TalosConfigTemplateResource defines the Template structure
type TalosConfigTemplateSpecTemplateOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpecTemplate)(nil)).Elem()
}

func (o TalosConfigTemplateSpecTemplateOutput) ToTalosConfigTemplateSpecTemplateOutput() TalosConfigTemplateSpecTemplateOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateOutput) ToTalosConfigTemplateSpecTemplateOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateOutput) ToTalosConfigTemplateSpecTemplatePtrOutput() TalosConfigTemplateSpecTemplatePtrOutput {
	return o.ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(context.Background())
}

func (o TalosConfigTemplateSpecTemplateOutput) ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TalosConfigTemplateSpecTemplate) *TalosConfigTemplateSpecTemplate {
		return &v
	}).(TalosConfigTemplateSpecTemplatePtrOutput)
}

// TalosConfigSpec defines the desired state of TalosConfig
func (o TalosConfigTemplateSpecTemplateOutput) Spec() TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpecTemplate) *TalosConfigTemplateSpecTemplateSpec { return v.Spec }).(TalosConfigTemplateSpecTemplateSpecPtrOutput)
}

type TalosConfigTemplateSpecTemplatePtrOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpecTemplate)(nil)).Elem()
}

func (o TalosConfigTemplateSpecTemplatePtrOutput) ToTalosConfigTemplateSpecTemplatePtrOutput() TalosConfigTemplateSpecTemplatePtrOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplatePtrOutput) ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplatePtrOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplatePtrOutput) Elem() TalosConfigTemplateSpecTemplateOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplate) TalosConfigTemplateSpecTemplate {
		if v != nil {
			return *v
		}
		var ret TalosConfigTemplateSpecTemplate
		return ret
	}).(TalosConfigTemplateSpecTemplateOutput)
}

// TalosConfigSpec defines the desired state of TalosConfig
func (o TalosConfigTemplateSpecTemplatePtrOutput) Spec() TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplate) *TalosConfigTemplateSpecTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(TalosConfigTemplateSpecTemplateSpecPtrOutput)
}

// TalosConfigSpec defines the desired state of TalosConfig
type TalosConfigTemplateSpecTemplateSpec struct {
	Data         *string `pulumi:"data"`
	GenerateType string  `pulumi:"generateType"`
}

// TalosConfigTemplateSpecTemplateSpecInput is an input type that accepts TalosConfigTemplateSpecTemplateSpecArgs and TalosConfigTemplateSpecTemplateSpecOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecTemplateSpecInput` via:
//
//	TalosConfigTemplateSpecTemplateSpecArgs{...}
type TalosConfigTemplateSpecTemplateSpecInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecTemplateSpecOutput() TalosConfigTemplateSpecTemplateSpecOutput
	ToTalosConfigTemplateSpecTemplateSpecOutputWithContext(context.Context) TalosConfigTemplateSpecTemplateSpecOutput
}

// TalosConfigSpec defines the desired state of TalosConfig
type TalosConfigTemplateSpecTemplateSpecArgs struct {
	Data         pulumi.StringPtrInput `pulumi:"data"`
	GenerateType pulumi.StringInput    `pulumi:"generateType"`
}

func (TalosConfigTemplateSpecTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpec)(nil)).Elem()
}

func (i TalosConfigTemplateSpecTemplateSpecArgs) ToTalosConfigTemplateSpecTemplateSpecOutput() TalosConfigTemplateSpecTemplateSpecOutput {
	return i.ToTalosConfigTemplateSpecTemplateSpecOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecTemplateSpecArgs) ToTalosConfigTemplateSpecTemplateSpecOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateSpecOutput)
}

func (i TalosConfigTemplateSpecTemplateSpecArgs) ToTalosConfigTemplateSpecTemplateSpecPtrOutput() TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return i.ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecTemplateSpecArgs) ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateSpecOutput).ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(ctx)
}

// TalosConfigTemplateSpecTemplateSpecPtrInput is an input type that accepts TalosConfigTemplateSpecTemplateSpecArgs, TalosConfigTemplateSpecTemplateSpecPtr and TalosConfigTemplateSpecTemplateSpecPtrOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecTemplateSpecPtrInput` via:
//
//	        TalosConfigTemplateSpecTemplateSpecArgs{...}
//
//	or:
//
//	        nil
type TalosConfigTemplateSpecTemplateSpecPtrInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecTemplateSpecPtrOutput() TalosConfigTemplateSpecTemplateSpecPtrOutput
	ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(context.Context) TalosConfigTemplateSpecTemplateSpecPtrOutput
}

type talosConfigTemplateSpecTemplateSpecPtrType TalosConfigTemplateSpecTemplateSpecArgs

func TalosConfigTemplateSpecTemplateSpecPtr(v *TalosConfigTemplateSpecTemplateSpecArgs) TalosConfigTemplateSpecTemplateSpecPtrInput {
	return (*talosConfigTemplateSpecTemplateSpecPtrType)(v)
}

func (*talosConfigTemplateSpecTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpecTemplateSpec)(nil)).Elem()
}

func (i *talosConfigTemplateSpecTemplateSpecPtrType) ToTalosConfigTemplateSpecTemplateSpecPtrOutput() TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return i.ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *talosConfigTemplateSpecTemplateSpecPtrType) ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateSpecPtrOutput)
}

// TalosConfigSpec defines the desired state of TalosConfig
type TalosConfigTemplateSpecTemplateSpecOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpec)(nil)).Elem()
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) ToTalosConfigTemplateSpecTemplateSpecOutput() TalosConfigTemplateSpecTemplateSpecOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) ToTalosConfigTemplateSpecTemplateSpecOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) ToTalosConfigTemplateSpecTemplateSpecPtrOutput() TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return o.ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TalosConfigTemplateSpecTemplateSpec) *TalosConfigTemplateSpecTemplateSpec {
		return &v
	}).(TalosConfigTemplateSpecTemplateSpecPtrOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpecTemplateSpec) *string { return v.Data }).(pulumi.StringPtrOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) GenerateType() pulumi.StringOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpecTemplateSpec) string { return v.GenerateType }).(pulumi.StringOutput)
}

type TalosConfigTemplateSpecTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpecTemplateSpec)(nil)).Elem()
}

func (o TalosConfigTemplateSpecTemplateSpecPtrOutput) ToTalosConfigTemplateSpecTemplateSpecPtrOutput() TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecPtrOutput) ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecPtrOutput) Elem() TalosConfigTemplateSpecTemplateSpecOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplateSpec) TalosConfigTemplateSpecTemplateSpec {
		if v != nil {
			return *v
		}
		var ret TalosConfigTemplateSpecTemplateSpec
		return ret
	}).(TalosConfigTemplateSpecTemplateSpecOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecPtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecPtrOutput) GenerateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return &v.GenerateType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigSpecInput)(nil)).Elem(), TalosConfigSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigSpecPtrInput)(nil)).Elem(), TalosConfigSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigStatusInput)(nil)).Elem(), TalosConfigStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigStatusPtrInput)(nil)).Elem(), TalosConfigStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecInput)(nil)).Elem(), TalosConfigTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecPtrInput)(nil)).Elem(), TalosConfigTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecTemplateInput)(nil)).Elem(), TalosConfigTemplateSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecTemplatePtrInput)(nil)).Elem(), TalosConfigTemplateSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpecInput)(nil)).Elem(), TalosConfigTemplateSpecTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpecPtrInput)(nil)).Elem(), TalosConfigTemplateSpecTemplateSpecArgs{})
	pulumi.RegisterOutputType(TalosConfigSpecOutput{})
	pulumi.RegisterOutputType(TalosConfigSpecPtrOutput{})
	pulumi.RegisterOutputType(TalosConfigStatusOutput{})
	pulumi.RegisterOutputType(TalosConfigStatusPtrOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecTemplateOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecTemplatePtrOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecTemplateSpecOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecTemplateSpecPtrOutput{})
}
