// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// TalosConfig is the Schema for the talosconfigs API
type TalosConfig struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// TalosConfigSpec defines the desired state of TalosConfig
	Spec TalosConfigSpecPtrOutput `pulumi:"spec"`
	// TalosConfigStatus defines the observed state of TalosConfig
	Status TalosConfigStatusPtrOutput `pulumi:"status"`
}

// NewTalosConfig registers a new resource with the given unique name, arguments, and options.
func NewTalosConfig(ctx *pulumi.Context,
	name string, args *TalosConfigArgs, opts ...pulumi.ResourceOption) (*TalosConfig, error) {
	if args == nil {
		args = &TalosConfigArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("bootstrap.cluster.x-k8s.io/v1alpha2")
	args.Kind = pulumi.StringPtr("TalosConfig")
	var resource TalosConfig
	err := ctx.RegisterResource("kubernetes:bootstrap.cluster.x-k8s.io/v1alpha2:TalosConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTalosConfig gets an existing TalosConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTalosConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TalosConfigState, opts ...pulumi.ResourceOption) (*TalosConfig, error) {
	var resource TalosConfig
	err := ctx.ReadResource("kubernetes:bootstrap.cluster.x-k8s.io/v1alpha2:TalosConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TalosConfig resources.
type talosConfigState struct {
}

type TalosConfigState struct {
}

func (TalosConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*talosConfigState)(nil)).Elem()
}

type talosConfigArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TalosConfigSpec defines the desired state of TalosConfig
	Spec *TalosConfigSpec `pulumi:"spec"`
	// TalosConfigStatus defines the observed state of TalosConfig
	Status *TalosConfigStatus `pulumi:"status"`
}

// The set of arguments for constructing a TalosConfig resource.
type TalosConfigArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// TalosConfigSpec defines the desired state of TalosConfig
	Spec TalosConfigSpecPtrInput
	// TalosConfigStatus defines the observed state of TalosConfig
	Status TalosConfigStatusPtrInput
}

func (TalosConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*talosConfigArgs)(nil)).Elem()
}

type TalosConfigInput interface {
	pulumi.Input

	ToTalosConfigOutput() TalosConfigOutput
	ToTalosConfigOutputWithContext(ctx context.Context) TalosConfigOutput
}

func (*TalosConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfig)(nil)).Elem()
}

func (i *TalosConfig) ToTalosConfigOutput() TalosConfigOutput {
	return i.ToTalosConfigOutputWithContext(context.Background())
}

func (i *TalosConfig) ToTalosConfigOutputWithContext(ctx context.Context) TalosConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigOutput)
}

type TalosConfigOutput struct{ *pulumi.OutputState }

func (TalosConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfig)(nil)).Elem()
}

func (o TalosConfigOutput) ToTalosConfigOutput() TalosConfigOutput {
	return o
}

func (o TalosConfigOutput) ToTalosConfigOutputWithContext(ctx context.Context) TalosConfigOutput {
	return o
}

func (o TalosConfigOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfig) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o TalosConfigOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfig) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o TalosConfigOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *TalosConfig) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// TalosConfigSpec defines the desired state of TalosConfig
func (o TalosConfigOutput) Spec() TalosConfigSpecPtrOutput {
	return o.ApplyT(func(v *TalosConfig) TalosConfigSpecPtrOutput { return v.Spec }).(TalosConfigSpecPtrOutput)
}

// TalosConfigStatus defines the observed state of TalosConfig
func (o TalosConfigOutput) Status() TalosConfigStatusPtrOutput {
	return o.ApplyT(func(v *TalosConfig) TalosConfigStatusPtrOutput { return v.Status }).(TalosConfigStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigInput)(nil)).Elem(), &TalosConfig{})
	pulumi.RegisterOutputType(TalosConfigOutput{})
}
