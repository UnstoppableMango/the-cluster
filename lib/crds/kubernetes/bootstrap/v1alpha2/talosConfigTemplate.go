// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// TalosConfigTemplate is the Schema for the talosconfigtemplates API
type TalosConfigTemplate struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// TalosConfigTemplateSpec defines the desired state of TalosConfigTemplate
	Spec TalosConfigTemplateSpecPtrOutput `pulumi:"spec"`
}

// NewTalosConfigTemplate registers a new resource with the given unique name, arguments, and options.
func NewTalosConfigTemplate(ctx *pulumi.Context,
	name string, args *TalosConfigTemplateArgs, opts ...pulumi.ResourceOption) (*TalosConfigTemplate, error) {
	if args == nil {
		args = &TalosConfigTemplateArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("bootstrap.cluster.x-k8s.io/v1alpha2")
	args.Kind = pulumi.StringPtr("TalosConfigTemplate")
	var resource TalosConfigTemplate
	err := ctx.RegisterResource("kubernetes:bootstrap.cluster.x-k8s.io/v1alpha2:TalosConfigTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTalosConfigTemplate gets an existing TalosConfigTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTalosConfigTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TalosConfigTemplateState, opts ...pulumi.ResourceOption) (*TalosConfigTemplate, error) {
	var resource TalosConfigTemplate
	err := ctx.ReadResource("kubernetes:bootstrap.cluster.x-k8s.io/v1alpha2:TalosConfigTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TalosConfigTemplate resources.
type talosConfigTemplateState struct {
}

type TalosConfigTemplateState struct {
}

func (TalosConfigTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*talosConfigTemplateState)(nil)).Elem()
}

type talosConfigTemplateArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TalosConfigTemplateSpec defines the desired state of TalosConfigTemplate
	Spec *TalosConfigTemplateSpec `pulumi:"spec"`
}

// The set of arguments for constructing a TalosConfigTemplate resource.
type TalosConfigTemplateArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// TalosConfigTemplateSpec defines the desired state of TalosConfigTemplate
	Spec TalosConfigTemplateSpecPtrInput
}

func (TalosConfigTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*talosConfigTemplateArgs)(nil)).Elem()
}

type TalosConfigTemplateInput interface {
	pulumi.Input

	ToTalosConfigTemplateOutput() TalosConfigTemplateOutput
	ToTalosConfigTemplateOutputWithContext(ctx context.Context) TalosConfigTemplateOutput
}

func (*TalosConfigTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplate)(nil)).Elem()
}

func (i *TalosConfigTemplate) ToTalosConfigTemplateOutput() TalosConfigTemplateOutput {
	return i.ToTalosConfigTemplateOutputWithContext(context.Background())
}

func (i *TalosConfigTemplate) ToTalosConfigTemplateOutputWithContext(ctx context.Context) TalosConfigTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateOutput)
}

type TalosConfigTemplateOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplate)(nil)).Elem()
}

func (o TalosConfigTemplateOutput) ToTalosConfigTemplateOutput() TalosConfigTemplateOutput {
	return o
}

func (o TalosConfigTemplateOutput) ToTalosConfigTemplateOutputWithContext(ctx context.Context) TalosConfigTemplateOutput {
	return o
}

func (o TalosConfigTemplateOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplate) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o TalosConfigTemplateOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplate) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o TalosConfigTemplateOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplate) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// TalosConfigTemplateSpec defines the desired state of TalosConfigTemplate
func (o TalosConfigTemplateOutput) Spec() TalosConfigTemplateSpecPtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplate) TalosConfigTemplateSpecPtrOutput { return v.Spec }).(TalosConfigTemplateSpecPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateInput)(nil)).Elem(), &TalosConfigTemplate{})
	pulumi.RegisterOutputType(TalosConfigTemplateOutput{})
}
