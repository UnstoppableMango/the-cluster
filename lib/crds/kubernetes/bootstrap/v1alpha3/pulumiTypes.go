// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha3

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// TalosConfig is the Schema for the talosconfigs API
type TalosConfigType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TalosConfigSpec defines the desired state of TalosConfig
	Spec *TalosConfigSpec `pulumi:"spec"`
	// TalosConfigStatus defines the observed state of TalosConfig
	Status *TalosConfigStatus `pulumi:"status"`
}

type TalosConfigMetadata struct {
}

// TalosConfigSpec defines the desired state of TalosConfig
type TalosConfigSpec struct {
	ConfigPatches []TalosConfigSpecConfigPatches `pulumi:"configPatches"`
	Data          *string                        `pulumi:"data"`
	GenerateType  string                         `pulumi:"generateType"`
	// Set hostname in the machine configuration to some value.
	Hostname     *TalosConfigSpecHostname `pulumi:"hostname"`
	TalosVersion *string                  `pulumi:"talosVersion"`
}

// TalosConfigSpecInput is an input type that accepts TalosConfigSpecArgs and TalosConfigSpecOutput values.
// You can construct a concrete instance of `TalosConfigSpecInput` via:
//
//	TalosConfigSpecArgs{...}
type TalosConfigSpecInput interface {
	pulumi.Input

	ToTalosConfigSpecOutput() TalosConfigSpecOutput
	ToTalosConfigSpecOutputWithContext(context.Context) TalosConfigSpecOutput
}

// TalosConfigSpec defines the desired state of TalosConfig
type TalosConfigSpecArgs struct {
	ConfigPatches TalosConfigSpecConfigPatchesArrayInput `pulumi:"configPatches"`
	Data          pulumi.StringPtrInput                  `pulumi:"data"`
	GenerateType  pulumi.StringInput                     `pulumi:"generateType"`
	// Set hostname in the machine configuration to some value.
	Hostname     TalosConfigSpecHostnamePtrInput `pulumi:"hostname"`
	TalosVersion pulumi.StringPtrInput           `pulumi:"talosVersion"`
}

func (TalosConfigSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigSpec)(nil)).Elem()
}

func (i TalosConfigSpecArgs) ToTalosConfigSpecOutput() TalosConfigSpecOutput {
	return i.ToTalosConfigSpecOutputWithContext(context.Background())
}

func (i TalosConfigSpecArgs) ToTalosConfigSpecOutputWithContext(ctx context.Context) TalosConfigSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigSpecOutput)
}

func (i TalosConfigSpecArgs) ToTalosConfigSpecPtrOutput() TalosConfigSpecPtrOutput {
	return i.ToTalosConfigSpecPtrOutputWithContext(context.Background())
}

func (i TalosConfigSpecArgs) ToTalosConfigSpecPtrOutputWithContext(ctx context.Context) TalosConfigSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigSpecOutput).ToTalosConfigSpecPtrOutputWithContext(ctx)
}

// TalosConfigSpecPtrInput is an input type that accepts TalosConfigSpecArgs, TalosConfigSpecPtr and TalosConfigSpecPtrOutput values.
// You can construct a concrete instance of `TalosConfigSpecPtrInput` via:
//
//	        TalosConfigSpecArgs{...}
//
//	or:
//
//	        nil
type TalosConfigSpecPtrInput interface {
	pulumi.Input

	ToTalosConfigSpecPtrOutput() TalosConfigSpecPtrOutput
	ToTalosConfigSpecPtrOutputWithContext(context.Context) TalosConfigSpecPtrOutput
}

type talosConfigSpecPtrType TalosConfigSpecArgs

func TalosConfigSpecPtr(v *TalosConfigSpecArgs) TalosConfigSpecPtrInput {
	return (*talosConfigSpecPtrType)(v)
}

func (*talosConfigSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigSpec)(nil)).Elem()
}

func (i *talosConfigSpecPtrType) ToTalosConfigSpecPtrOutput() TalosConfigSpecPtrOutput {
	return i.ToTalosConfigSpecPtrOutputWithContext(context.Background())
}

func (i *talosConfigSpecPtrType) ToTalosConfigSpecPtrOutputWithContext(ctx context.Context) TalosConfigSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigSpecPtrOutput)
}

// TalosConfigSpec defines the desired state of TalosConfig
type TalosConfigSpecOutput struct{ *pulumi.OutputState }

func (TalosConfigSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigSpec)(nil)).Elem()
}

func (o TalosConfigSpecOutput) ToTalosConfigSpecOutput() TalosConfigSpecOutput {
	return o
}

func (o TalosConfigSpecOutput) ToTalosConfigSpecOutputWithContext(ctx context.Context) TalosConfigSpecOutput {
	return o
}

func (o TalosConfigSpecOutput) ToTalosConfigSpecPtrOutput() TalosConfigSpecPtrOutput {
	return o.ToTalosConfigSpecPtrOutputWithContext(context.Background())
}

func (o TalosConfigSpecOutput) ToTalosConfigSpecPtrOutputWithContext(ctx context.Context) TalosConfigSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TalosConfigSpec) *TalosConfigSpec {
		return &v
	}).(TalosConfigSpecPtrOutput)
}

func (o TalosConfigSpecOutput) ConfigPatches() TalosConfigSpecConfigPatchesArrayOutput {
	return o.ApplyT(func(v TalosConfigSpec) []TalosConfigSpecConfigPatches { return v.ConfigPatches }).(TalosConfigSpecConfigPatchesArrayOutput)
}

func (o TalosConfigSpecOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigSpec) *string { return v.Data }).(pulumi.StringPtrOutput)
}

func (o TalosConfigSpecOutput) GenerateType() pulumi.StringOutput {
	return o.ApplyT(func(v TalosConfigSpec) string { return v.GenerateType }).(pulumi.StringOutput)
}

// Set hostname in the machine configuration to some value.
func (o TalosConfigSpecOutput) Hostname() TalosConfigSpecHostnamePtrOutput {
	return o.ApplyT(func(v TalosConfigSpec) *TalosConfigSpecHostname { return v.Hostname }).(TalosConfigSpecHostnamePtrOutput)
}

func (o TalosConfigSpecOutput) TalosVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigSpec) *string { return v.TalosVersion }).(pulumi.StringPtrOutput)
}

type TalosConfigSpecPtrOutput struct{ *pulumi.OutputState }

func (TalosConfigSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigSpec)(nil)).Elem()
}

func (o TalosConfigSpecPtrOutput) ToTalosConfigSpecPtrOutput() TalosConfigSpecPtrOutput {
	return o
}

func (o TalosConfigSpecPtrOutput) ToTalosConfigSpecPtrOutputWithContext(ctx context.Context) TalosConfigSpecPtrOutput {
	return o
}

func (o TalosConfigSpecPtrOutput) Elem() TalosConfigSpecOutput {
	return o.ApplyT(func(v *TalosConfigSpec) TalosConfigSpec {
		if v != nil {
			return *v
		}
		var ret TalosConfigSpec
		return ret
	}).(TalosConfigSpecOutput)
}

func (o TalosConfigSpecPtrOutput) ConfigPatches() TalosConfigSpecConfigPatchesArrayOutput {
	return o.ApplyT(func(v *TalosConfigSpec) []TalosConfigSpecConfigPatches {
		if v == nil {
			return nil
		}
		return v.ConfigPatches
	}).(TalosConfigSpecConfigPatchesArrayOutput)
}

func (o TalosConfigSpecPtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigSpec) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

func (o TalosConfigSpecPtrOutput) GenerateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigSpec) *string {
		if v == nil {
			return nil
		}
		return &v.GenerateType
	}).(pulumi.StringPtrOutput)
}

// Set hostname in the machine configuration to some value.
func (o TalosConfigSpecPtrOutput) Hostname() TalosConfigSpecHostnamePtrOutput {
	return o.ApplyT(func(v *TalosConfigSpec) *TalosConfigSpecHostname {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(TalosConfigSpecHostnamePtrOutput)
}

func (o TalosConfigSpecPtrOutput) TalosVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigSpec) *string {
		if v == nil {
			return nil
		}
		return v.TalosVersion
	}).(pulumi.StringPtrOutput)
}

type TalosConfigSpecConfigPatches struct {
	Op    string                 `pulumi:"op"`
	Path  string                 `pulumi:"path"`
	Value map[string]interface{} `pulumi:"value"`
}

// TalosConfigSpecConfigPatchesInput is an input type that accepts TalosConfigSpecConfigPatchesArgs and TalosConfigSpecConfigPatchesOutput values.
// You can construct a concrete instance of `TalosConfigSpecConfigPatchesInput` via:
//
//	TalosConfigSpecConfigPatchesArgs{...}
type TalosConfigSpecConfigPatchesInput interface {
	pulumi.Input

	ToTalosConfigSpecConfigPatchesOutput() TalosConfigSpecConfigPatchesOutput
	ToTalosConfigSpecConfigPatchesOutputWithContext(context.Context) TalosConfigSpecConfigPatchesOutput
}

type TalosConfigSpecConfigPatchesArgs struct {
	Op    pulumi.StringInput `pulumi:"op"`
	Path  pulumi.StringInput `pulumi:"path"`
	Value pulumi.MapInput    `pulumi:"value"`
}

func (TalosConfigSpecConfigPatchesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigSpecConfigPatches)(nil)).Elem()
}

func (i TalosConfigSpecConfigPatchesArgs) ToTalosConfigSpecConfigPatchesOutput() TalosConfigSpecConfigPatchesOutput {
	return i.ToTalosConfigSpecConfigPatchesOutputWithContext(context.Background())
}

func (i TalosConfigSpecConfigPatchesArgs) ToTalosConfigSpecConfigPatchesOutputWithContext(ctx context.Context) TalosConfigSpecConfigPatchesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigSpecConfigPatchesOutput)
}

// TalosConfigSpecConfigPatchesArrayInput is an input type that accepts TalosConfigSpecConfigPatchesArray and TalosConfigSpecConfigPatchesArrayOutput values.
// You can construct a concrete instance of `TalosConfigSpecConfigPatchesArrayInput` via:
//
//	TalosConfigSpecConfigPatchesArray{ TalosConfigSpecConfigPatchesArgs{...} }
type TalosConfigSpecConfigPatchesArrayInput interface {
	pulumi.Input

	ToTalosConfigSpecConfigPatchesArrayOutput() TalosConfigSpecConfigPatchesArrayOutput
	ToTalosConfigSpecConfigPatchesArrayOutputWithContext(context.Context) TalosConfigSpecConfigPatchesArrayOutput
}

type TalosConfigSpecConfigPatchesArray []TalosConfigSpecConfigPatchesInput

func (TalosConfigSpecConfigPatchesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TalosConfigSpecConfigPatches)(nil)).Elem()
}

func (i TalosConfigSpecConfigPatchesArray) ToTalosConfigSpecConfigPatchesArrayOutput() TalosConfigSpecConfigPatchesArrayOutput {
	return i.ToTalosConfigSpecConfigPatchesArrayOutputWithContext(context.Background())
}

func (i TalosConfigSpecConfigPatchesArray) ToTalosConfigSpecConfigPatchesArrayOutputWithContext(ctx context.Context) TalosConfigSpecConfigPatchesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigSpecConfigPatchesArrayOutput)
}

type TalosConfigSpecConfigPatchesOutput struct{ *pulumi.OutputState }

func (TalosConfigSpecConfigPatchesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigSpecConfigPatches)(nil)).Elem()
}

func (o TalosConfigSpecConfigPatchesOutput) ToTalosConfigSpecConfigPatchesOutput() TalosConfigSpecConfigPatchesOutput {
	return o
}

func (o TalosConfigSpecConfigPatchesOutput) ToTalosConfigSpecConfigPatchesOutputWithContext(ctx context.Context) TalosConfigSpecConfigPatchesOutput {
	return o
}

func (o TalosConfigSpecConfigPatchesOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v TalosConfigSpecConfigPatches) string { return v.Op }).(pulumi.StringOutput)
}

func (o TalosConfigSpecConfigPatchesOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v TalosConfigSpecConfigPatches) string { return v.Path }).(pulumi.StringOutput)
}

func (o TalosConfigSpecConfigPatchesOutput) Value() pulumi.MapOutput {
	return o.ApplyT(func(v TalosConfigSpecConfigPatches) map[string]interface{} { return v.Value }).(pulumi.MapOutput)
}

type TalosConfigSpecConfigPatchesArrayOutput struct{ *pulumi.OutputState }

func (TalosConfigSpecConfigPatchesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TalosConfigSpecConfigPatches)(nil)).Elem()
}

func (o TalosConfigSpecConfigPatchesArrayOutput) ToTalosConfigSpecConfigPatchesArrayOutput() TalosConfigSpecConfigPatchesArrayOutput {
	return o
}

func (o TalosConfigSpecConfigPatchesArrayOutput) ToTalosConfigSpecConfigPatchesArrayOutputWithContext(ctx context.Context) TalosConfigSpecConfigPatchesArrayOutput {
	return o
}

func (o TalosConfigSpecConfigPatchesArrayOutput) Index(i pulumi.IntInput) TalosConfigSpecConfigPatchesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TalosConfigSpecConfigPatches {
		return vs[0].([]TalosConfigSpecConfigPatches)[vs[1].(int)]
	}).(TalosConfigSpecConfigPatchesOutput)
}

// Set hostname in the machine configuration to some value.
type TalosConfigSpecHostname struct {
	// Source of the hostname.
	//  Allowed values: "MachineName" (use linked Machine's Name).
	Source *string `pulumi:"source"`
}

// TalosConfigSpecHostnameInput is an input type that accepts TalosConfigSpecHostnameArgs and TalosConfigSpecHostnameOutput values.
// You can construct a concrete instance of `TalosConfigSpecHostnameInput` via:
//
//	TalosConfigSpecHostnameArgs{...}
type TalosConfigSpecHostnameInput interface {
	pulumi.Input

	ToTalosConfigSpecHostnameOutput() TalosConfigSpecHostnameOutput
	ToTalosConfigSpecHostnameOutputWithContext(context.Context) TalosConfigSpecHostnameOutput
}

// Set hostname in the machine configuration to some value.
type TalosConfigSpecHostnameArgs struct {
	// Source of the hostname.
	//  Allowed values: "MachineName" (use linked Machine's Name).
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (TalosConfigSpecHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigSpecHostname)(nil)).Elem()
}

func (i TalosConfigSpecHostnameArgs) ToTalosConfigSpecHostnameOutput() TalosConfigSpecHostnameOutput {
	return i.ToTalosConfigSpecHostnameOutputWithContext(context.Background())
}

func (i TalosConfigSpecHostnameArgs) ToTalosConfigSpecHostnameOutputWithContext(ctx context.Context) TalosConfigSpecHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigSpecHostnameOutput)
}

func (i TalosConfigSpecHostnameArgs) ToTalosConfigSpecHostnamePtrOutput() TalosConfigSpecHostnamePtrOutput {
	return i.ToTalosConfigSpecHostnamePtrOutputWithContext(context.Background())
}

func (i TalosConfigSpecHostnameArgs) ToTalosConfigSpecHostnamePtrOutputWithContext(ctx context.Context) TalosConfigSpecHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigSpecHostnameOutput).ToTalosConfigSpecHostnamePtrOutputWithContext(ctx)
}

// TalosConfigSpecHostnamePtrInput is an input type that accepts TalosConfigSpecHostnameArgs, TalosConfigSpecHostnamePtr and TalosConfigSpecHostnamePtrOutput values.
// You can construct a concrete instance of `TalosConfigSpecHostnamePtrInput` via:
//
//	        TalosConfigSpecHostnameArgs{...}
//
//	or:
//
//	        nil
type TalosConfigSpecHostnamePtrInput interface {
	pulumi.Input

	ToTalosConfigSpecHostnamePtrOutput() TalosConfigSpecHostnamePtrOutput
	ToTalosConfigSpecHostnamePtrOutputWithContext(context.Context) TalosConfigSpecHostnamePtrOutput
}

type talosConfigSpecHostnamePtrType TalosConfigSpecHostnameArgs

func TalosConfigSpecHostnamePtr(v *TalosConfigSpecHostnameArgs) TalosConfigSpecHostnamePtrInput {
	return (*talosConfigSpecHostnamePtrType)(v)
}

func (*talosConfigSpecHostnamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigSpecHostname)(nil)).Elem()
}

func (i *talosConfigSpecHostnamePtrType) ToTalosConfigSpecHostnamePtrOutput() TalosConfigSpecHostnamePtrOutput {
	return i.ToTalosConfigSpecHostnamePtrOutputWithContext(context.Background())
}

func (i *talosConfigSpecHostnamePtrType) ToTalosConfigSpecHostnamePtrOutputWithContext(ctx context.Context) TalosConfigSpecHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigSpecHostnamePtrOutput)
}

// Set hostname in the machine configuration to some value.
type TalosConfigSpecHostnameOutput struct{ *pulumi.OutputState }

func (TalosConfigSpecHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigSpecHostname)(nil)).Elem()
}

func (o TalosConfigSpecHostnameOutput) ToTalosConfigSpecHostnameOutput() TalosConfigSpecHostnameOutput {
	return o
}

func (o TalosConfigSpecHostnameOutput) ToTalosConfigSpecHostnameOutputWithContext(ctx context.Context) TalosConfigSpecHostnameOutput {
	return o
}

func (o TalosConfigSpecHostnameOutput) ToTalosConfigSpecHostnamePtrOutput() TalosConfigSpecHostnamePtrOutput {
	return o.ToTalosConfigSpecHostnamePtrOutputWithContext(context.Background())
}

func (o TalosConfigSpecHostnameOutput) ToTalosConfigSpecHostnamePtrOutputWithContext(ctx context.Context) TalosConfigSpecHostnamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TalosConfigSpecHostname) *TalosConfigSpecHostname {
		return &v
	}).(TalosConfigSpecHostnamePtrOutput)
}

// Source of the hostname.
//
//	Allowed values: "MachineName" (use linked Machine's Name).
func (o TalosConfigSpecHostnameOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigSpecHostname) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type TalosConfigSpecHostnamePtrOutput struct{ *pulumi.OutputState }

func (TalosConfigSpecHostnamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigSpecHostname)(nil)).Elem()
}

func (o TalosConfigSpecHostnamePtrOutput) ToTalosConfigSpecHostnamePtrOutput() TalosConfigSpecHostnamePtrOutput {
	return o
}

func (o TalosConfigSpecHostnamePtrOutput) ToTalosConfigSpecHostnamePtrOutputWithContext(ctx context.Context) TalosConfigSpecHostnamePtrOutput {
	return o
}

func (o TalosConfigSpecHostnamePtrOutput) Elem() TalosConfigSpecHostnameOutput {
	return o.ApplyT(func(v *TalosConfigSpecHostname) TalosConfigSpecHostname {
		if v != nil {
			return *v
		}
		var ret TalosConfigSpecHostname
		return ret
	}).(TalosConfigSpecHostnameOutput)
}

// Source of the hostname.
//
//	Allowed values: "MachineName" (use linked Machine's Name).
func (o TalosConfigSpecHostnamePtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigSpecHostname) *string {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.StringPtrOutput)
}

// TalosConfigStatus defines the observed state of TalosConfig
type TalosConfigStatus struct {
	// Conditions defines current service state of the TalosConfig.
	Conditions []TalosConfigStatusConditions `pulumi:"conditions"`
	// DataSecretName is the name of the secret that stores the bootstrap data script.
	DataSecretName *string `pulumi:"dataSecretName"`
	// FailureMessage will be set on non-retryable errors
	FailureMessage *string `pulumi:"failureMessage"`
	// FailureReason will be set on non-retryable errors
	FailureReason *string `pulumi:"failureReason"`
	// ObservedGeneration is the latest generation observed by the controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Ready indicates the BootstrapData field is ready to be consumed
	Ready *bool `pulumi:"ready"`
	// Talos config will be a string containing the config for download.
	//  Deprecated: please use `<cluster>-talosconfig` secret.
	TalosConfig *string `pulumi:"talosConfig"`
}

// TalosConfigStatusInput is an input type that accepts TalosConfigStatusArgs and TalosConfigStatusOutput values.
// You can construct a concrete instance of `TalosConfigStatusInput` via:
//
//	TalosConfigStatusArgs{...}
type TalosConfigStatusInput interface {
	pulumi.Input

	ToTalosConfigStatusOutput() TalosConfigStatusOutput
	ToTalosConfigStatusOutputWithContext(context.Context) TalosConfigStatusOutput
}

// TalosConfigStatus defines the observed state of TalosConfig
type TalosConfigStatusArgs struct {
	// Conditions defines current service state of the TalosConfig.
	Conditions TalosConfigStatusConditionsArrayInput `pulumi:"conditions"`
	// DataSecretName is the name of the secret that stores the bootstrap data script.
	DataSecretName pulumi.StringPtrInput `pulumi:"dataSecretName"`
	// FailureMessage will be set on non-retryable errors
	FailureMessage pulumi.StringPtrInput `pulumi:"failureMessage"`
	// FailureReason will be set on non-retryable errors
	FailureReason pulumi.StringPtrInput `pulumi:"failureReason"`
	// ObservedGeneration is the latest generation observed by the controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Ready indicates the BootstrapData field is ready to be consumed
	Ready pulumi.BoolPtrInput `pulumi:"ready"`
	// Talos config will be a string containing the config for download.
	//  Deprecated: please use `<cluster>-talosconfig` secret.
	TalosConfig pulumi.StringPtrInput `pulumi:"talosConfig"`
}

func (TalosConfigStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigStatus)(nil)).Elem()
}

func (i TalosConfigStatusArgs) ToTalosConfigStatusOutput() TalosConfigStatusOutput {
	return i.ToTalosConfigStatusOutputWithContext(context.Background())
}

func (i TalosConfigStatusArgs) ToTalosConfigStatusOutputWithContext(ctx context.Context) TalosConfigStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigStatusOutput)
}

func (i TalosConfigStatusArgs) ToTalosConfigStatusPtrOutput() TalosConfigStatusPtrOutput {
	return i.ToTalosConfigStatusPtrOutputWithContext(context.Background())
}

func (i TalosConfigStatusArgs) ToTalosConfigStatusPtrOutputWithContext(ctx context.Context) TalosConfigStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigStatusOutput).ToTalosConfigStatusPtrOutputWithContext(ctx)
}

// TalosConfigStatusPtrInput is an input type that accepts TalosConfigStatusArgs, TalosConfigStatusPtr and TalosConfigStatusPtrOutput values.
// You can construct a concrete instance of `TalosConfigStatusPtrInput` via:
//
//	        TalosConfigStatusArgs{...}
//
//	or:
//
//	        nil
type TalosConfigStatusPtrInput interface {
	pulumi.Input

	ToTalosConfigStatusPtrOutput() TalosConfigStatusPtrOutput
	ToTalosConfigStatusPtrOutputWithContext(context.Context) TalosConfigStatusPtrOutput
}

type talosConfigStatusPtrType TalosConfigStatusArgs

func TalosConfigStatusPtr(v *TalosConfigStatusArgs) TalosConfigStatusPtrInput {
	return (*talosConfigStatusPtrType)(v)
}

func (*talosConfigStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigStatus)(nil)).Elem()
}

func (i *talosConfigStatusPtrType) ToTalosConfigStatusPtrOutput() TalosConfigStatusPtrOutput {
	return i.ToTalosConfigStatusPtrOutputWithContext(context.Background())
}

func (i *talosConfigStatusPtrType) ToTalosConfigStatusPtrOutputWithContext(ctx context.Context) TalosConfigStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigStatusPtrOutput)
}

// TalosConfigStatus defines the observed state of TalosConfig
type TalosConfigStatusOutput struct{ *pulumi.OutputState }

func (TalosConfigStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigStatus)(nil)).Elem()
}

func (o TalosConfigStatusOutput) ToTalosConfigStatusOutput() TalosConfigStatusOutput {
	return o
}

func (o TalosConfigStatusOutput) ToTalosConfigStatusOutputWithContext(ctx context.Context) TalosConfigStatusOutput {
	return o
}

func (o TalosConfigStatusOutput) ToTalosConfigStatusPtrOutput() TalosConfigStatusPtrOutput {
	return o.ToTalosConfigStatusPtrOutputWithContext(context.Background())
}

func (o TalosConfigStatusOutput) ToTalosConfigStatusPtrOutputWithContext(ctx context.Context) TalosConfigStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TalosConfigStatus) *TalosConfigStatus {
		return &v
	}).(TalosConfigStatusPtrOutput)
}

// Conditions defines current service state of the TalosConfig.
func (o TalosConfigStatusOutput) Conditions() TalosConfigStatusConditionsArrayOutput {
	return o.ApplyT(func(v TalosConfigStatus) []TalosConfigStatusConditions { return v.Conditions }).(TalosConfigStatusConditionsArrayOutput)
}

// DataSecretName is the name of the secret that stores the bootstrap data script.
func (o TalosConfigStatusOutput) DataSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigStatus) *string { return v.DataSecretName }).(pulumi.StringPtrOutput)
}

// FailureMessage will be set on non-retryable errors
func (o TalosConfigStatusOutput) FailureMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigStatus) *string { return v.FailureMessage }).(pulumi.StringPtrOutput)
}

// FailureReason will be set on non-retryable errors
func (o TalosConfigStatusOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigStatus) *string { return v.FailureReason }).(pulumi.StringPtrOutput)
}

// ObservedGeneration is the latest generation observed by the controller.
func (o TalosConfigStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TalosConfigStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Ready indicates the BootstrapData field is ready to be consumed
func (o TalosConfigStatusOutput) Ready() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TalosConfigStatus) *bool { return v.Ready }).(pulumi.BoolPtrOutput)
}

// Talos config will be a string containing the config for download.
//
//	Deprecated: please use `<cluster>-talosconfig` secret.
func (o TalosConfigStatusOutput) TalosConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigStatus) *string { return v.TalosConfig }).(pulumi.StringPtrOutput)
}

type TalosConfigStatusPtrOutput struct{ *pulumi.OutputState }

func (TalosConfigStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigStatus)(nil)).Elem()
}

func (o TalosConfigStatusPtrOutput) ToTalosConfigStatusPtrOutput() TalosConfigStatusPtrOutput {
	return o
}

func (o TalosConfigStatusPtrOutput) ToTalosConfigStatusPtrOutputWithContext(ctx context.Context) TalosConfigStatusPtrOutput {
	return o
}

func (o TalosConfigStatusPtrOutput) Elem() TalosConfigStatusOutput {
	return o.ApplyT(func(v *TalosConfigStatus) TalosConfigStatus {
		if v != nil {
			return *v
		}
		var ret TalosConfigStatus
		return ret
	}).(TalosConfigStatusOutput)
}

// Conditions defines current service state of the TalosConfig.
func (o TalosConfigStatusPtrOutput) Conditions() TalosConfigStatusConditionsArrayOutput {
	return o.ApplyT(func(v *TalosConfigStatus) []TalosConfigStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(TalosConfigStatusConditionsArrayOutput)
}

// DataSecretName is the name of the secret that stores the bootstrap data script.
func (o TalosConfigStatusPtrOutput) DataSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigStatus) *string {
		if v == nil {
			return nil
		}
		return v.DataSecretName
	}).(pulumi.StringPtrOutput)
}

// FailureMessage will be set on non-retryable errors
func (o TalosConfigStatusPtrOutput) FailureMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigStatus) *string {
		if v == nil {
			return nil
		}
		return v.FailureMessage
	}).(pulumi.StringPtrOutput)
}

// FailureReason will be set on non-retryable errors
func (o TalosConfigStatusPtrOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigStatus) *string {
		if v == nil {
			return nil
		}
		return v.FailureReason
	}).(pulumi.StringPtrOutput)
}

// ObservedGeneration is the latest generation observed by the controller.
func (o TalosConfigStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TalosConfigStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Ready indicates the BootstrapData field is ready to be consumed
func (o TalosConfigStatusPtrOutput) Ready() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TalosConfigStatus) *bool {
		if v == nil {
			return nil
		}
		return v.Ready
	}).(pulumi.BoolPtrOutput)
}

// Talos config will be a string containing the config for download.
//
//	Deprecated: please use `<cluster>-talosconfig` secret.
func (o TalosConfigStatusPtrOutput) TalosConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigStatus) *string {
		if v == nil {
			return nil
		}
		return v.TalosConfig
	}).(pulumi.StringPtrOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type TalosConfigStatusConditions struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason *string `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity *string `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status string `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type string `pulumi:"type"`
}

// TalosConfigStatusConditionsInput is an input type that accepts TalosConfigStatusConditionsArgs and TalosConfigStatusConditionsOutput values.
// You can construct a concrete instance of `TalosConfigStatusConditionsInput` via:
//
//	TalosConfigStatusConditionsArgs{...}
type TalosConfigStatusConditionsInput interface {
	pulumi.Input

	ToTalosConfigStatusConditionsOutput() TalosConfigStatusConditionsOutput
	ToTalosConfigStatusConditionsOutputWithContext(context.Context) TalosConfigStatusConditionsOutput
}

// Condition defines an observation of a Cluster API resource operational state.
type TalosConfigStatusConditionsArgs struct {
	// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A human readable message indicating details about the transition. This field may be empty.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Status of the condition, one of True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TalosConfigStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigStatusConditions)(nil)).Elem()
}

func (i TalosConfigStatusConditionsArgs) ToTalosConfigStatusConditionsOutput() TalosConfigStatusConditionsOutput {
	return i.ToTalosConfigStatusConditionsOutputWithContext(context.Background())
}

func (i TalosConfigStatusConditionsArgs) ToTalosConfigStatusConditionsOutputWithContext(ctx context.Context) TalosConfigStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigStatusConditionsOutput)
}

// TalosConfigStatusConditionsArrayInput is an input type that accepts TalosConfigStatusConditionsArray and TalosConfigStatusConditionsArrayOutput values.
// You can construct a concrete instance of `TalosConfigStatusConditionsArrayInput` via:
//
//	TalosConfigStatusConditionsArray{ TalosConfigStatusConditionsArgs{...} }
type TalosConfigStatusConditionsArrayInput interface {
	pulumi.Input

	ToTalosConfigStatusConditionsArrayOutput() TalosConfigStatusConditionsArrayOutput
	ToTalosConfigStatusConditionsArrayOutputWithContext(context.Context) TalosConfigStatusConditionsArrayOutput
}

type TalosConfigStatusConditionsArray []TalosConfigStatusConditionsInput

func (TalosConfigStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TalosConfigStatusConditions)(nil)).Elem()
}

func (i TalosConfigStatusConditionsArray) ToTalosConfigStatusConditionsArrayOutput() TalosConfigStatusConditionsArrayOutput {
	return i.ToTalosConfigStatusConditionsArrayOutputWithContext(context.Background())
}

func (i TalosConfigStatusConditionsArray) ToTalosConfigStatusConditionsArrayOutputWithContext(ctx context.Context) TalosConfigStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigStatusConditionsArrayOutput)
}

// Condition defines an observation of a Cluster API resource operational state.
type TalosConfigStatusConditionsOutput struct{ *pulumi.OutputState }

func (TalosConfigStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigStatusConditions)(nil)).Elem()
}

func (o TalosConfigStatusConditionsOutput) ToTalosConfigStatusConditionsOutput() TalosConfigStatusConditionsOutput {
	return o
}

func (o TalosConfigStatusConditionsOutput) ToTalosConfigStatusConditionsOutputWithContext(ctx context.Context) TalosConfigStatusConditionsOutput {
	return o
}

// Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
func (o TalosConfigStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v TalosConfigStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A human readable message indicating details about the transition. This field may be empty.
func (o TalosConfigStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
func (o TalosConfigStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
func (o TalosConfigStatusConditionsOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigStatusConditions) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// Status of the condition, one of True, False, Unknown.
func (o TalosConfigStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v TalosConfigStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
func (o TalosConfigStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TalosConfigStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type TalosConfigStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (TalosConfigStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TalosConfigStatusConditions)(nil)).Elem()
}

func (o TalosConfigStatusConditionsArrayOutput) ToTalosConfigStatusConditionsArrayOutput() TalosConfigStatusConditionsArrayOutput {
	return o
}

func (o TalosConfigStatusConditionsArrayOutput) ToTalosConfigStatusConditionsArrayOutputWithContext(ctx context.Context) TalosConfigStatusConditionsArrayOutput {
	return o
}

func (o TalosConfigStatusConditionsArrayOutput) Index(i pulumi.IntInput) TalosConfigStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TalosConfigStatusConditions {
		return vs[0].([]TalosConfigStatusConditions)[vs[1].(int)]
	}).(TalosConfigStatusConditionsOutput)
}

// TalosConfigTemplate is the Schema for the talosconfigtemplates API
type TalosConfigTemplateType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TalosConfigTemplateSpec defines the desired state of TalosConfigTemplate
	Spec *TalosConfigTemplateSpec `pulumi:"spec"`
}

type TalosConfigTemplateMetadata struct {
}

// TalosConfigTemplateSpec defines the desired state of TalosConfigTemplate
type TalosConfigTemplateSpec struct {
	// TalosConfigTemplateResource defines the Template structure
	Template TalosConfigTemplateSpecTemplate `pulumi:"template"`
}

// TalosConfigTemplateSpecInput is an input type that accepts TalosConfigTemplateSpecArgs and TalosConfigTemplateSpecOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecInput` via:
//
//	TalosConfigTemplateSpecArgs{...}
type TalosConfigTemplateSpecInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecOutput() TalosConfigTemplateSpecOutput
	ToTalosConfigTemplateSpecOutputWithContext(context.Context) TalosConfigTemplateSpecOutput
}

// TalosConfigTemplateSpec defines the desired state of TalosConfigTemplate
type TalosConfigTemplateSpecArgs struct {
	// TalosConfigTemplateResource defines the Template structure
	Template TalosConfigTemplateSpecTemplateInput `pulumi:"template"`
}

func (TalosConfigTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpec)(nil)).Elem()
}

func (i TalosConfigTemplateSpecArgs) ToTalosConfigTemplateSpecOutput() TalosConfigTemplateSpecOutput {
	return i.ToTalosConfigTemplateSpecOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecArgs) ToTalosConfigTemplateSpecOutputWithContext(ctx context.Context) TalosConfigTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecOutput)
}

func (i TalosConfigTemplateSpecArgs) ToTalosConfigTemplateSpecPtrOutput() TalosConfigTemplateSpecPtrOutput {
	return i.ToTalosConfigTemplateSpecPtrOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecArgs) ToTalosConfigTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecOutput).ToTalosConfigTemplateSpecPtrOutputWithContext(ctx)
}

// TalosConfigTemplateSpecPtrInput is an input type that accepts TalosConfigTemplateSpecArgs, TalosConfigTemplateSpecPtr and TalosConfigTemplateSpecPtrOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecPtrInput` via:
//
//	        TalosConfigTemplateSpecArgs{...}
//
//	or:
//
//	        nil
type TalosConfigTemplateSpecPtrInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecPtrOutput() TalosConfigTemplateSpecPtrOutput
	ToTalosConfigTemplateSpecPtrOutputWithContext(context.Context) TalosConfigTemplateSpecPtrOutput
}

type talosConfigTemplateSpecPtrType TalosConfigTemplateSpecArgs

func TalosConfigTemplateSpecPtr(v *TalosConfigTemplateSpecArgs) TalosConfigTemplateSpecPtrInput {
	return (*talosConfigTemplateSpecPtrType)(v)
}

func (*talosConfigTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpec)(nil)).Elem()
}

func (i *talosConfigTemplateSpecPtrType) ToTalosConfigTemplateSpecPtrOutput() TalosConfigTemplateSpecPtrOutput {
	return i.ToTalosConfigTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *talosConfigTemplateSpecPtrType) ToTalosConfigTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecPtrOutput)
}

// TalosConfigTemplateSpec defines the desired state of TalosConfigTemplate
type TalosConfigTemplateSpecOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpec)(nil)).Elem()
}

func (o TalosConfigTemplateSpecOutput) ToTalosConfigTemplateSpecOutput() TalosConfigTemplateSpecOutput {
	return o
}

func (o TalosConfigTemplateSpecOutput) ToTalosConfigTemplateSpecOutputWithContext(ctx context.Context) TalosConfigTemplateSpecOutput {
	return o
}

func (o TalosConfigTemplateSpecOutput) ToTalosConfigTemplateSpecPtrOutput() TalosConfigTemplateSpecPtrOutput {
	return o.ToTalosConfigTemplateSpecPtrOutputWithContext(context.Background())
}

func (o TalosConfigTemplateSpecOutput) ToTalosConfigTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TalosConfigTemplateSpec) *TalosConfigTemplateSpec {
		return &v
	}).(TalosConfigTemplateSpecPtrOutput)
}

// TalosConfigTemplateResource defines the Template structure
func (o TalosConfigTemplateSpecOutput) Template() TalosConfigTemplateSpecTemplateOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpec) TalosConfigTemplateSpecTemplate { return v.Template }).(TalosConfigTemplateSpecTemplateOutput)
}

type TalosConfigTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpec)(nil)).Elem()
}

func (o TalosConfigTemplateSpecPtrOutput) ToTalosConfigTemplateSpecPtrOutput() TalosConfigTemplateSpecPtrOutput {
	return o
}

func (o TalosConfigTemplateSpecPtrOutput) ToTalosConfigTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecPtrOutput {
	return o
}

func (o TalosConfigTemplateSpecPtrOutput) Elem() TalosConfigTemplateSpecOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpec) TalosConfigTemplateSpec {
		if v != nil {
			return *v
		}
		var ret TalosConfigTemplateSpec
		return ret
	}).(TalosConfigTemplateSpecOutput)
}

// TalosConfigTemplateResource defines the Template structure
func (o TalosConfigTemplateSpecPtrOutput) Template() TalosConfigTemplateSpecTemplatePtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpec) *TalosConfigTemplateSpecTemplate {
		if v == nil {
			return nil
		}
		return &v.Template
	}).(TalosConfigTemplateSpecTemplatePtrOutput)
}

// TalosConfigTemplateResource defines the Template structure
type TalosConfigTemplateSpecTemplate struct {
	// TalosConfigSpec defines the desired state of TalosConfig
	Spec *TalosConfigTemplateSpecTemplateSpec `pulumi:"spec"`
}

// TalosConfigTemplateSpecTemplateInput is an input type that accepts TalosConfigTemplateSpecTemplateArgs and TalosConfigTemplateSpecTemplateOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecTemplateInput` via:
//
//	TalosConfigTemplateSpecTemplateArgs{...}
type TalosConfigTemplateSpecTemplateInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecTemplateOutput() TalosConfigTemplateSpecTemplateOutput
	ToTalosConfigTemplateSpecTemplateOutputWithContext(context.Context) TalosConfigTemplateSpecTemplateOutput
}

// TalosConfigTemplateResource defines the Template structure
type TalosConfigTemplateSpecTemplateArgs struct {
	// TalosConfigSpec defines the desired state of TalosConfig
	Spec TalosConfigTemplateSpecTemplateSpecPtrInput `pulumi:"spec"`
}

func (TalosConfigTemplateSpecTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpecTemplate)(nil)).Elem()
}

func (i TalosConfigTemplateSpecTemplateArgs) ToTalosConfigTemplateSpecTemplateOutput() TalosConfigTemplateSpecTemplateOutput {
	return i.ToTalosConfigTemplateSpecTemplateOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecTemplateArgs) ToTalosConfigTemplateSpecTemplateOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateOutput)
}

func (i TalosConfigTemplateSpecTemplateArgs) ToTalosConfigTemplateSpecTemplatePtrOutput() TalosConfigTemplateSpecTemplatePtrOutput {
	return i.ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecTemplateArgs) ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateOutput).ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(ctx)
}

// TalosConfigTemplateSpecTemplatePtrInput is an input type that accepts TalosConfigTemplateSpecTemplateArgs, TalosConfigTemplateSpecTemplatePtr and TalosConfigTemplateSpecTemplatePtrOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecTemplatePtrInput` via:
//
//	        TalosConfigTemplateSpecTemplateArgs{...}
//
//	or:
//
//	        nil
type TalosConfigTemplateSpecTemplatePtrInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecTemplatePtrOutput() TalosConfigTemplateSpecTemplatePtrOutput
	ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(context.Context) TalosConfigTemplateSpecTemplatePtrOutput
}

type talosConfigTemplateSpecTemplatePtrType TalosConfigTemplateSpecTemplateArgs

func TalosConfigTemplateSpecTemplatePtr(v *TalosConfigTemplateSpecTemplateArgs) TalosConfigTemplateSpecTemplatePtrInput {
	return (*talosConfigTemplateSpecTemplatePtrType)(v)
}

func (*talosConfigTemplateSpecTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpecTemplate)(nil)).Elem()
}

func (i *talosConfigTemplateSpecTemplatePtrType) ToTalosConfigTemplateSpecTemplatePtrOutput() TalosConfigTemplateSpecTemplatePtrOutput {
	return i.ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(context.Background())
}

func (i *talosConfigTemplateSpecTemplatePtrType) ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplatePtrOutput)
}

// TalosConfigTemplateResource defines the Template structure
type TalosConfigTemplateSpecTemplateOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpecTemplate)(nil)).Elem()
}

func (o TalosConfigTemplateSpecTemplateOutput) ToTalosConfigTemplateSpecTemplateOutput() TalosConfigTemplateSpecTemplateOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateOutput) ToTalosConfigTemplateSpecTemplateOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateOutput) ToTalosConfigTemplateSpecTemplatePtrOutput() TalosConfigTemplateSpecTemplatePtrOutput {
	return o.ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(context.Background())
}

func (o TalosConfigTemplateSpecTemplateOutput) ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TalosConfigTemplateSpecTemplate) *TalosConfigTemplateSpecTemplate {
		return &v
	}).(TalosConfigTemplateSpecTemplatePtrOutput)
}

// TalosConfigSpec defines the desired state of TalosConfig
func (o TalosConfigTemplateSpecTemplateOutput) Spec() TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpecTemplate) *TalosConfigTemplateSpecTemplateSpec { return v.Spec }).(TalosConfigTemplateSpecTemplateSpecPtrOutput)
}

type TalosConfigTemplateSpecTemplatePtrOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpecTemplate)(nil)).Elem()
}

func (o TalosConfigTemplateSpecTemplatePtrOutput) ToTalosConfigTemplateSpecTemplatePtrOutput() TalosConfigTemplateSpecTemplatePtrOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplatePtrOutput) ToTalosConfigTemplateSpecTemplatePtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplatePtrOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplatePtrOutput) Elem() TalosConfigTemplateSpecTemplateOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplate) TalosConfigTemplateSpecTemplate {
		if v != nil {
			return *v
		}
		var ret TalosConfigTemplateSpecTemplate
		return ret
	}).(TalosConfigTemplateSpecTemplateOutput)
}

// TalosConfigSpec defines the desired state of TalosConfig
func (o TalosConfigTemplateSpecTemplatePtrOutput) Spec() TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplate) *TalosConfigTemplateSpecTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(TalosConfigTemplateSpecTemplateSpecPtrOutput)
}

// TalosConfigSpec defines the desired state of TalosConfig
type TalosConfigTemplateSpecTemplateSpec struct {
	ConfigPatches []TalosConfigTemplateSpecTemplateSpecConfigPatches `pulumi:"configPatches"`
	Data          *string                                            `pulumi:"data"`
	GenerateType  string                                             `pulumi:"generateType"`
	// Set hostname in the machine configuration to some value.
	Hostname     *TalosConfigTemplateSpecTemplateSpecHostname `pulumi:"hostname"`
	TalosVersion *string                                      `pulumi:"talosVersion"`
}

// TalosConfigTemplateSpecTemplateSpecInput is an input type that accepts TalosConfigTemplateSpecTemplateSpecArgs and TalosConfigTemplateSpecTemplateSpecOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecTemplateSpecInput` via:
//
//	TalosConfigTemplateSpecTemplateSpecArgs{...}
type TalosConfigTemplateSpecTemplateSpecInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecTemplateSpecOutput() TalosConfigTemplateSpecTemplateSpecOutput
	ToTalosConfigTemplateSpecTemplateSpecOutputWithContext(context.Context) TalosConfigTemplateSpecTemplateSpecOutput
}

// TalosConfigSpec defines the desired state of TalosConfig
type TalosConfigTemplateSpecTemplateSpecArgs struct {
	ConfigPatches TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayInput `pulumi:"configPatches"`
	Data          pulumi.StringPtrInput                                      `pulumi:"data"`
	GenerateType  pulumi.StringInput                                         `pulumi:"generateType"`
	// Set hostname in the machine configuration to some value.
	Hostname     TalosConfigTemplateSpecTemplateSpecHostnamePtrInput `pulumi:"hostname"`
	TalosVersion pulumi.StringPtrInput                               `pulumi:"talosVersion"`
}

func (TalosConfigTemplateSpecTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpec)(nil)).Elem()
}

func (i TalosConfigTemplateSpecTemplateSpecArgs) ToTalosConfigTemplateSpecTemplateSpecOutput() TalosConfigTemplateSpecTemplateSpecOutput {
	return i.ToTalosConfigTemplateSpecTemplateSpecOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecTemplateSpecArgs) ToTalosConfigTemplateSpecTemplateSpecOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateSpecOutput)
}

func (i TalosConfigTemplateSpecTemplateSpecArgs) ToTalosConfigTemplateSpecTemplateSpecPtrOutput() TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return i.ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecTemplateSpecArgs) ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateSpecOutput).ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(ctx)
}

// TalosConfigTemplateSpecTemplateSpecPtrInput is an input type that accepts TalosConfigTemplateSpecTemplateSpecArgs, TalosConfigTemplateSpecTemplateSpecPtr and TalosConfigTemplateSpecTemplateSpecPtrOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecTemplateSpecPtrInput` via:
//
//	        TalosConfigTemplateSpecTemplateSpecArgs{...}
//
//	or:
//
//	        nil
type TalosConfigTemplateSpecTemplateSpecPtrInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecTemplateSpecPtrOutput() TalosConfigTemplateSpecTemplateSpecPtrOutput
	ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(context.Context) TalosConfigTemplateSpecTemplateSpecPtrOutput
}

type talosConfigTemplateSpecTemplateSpecPtrType TalosConfigTemplateSpecTemplateSpecArgs

func TalosConfigTemplateSpecTemplateSpecPtr(v *TalosConfigTemplateSpecTemplateSpecArgs) TalosConfigTemplateSpecTemplateSpecPtrInput {
	return (*talosConfigTemplateSpecTemplateSpecPtrType)(v)
}

func (*talosConfigTemplateSpecTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpecTemplateSpec)(nil)).Elem()
}

func (i *talosConfigTemplateSpecTemplateSpecPtrType) ToTalosConfigTemplateSpecTemplateSpecPtrOutput() TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return i.ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *talosConfigTemplateSpecTemplateSpecPtrType) ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateSpecPtrOutput)
}

// TalosConfigSpec defines the desired state of TalosConfig
type TalosConfigTemplateSpecTemplateSpecOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpec)(nil)).Elem()
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) ToTalosConfigTemplateSpecTemplateSpecOutput() TalosConfigTemplateSpecTemplateSpecOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) ToTalosConfigTemplateSpecTemplateSpecOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) ToTalosConfigTemplateSpecTemplateSpecPtrOutput() TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return o.ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(context.Background())
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TalosConfigTemplateSpecTemplateSpec) *TalosConfigTemplateSpecTemplateSpec {
		return &v
	}).(TalosConfigTemplateSpecTemplateSpecPtrOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) ConfigPatches() TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpecTemplateSpec) []TalosConfigTemplateSpecTemplateSpecConfigPatches {
		return v.ConfigPatches
	}).(TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpecTemplateSpec) *string { return v.Data }).(pulumi.StringPtrOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) GenerateType() pulumi.StringOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpecTemplateSpec) string { return v.GenerateType }).(pulumi.StringOutput)
}

// Set hostname in the machine configuration to some value.
func (o TalosConfigTemplateSpecTemplateSpecOutput) Hostname() TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpecTemplateSpec) *TalosConfigTemplateSpecTemplateSpecHostname {
		return v.Hostname
	}).(TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecOutput) TalosVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpecTemplateSpec) *string { return v.TalosVersion }).(pulumi.StringPtrOutput)
}

type TalosConfigTemplateSpecTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpecTemplateSpec)(nil)).Elem()
}

func (o TalosConfigTemplateSpecTemplateSpecPtrOutput) ToTalosConfigTemplateSpecTemplateSpecPtrOutput() TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecPtrOutput) ToTalosConfigTemplateSpecTemplateSpecPtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecPtrOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecPtrOutput) Elem() TalosConfigTemplateSpecTemplateSpecOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplateSpec) TalosConfigTemplateSpecTemplateSpec {
		if v != nil {
			return *v
		}
		var ret TalosConfigTemplateSpecTemplateSpec
		return ret
	}).(TalosConfigTemplateSpecTemplateSpecOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecPtrOutput) ConfigPatches() TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplateSpec) []TalosConfigTemplateSpecTemplateSpecConfigPatches {
		if v == nil {
			return nil
		}
		return v.ConfigPatches
	}).(TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecPtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecPtrOutput) GenerateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return &v.GenerateType
	}).(pulumi.StringPtrOutput)
}

// Set hostname in the machine configuration to some value.
func (o TalosConfigTemplateSpecTemplateSpecPtrOutput) Hostname() TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplateSpec) *TalosConfigTemplateSpecTemplateSpecHostname {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecPtrOutput) TalosVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.TalosVersion
	}).(pulumi.StringPtrOutput)
}

type TalosConfigTemplateSpecTemplateSpecConfigPatches struct {
	Op    string                 `pulumi:"op"`
	Path  string                 `pulumi:"path"`
	Value map[string]interface{} `pulumi:"value"`
}

// TalosConfigTemplateSpecTemplateSpecConfigPatchesInput is an input type that accepts TalosConfigTemplateSpecTemplateSpecConfigPatchesArgs and TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecTemplateSpecConfigPatchesInput` via:
//
//	TalosConfigTemplateSpecTemplateSpecConfigPatchesArgs{...}
type TalosConfigTemplateSpecTemplateSpecConfigPatchesInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecTemplateSpecConfigPatchesOutput() TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput
	ToTalosConfigTemplateSpecTemplateSpecConfigPatchesOutputWithContext(context.Context) TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput
}

type TalosConfigTemplateSpecTemplateSpecConfigPatchesArgs struct {
	Op    pulumi.StringInput `pulumi:"op"`
	Path  pulumi.StringInput `pulumi:"path"`
	Value pulumi.MapInput    `pulumi:"value"`
}

func (TalosConfigTemplateSpecTemplateSpecConfigPatchesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpecConfigPatches)(nil)).Elem()
}

func (i TalosConfigTemplateSpecTemplateSpecConfigPatchesArgs) ToTalosConfigTemplateSpecTemplateSpecConfigPatchesOutput() TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput {
	return i.ToTalosConfigTemplateSpecTemplateSpecConfigPatchesOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecTemplateSpecConfigPatchesArgs) ToTalosConfigTemplateSpecTemplateSpecConfigPatchesOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput)
}

// TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayInput is an input type that accepts TalosConfigTemplateSpecTemplateSpecConfigPatchesArray and TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayInput` via:
//
//	TalosConfigTemplateSpecTemplateSpecConfigPatchesArray{ TalosConfigTemplateSpecTemplateSpecConfigPatchesArgs{...} }
type TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput() TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput
	ToTalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutputWithContext(context.Context) TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput
}

type TalosConfigTemplateSpecTemplateSpecConfigPatchesArray []TalosConfigTemplateSpecTemplateSpecConfigPatchesInput

func (TalosConfigTemplateSpecTemplateSpecConfigPatchesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TalosConfigTemplateSpecTemplateSpecConfigPatches)(nil)).Elem()
}

func (i TalosConfigTemplateSpecTemplateSpecConfigPatchesArray) ToTalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput() TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput {
	return i.ToTalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecTemplateSpecConfigPatchesArray) ToTalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput)
}

type TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpecConfigPatches)(nil)).Elem()
}

func (o TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput) ToTalosConfigTemplateSpecTemplateSpecConfigPatchesOutput() TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput) ToTalosConfigTemplateSpecTemplateSpecConfigPatchesOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpecTemplateSpecConfigPatches) string { return v.Op }).(pulumi.StringOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpecTemplateSpecConfigPatches) string { return v.Path }).(pulumi.StringOutput)
}

func (o TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput) Value() pulumi.MapOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpecTemplateSpecConfigPatches) map[string]interface{} { return v.Value }).(pulumi.MapOutput)
}

type TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TalosConfigTemplateSpecTemplateSpecConfigPatches)(nil)).Elem()
}

func (o TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput) ToTalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput() TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput) ToTalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput) Index(i pulumi.IntInput) TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TalosConfigTemplateSpecTemplateSpecConfigPatches {
		return vs[0].([]TalosConfigTemplateSpecTemplateSpecConfigPatches)[vs[1].(int)]
	}).(TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput)
}

// Set hostname in the machine configuration to some value.
type TalosConfigTemplateSpecTemplateSpecHostname struct {
	// Source of the hostname.
	//  Allowed values: "MachineName" (use linked Machine's Name).
	Source *string `pulumi:"source"`
}

// TalosConfigTemplateSpecTemplateSpecHostnameInput is an input type that accepts TalosConfigTemplateSpecTemplateSpecHostnameArgs and TalosConfigTemplateSpecTemplateSpecHostnameOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecTemplateSpecHostnameInput` via:
//
//	TalosConfigTemplateSpecTemplateSpecHostnameArgs{...}
type TalosConfigTemplateSpecTemplateSpecHostnameInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecTemplateSpecHostnameOutput() TalosConfigTemplateSpecTemplateSpecHostnameOutput
	ToTalosConfigTemplateSpecTemplateSpecHostnameOutputWithContext(context.Context) TalosConfigTemplateSpecTemplateSpecHostnameOutput
}

// Set hostname in the machine configuration to some value.
type TalosConfigTemplateSpecTemplateSpecHostnameArgs struct {
	// Source of the hostname.
	//  Allowed values: "MachineName" (use linked Machine's Name).
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (TalosConfigTemplateSpecTemplateSpecHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpecHostname)(nil)).Elem()
}

func (i TalosConfigTemplateSpecTemplateSpecHostnameArgs) ToTalosConfigTemplateSpecTemplateSpecHostnameOutput() TalosConfigTemplateSpecTemplateSpecHostnameOutput {
	return i.ToTalosConfigTemplateSpecTemplateSpecHostnameOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecTemplateSpecHostnameArgs) ToTalosConfigTemplateSpecTemplateSpecHostnameOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateSpecHostnameOutput)
}

func (i TalosConfigTemplateSpecTemplateSpecHostnameArgs) ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutput() TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput {
	return i.ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutputWithContext(context.Background())
}

func (i TalosConfigTemplateSpecTemplateSpecHostnameArgs) ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateSpecHostnameOutput).ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutputWithContext(ctx)
}

// TalosConfigTemplateSpecTemplateSpecHostnamePtrInput is an input type that accepts TalosConfigTemplateSpecTemplateSpecHostnameArgs, TalosConfigTemplateSpecTemplateSpecHostnamePtr and TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput values.
// You can construct a concrete instance of `TalosConfigTemplateSpecTemplateSpecHostnamePtrInput` via:
//
//	        TalosConfigTemplateSpecTemplateSpecHostnameArgs{...}
//
//	or:
//
//	        nil
type TalosConfigTemplateSpecTemplateSpecHostnamePtrInput interface {
	pulumi.Input

	ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutput() TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput
	ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutputWithContext(context.Context) TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput
}

type talosConfigTemplateSpecTemplateSpecHostnamePtrType TalosConfigTemplateSpecTemplateSpecHostnameArgs

func TalosConfigTemplateSpecTemplateSpecHostnamePtr(v *TalosConfigTemplateSpecTemplateSpecHostnameArgs) TalosConfigTemplateSpecTemplateSpecHostnamePtrInput {
	return (*talosConfigTemplateSpecTemplateSpecHostnamePtrType)(v)
}

func (*talosConfigTemplateSpecTemplateSpecHostnamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpecTemplateSpecHostname)(nil)).Elem()
}

func (i *talosConfigTemplateSpecTemplateSpecHostnamePtrType) ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutput() TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput {
	return i.ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutputWithContext(context.Background())
}

func (i *talosConfigTemplateSpecTemplateSpecHostnamePtrType) ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput)
}

// Set hostname in the machine configuration to some value.
type TalosConfigTemplateSpecTemplateSpecHostnameOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecTemplateSpecHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpecHostname)(nil)).Elem()
}

func (o TalosConfigTemplateSpecTemplateSpecHostnameOutput) ToTalosConfigTemplateSpecTemplateSpecHostnameOutput() TalosConfigTemplateSpecTemplateSpecHostnameOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecHostnameOutput) ToTalosConfigTemplateSpecTemplateSpecHostnameOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecHostnameOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecHostnameOutput) ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutput() TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput {
	return o.ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutputWithContext(context.Background())
}

func (o TalosConfigTemplateSpecTemplateSpecHostnameOutput) ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TalosConfigTemplateSpecTemplateSpecHostname) *TalosConfigTemplateSpecTemplateSpecHostname {
		return &v
	}).(TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput)
}

// Source of the hostname.
//
//	Allowed values: "MachineName" (use linked Machine's Name).
func (o TalosConfigTemplateSpecTemplateSpecHostnameOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TalosConfigTemplateSpecTemplateSpecHostname) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput struct{ *pulumi.OutputState }

func (TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TalosConfigTemplateSpecTemplateSpecHostname)(nil)).Elem()
}

func (o TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput) ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutput() TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput) ToTalosConfigTemplateSpecTemplateSpecHostnamePtrOutputWithContext(ctx context.Context) TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput {
	return o
}

func (o TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput) Elem() TalosConfigTemplateSpecTemplateSpecHostnameOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplateSpecHostname) TalosConfigTemplateSpecTemplateSpecHostname {
		if v != nil {
			return *v
		}
		var ret TalosConfigTemplateSpecTemplateSpecHostname
		return ret
	}).(TalosConfigTemplateSpecTemplateSpecHostnameOutput)
}

// Source of the hostname.
//
//	Allowed values: "MachineName" (use linked Machine's Name).
func (o TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TalosConfigTemplateSpecTemplateSpecHostname) *string {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigSpecInput)(nil)).Elem(), TalosConfigSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigSpecPtrInput)(nil)).Elem(), TalosConfigSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigSpecConfigPatchesInput)(nil)).Elem(), TalosConfigSpecConfigPatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigSpecConfigPatchesArrayInput)(nil)).Elem(), TalosConfigSpecConfigPatchesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigSpecHostnameInput)(nil)).Elem(), TalosConfigSpecHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigSpecHostnamePtrInput)(nil)).Elem(), TalosConfigSpecHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigStatusInput)(nil)).Elem(), TalosConfigStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigStatusPtrInput)(nil)).Elem(), TalosConfigStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigStatusConditionsInput)(nil)).Elem(), TalosConfigStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigStatusConditionsArrayInput)(nil)).Elem(), TalosConfigStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecInput)(nil)).Elem(), TalosConfigTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecPtrInput)(nil)).Elem(), TalosConfigTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecTemplateInput)(nil)).Elem(), TalosConfigTemplateSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecTemplatePtrInput)(nil)).Elem(), TalosConfigTemplateSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpecInput)(nil)).Elem(), TalosConfigTemplateSpecTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpecPtrInput)(nil)).Elem(), TalosConfigTemplateSpecTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpecConfigPatchesInput)(nil)).Elem(), TalosConfigTemplateSpecTemplateSpecConfigPatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayInput)(nil)).Elem(), TalosConfigTemplateSpecTemplateSpecConfigPatchesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpecHostnameInput)(nil)).Elem(), TalosConfigTemplateSpecTemplateSpecHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TalosConfigTemplateSpecTemplateSpecHostnamePtrInput)(nil)).Elem(), TalosConfigTemplateSpecTemplateSpecHostnameArgs{})
	pulumi.RegisterOutputType(TalosConfigSpecOutput{})
	pulumi.RegisterOutputType(TalosConfigSpecPtrOutput{})
	pulumi.RegisterOutputType(TalosConfigSpecConfigPatchesOutput{})
	pulumi.RegisterOutputType(TalosConfigSpecConfigPatchesArrayOutput{})
	pulumi.RegisterOutputType(TalosConfigSpecHostnameOutput{})
	pulumi.RegisterOutputType(TalosConfigSpecHostnamePtrOutput{})
	pulumi.RegisterOutputType(TalosConfigStatusOutput{})
	pulumi.RegisterOutputType(TalosConfigStatusPtrOutput{})
	pulumi.RegisterOutputType(TalosConfigStatusConditionsOutput{})
	pulumi.RegisterOutputType(TalosConfigStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecTemplateOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecTemplatePtrOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecTemplateSpecOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecTemplateSpecConfigPatchesOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecTemplateSpecConfigPatchesArrayOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecTemplateSpecHostnameOutput{})
	pulumi.RegisterOutputType(TalosConfigTemplateSpecTemplateSpecHostnamePtrOutput{})
}
