// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ExtensionConfig is the Schema for the ExtensionConfig API.
type ExtensionConfig struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// ExtensionConfigSpec is the desired state of the ExtensionConfig
	Spec ExtensionConfigSpecPtrOutput `pulumi:"spec"`
	// ExtensionConfigStatus is the current state of the ExtensionConfig
	Status ExtensionConfigStatusPtrOutput `pulumi:"status"`
}

// NewExtensionConfig registers a new resource with the given unique name, arguments, and options.
func NewExtensionConfig(ctx *pulumi.Context,
	name string, args *ExtensionConfigArgs, opts ...pulumi.ResourceOption) (*ExtensionConfig, error) {
	if args == nil {
		args = &ExtensionConfigArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("runtime.cluster.x-k8s.io/v1alpha1")
	args.Kind = pulumi.StringPtr("ExtensionConfig")
	var resource ExtensionConfig
	err := ctx.RegisterResource("kubernetes:runtime.cluster.x-k8s.io/v1alpha1:ExtensionConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExtensionConfig gets an existing ExtensionConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExtensionConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExtensionConfigState, opts ...pulumi.ResourceOption) (*ExtensionConfig, error) {
	var resource ExtensionConfig
	err := ctx.ReadResource("kubernetes:runtime.cluster.x-k8s.io/v1alpha1:ExtensionConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExtensionConfig resources.
type extensionConfigState struct {
}

type ExtensionConfigState struct {
}

func (ExtensionConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*extensionConfigState)(nil)).Elem()
}

type extensionConfigArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ExtensionConfigSpec is the desired state of the ExtensionConfig
	Spec *ExtensionConfigSpec `pulumi:"spec"`
	// ExtensionConfigStatus is the current state of the ExtensionConfig
	Status *ExtensionConfigStatus `pulumi:"status"`
}

// The set of arguments for constructing a ExtensionConfig resource.
type ExtensionConfigArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// ExtensionConfigSpec is the desired state of the ExtensionConfig
	Spec ExtensionConfigSpecPtrInput
	// ExtensionConfigStatus is the current state of the ExtensionConfig
	Status ExtensionConfigStatusPtrInput
}

func (ExtensionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*extensionConfigArgs)(nil)).Elem()
}

type ExtensionConfigInput interface {
	pulumi.Input

	ToExtensionConfigOutput() ExtensionConfigOutput
	ToExtensionConfigOutputWithContext(ctx context.Context) ExtensionConfigOutput
}

func (*ExtensionConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionConfig)(nil)).Elem()
}

func (i *ExtensionConfig) ToExtensionConfigOutput() ExtensionConfigOutput {
	return i.ToExtensionConfigOutputWithContext(context.Background())
}

func (i *ExtensionConfig) ToExtensionConfigOutputWithContext(ctx context.Context) ExtensionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionConfigOutput)
}

type ExtensionConfigOutput struct{ *pulumi.OutputState }

func (ExtensionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionConfig)(nil)).Elem()
}

func (o ExtensionConfigOutput) ToExtensionConfigOutput() ExtensionConfigOutput {
	return o
}

func (o ExtensionConfigOutput) ToExtensionConfigOutputWithContext(ctx context.Context) ExtensionConfigOutput {
	return o
}

func (o ExtensionConfigOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionConfig) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ExtensionConfigOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionConfig) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ExtensionConfigOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *ExtensionConfig) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// ExtensionConfigSpec is the desired state of the ExtensionConfig
func (o ExtensionConfigOutput) Spec() ExtensionConfigSpecPtrOutput {
	return o.ApplyT(func(v *ExtensionConfig) ExtensionConfigSpecPtrOutput { return v.Spec }).(ExtensionConfigSpecPtrOutput)
}

// ExtensionConfigStatus is the current state of the ExtensionConfig
func (o ExtensionConfigOutput) Status() ExtensionConfigStatusPtrOutput {
	return o.ApplyT(func(v *ExtensionConfig) ExtensionConfigStatusPtrOutput { return v.Status }).(ExtensionConfigStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionConfigInput)(nil)).Elem(), &ExtensionConfig{})
	pulumi.RegisterOutputType(ExtensionConfigOutput{})
}
