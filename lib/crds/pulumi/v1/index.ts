// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ProgramArgs } from "./program";
export type Program = import("./program").Program;
export const Program: typeof import("./program").Program = null as any;
utilities.lazyLoad(exports, ["Program"], () => require("./program"));

export { StackArgs } from "./stack";
export type Stack = import("./stack").Stack;
export const Stack: typeof import("./stack").Stack = null as any;
utilities.lazyLoad(exports, ["Stack"], () => require("./stack"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:pulumi.com/v1:Program":
                return new Program(name, <any>undefined, { urn })
            case "kubernetes:pulumi.com/v1:Stack":
                return new Stack(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "pulumi.com/v1", _module)
