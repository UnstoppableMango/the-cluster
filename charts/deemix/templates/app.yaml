apiVersion: apps/v1
{{- if or .Values.persistence.config.enabled (and .Values.persistence.downloads.enabled (contains "ReadWriteOnce" .Values.persistence.downloads.accessModes)) }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: deemix
  serviceName: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: deemix
    spec:
      containers:
        - name: deemix
          image: {{ include "image" . }}
          ports:
            - name: http
              containerPort: 6595
          env:
            - name: PUID
              value: {{ .Values.global.uid | quote }}
            - name: PGID
              value: {{ .Values.global.gid | quote }}
            - name: DEEMIX_SINGLE_USER
              value: {{ .Values.singleUser | quote }}
            {{- if .Values.disableOwnershipCheck }}
            - name: DISABLE_OWNERSHIP_CHECK
              value: {{ .Values.disableOwnershipCheck | quote }}
            {{- end }}
            - name: UMASK_SET
              value: {{ .Values.umask | quote }}
          {{- if or .Values.ingress.enabled .Values.basePath }}
            - name: DEEMIX_LOCATION_BASE
              value: {{ coalesce .Values.basePath .Values.ingress.path | quote }}
          {{- end }}
        {{- if or .Values.existingConfigMap .Values.persistence.downloads.enabled .Values.persistence.config.enabled (lt 0 (len .Values.extraVolumeMounts)) }}
          volumeMounts:
          {{- if .Values.existingConfigMap }}
            - name: config-json
              mountPath: /config/config.json
              subPath: config.json
              readOnly: true
          {{- else }}
            - name: config
              mountPath: /config
          {{- end }}
          {{- if .Values.persistence.downloads.enabled }}
            - name: downloads
              mountPath: /downloads
          {{- end }}
          {{- if lt 0 (len .Values.extraVolumeMounts) }}
            {{ .Values.extraVolumeMounts | toYaml | nindent 12 }}
          {{- end }}
        {{- end }}
          readinessProbe:
            httpGet:
              port: http
              path: {{ coalesce .Values.basePath .Values.ingress.path | quote }}
            initialDelaySeconds: 5
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              port: http
              path: {{ coalesce .Values.basePath .Values.ingress.path | quote }}
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 120
            successThreshold: 1
        {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
        {{- end }}
      securityContext:
        fsGroup: {{ .Values.global.gid }}
      {{- if or .Values.existingConfigMap (lt 0 (len .Values.extraVolumes)) }}
      volumes:
      {{- if .Values.existingConfigMap }}
        - name: config-json
          configMap:
            name: {{ .Values.existingConfigMap }}
      {{- else if not .Values.persistence.config.enabled }}
        - name: config
          emptyDir:
            sizeLimit: 250Mi
      {{- end }}
        {{- .Values.extraVolumes | toYaml | nindent 8 }}
      {{- end }}
      dnsConfig:
        options:
          - name: ndots
            value: '2'
  {{- if or .Values.persistence.downloads.enabled .Values.persistence.config.enabled }}
  volumeClaimTemplates:
  {{- if .Values.persistence.config.enabled }}
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: config
      spec:
        storageClassName: {{ .Values.persistence.config.storageClassName }}
        {{- with .Values.persistence.config.accessModes }}
        accessModes:
          {{ toYaml . | nindent 10 }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.config.size }}
  {{- end }}
  {{- if .Values.persistence.downloads.enabled }}
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: downloads
      spec:
        storageClassName: {{  .Values.persistence.downloads.storageClassName }}
        {{- with .Values.persistence.downloads.accessModes }}
        accessModes:
          {{ toYaml . | nindent 10 }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.downloads.size }}
  {{- end }}
  {{- end }}
