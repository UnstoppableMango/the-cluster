apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: filebrowser
  serviceName: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: filebrowser
    spec:
      initContainers:
        - name: setup
          image: {{ include "init.image" . }}
          command: ['bash', '/setup.sh']
          env:
            - name: DB_PATH
              value: /db/filebrowser.db
            - name: CONFIG_PATH
              value: /config/settings.json
            - name: PUID
              value: {{ .Values.global.uid | quote }}
            - name: PGID
              value: {{ .Values.global.gid | quote }}
            - name: FILEBROWSER_AUTH_HEADER
              value: {{ .Values.auth.header | quote }}
            - name: FILEBROWSER_AUTH_METHOD
              value: {{ .Values.auth.method | quote }}
            - name: FILEBROWSER_BRANDING_THEME
              value: {{ .Values.branding.theme | quote }}
            - name: FILEBROWSER_BRANDING_NAME
              value: {{ coalesce .Values.branding.name .Release.Name | quote }}
            - name: FILEBROWSER_VIEW_MODE
              value: {{ .Values.viewMode | quote }}
            {{- if .Values.branding.disableUsedPercentage }}
            - name: FILEBROWSER_DISABLE_USED_PERCENTAGE
              value: {{ .Values.branding.disableUsedPercentage | quote }}
            {{ end }}
            {{- if .Values.branding.disableExternal }}
            - name: FILEBROWSER_DISABLE_EXTERNAL
              value: {{ .Values.branding.disableExternal | quote }}
            {{ end }}
            {{- if .Values.branding.files }}
            - name: FILEBROWSER_BRANDING_FILES
              value: {{ .Values.branding.files | quote }}
            {{ end }}
          volumeMounts:
            - name: database
              mountPath: /db
            - name: config
              mountPath: /setup.sh
              subPath: setup.sh
          {{- with .Values.init.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end}}
          {{- with .Values.init.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end}}
      containers:
        - name: filebrowser
          image: {{ include "image" . }}
          ports:
            - name: http
              containerPort: {{ .Values.port }}
          env:
            - name: PUID
              value: {{ .Values.global.uid | quote }}
            - name: PGID
              value: {{ .Values.global.gid | quote }}
          volumeMounts:
          {{- if .Values.persistence.enabled }}
            - name: database
              mountPath: /database
          {{- end }}
            - name: config
              mountPath: /config/settings.json
              subPath: settings.json
          {{- if lt 0 (len .Values.extraVolumeMounts) }}
            {{ .Values.extraVolumeMounts | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              port: {{ .Values.port }}
            initialDelaySeconds: 5
            timeoutSeconds: 1
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              port: {{ .Values.port }}
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 120
            successThreshold: 1
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end}}
          {{- if .Values.securityContext }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
      securityContext:
        fsGroup: {{ .Values.global.gid }}
      volumes:
        - name: config
          configMap:
            name: {{ include "configMapName" . }}
      {{- if lt 0 (len .Values.extraVolumes) -}}
        {{ .Values.extraVolumes | toYaml | nindent 8 }}
      {{- end }}
      dnsConfig:
        options:
          - name: ndots
            value: '2'
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: database
      spec:
        storageClassName: {{ required "persistence.storageClassName is required" .Values.persistence.storageClassName }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- end }}
