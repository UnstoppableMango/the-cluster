version: '3'

# Attempt to mimic the output of `talosctl cluster create --provisioner docker ...`
# The CLI doesn't seem to have a clean way to start a node in maintenence
# mode, so we'll just stand it up manually for now.

name: rosequartz

x-controlplane: &controlplane
  image: ghcr.io/siderolabs/talos:v1.5.3
  environment:
    PLATFORM: container
    TALOSSKU: 2CPU-2048RAM
    PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  labels:
    org.opencontainers.image.source: https://github.com/siderolabs/talos
    talos.cluster.name: rosequartz
    talos.owned: false
    talos.type: controlplane
  tmpfs:
    - /run
    - /system
    - /tmp
  volumes:
    - cni:/etc/cni
    - etcK8s:/etc/kubernetes
    - libexecK8s:/usr/libexec/kubernetes
    - opt:/opt
    - udev:/usr/etc/udev
    - var:/var
    - state:/system/state
  privileged: true
  security_opt:
    - seccomp:unconfined
    - label=disable
  sysctls:
    net.ipv6.conf.all.disable_ipv6: 0

services:
  talos-controlplane-1:
    container_name: rosequartz-talos-controlplane-1
    <<: *controlplane
    networks:
      default:
        ipv4_address: '10.5.0.2'
  talos-controlplane-2:
    container_name: rosequartz-talos-controlplane-2
    <<: *controlplane
    networks:
      default:
        ipv4_address: '10.5.0.3'
  talos-controlplane-3:
    container_name: rosequartz-talos-controlplane-3
    <<: *controlplane
    networks:
      default:
        ipv4_address: '10.5.0.4'

volumes:
  cni:
  etcK8s:
  libexecK8s:
  opt:
  udev:
  var:
  state:

networks:
  default:
    labels:
      talos.cluster.name: rosequartz
      talos.owned: false
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/24
