name: Main

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  CI: true

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set modified stacks
        id: stacks
        uses: ./.github/actions/modified-stacks
    outputs:
      rosequartz: ${{ steps.stacks.outputs.rosequartz }}
      pinkdiamond: ${{ steps.stacks.outputs.pinkdiamond }}
      cert-manager: ${{ steps.stacks.outputs.cert-manager }}
      cloudflare-ingress: ${{ steps.stacks.outputs.cloudflare-ingress }}
      dashboard: ${{ steps.stacks.outputs.dashboard }}
      metrics-server: ${{ steps.stacks.outputs.metrics-server }}
      clusterapi: ${{ steps.stacks.outputs.clusterapi }}
      crds: ${{ steps.stacks.outputs.crds }}
      pulumi-operator: ${{ steps.stacks.outputs.pulumi-operator }}
      metallb: ${{ steps.stacks.outputs.metallb }}
      cloudflared: ${{ steps.stacks.outputs.cloudflared }}
      dns: ${{ steps.stacks.outputs.dns }}
      capi-templates: ${{ steps.stacks.outputs.capi-templates }}

  dns:
    name: DNS Infrastructure
    needs: [setup]
    if: fromJson(needs.setup.outputs.dns) && !failure() && !cancelled()
    uses: './.github/workflows/deploy.yml'
    with:
      kind: infra
      project: dns
      stack: prod
      verify: false
    secrets: inherit

  rosequartz:
    name: Rosequartz
    runs-on: ubuntu-latest
    needs: [setup]
    if: fromJson(needs.setup.outputs.rosequartz) && !failure() && !cancelled()
    defaults:
      run:
        working-directory: clusters/rosequartz
    env:
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - id: setup-config
        uses: ./.github/actions/setup-config
        with:
          cluster: rosequartz
          endpoint: ${{ secrets.RQ_PRIMARY_DNS_NAME }}

      - name: Health check
        run: talosctl health --nodes 192.168.1.101

  pinkdiamond:
    name: Pink Diamond
    runs-on: ubuntu-latest
    needs: [setup]
    if: fromJson(needs.setup.outputs.pinkdiamond) && !failure() && !cancelled()
    defaults:
      run:
        working-directory: clusters/pinkdiamond
    env:
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - id: setup-config
        uses: ./.github/actions/setup-config
        with:
          cluster: pinkdiamond
          endpoint: pd.thecluster.io

      - name: Health check
        if: false # Port-forwarding isn't setup for pinkdiamond
        run: talosctl health --nodes 192.168.1.104

  crds:
    name: CRDs
    needs: [setup, rosequartz]
    if: fromJson(needs.setup.outputs.crds) && !failure() && !cancelled()
    concurrency: crds-${{ github.ref }}
    uses: './.github/workflows/deploy.yml'
    with:
      project: crds
      stack: rosequartz
      verify: false
      pre-deploy-script: ./gen/capi.sh
    secrets: inherit

  cert-manager:
    name: Cert Manager
    needs: [setup, rosequartz, crds]
    if: fromJson(needs.setup.outputs.cert-manager) && !failure() && !cancelled()
    concurrency: cert-manager-${{ github.ref }}
    uses: './.github/workflows/deploy.yml'
    with:
      project: cert-manager
      stack: rosequartz
    secrets: inherit

  metrics-server:
    name: Metrics Server
    needs: [setup, rosequartz]
    if: fromJson(needs.setup.outputs.metrics-server) && !failure() && !cancelled()
    concurrency: metrics-server-${{ github.ref }}
    uses: './.github/workflows/deploy.yml'
    with:
      project: metrics-server
      stack: rosequartz
    secrets: inherit

  clusterapi:
    name: Cluster API
    needs: [setup, rosequartz, cert-manager, crds]
    if: fromJson(needs.setup.outputs.clusterapi) && !failure() && !cancelled()
    concurrency: clusterapi-${{ github.ref }}
    uses: './.github/workflows/deploy.yml'
    with:
      project: clusterapi
      stack: rosequartz
      verify: false
      pre-deploy-script: ./gen/manifests.sh
    secrets: inherit

  pulumi-operator:
    name: Pulumi Kubernetes Operator
    needs: [setup, rosequartz, crds]
    if: fromJson(needs.setup.outputs.pulumi-operator) && !failure() && !cancelled()
    concurrency: pulumi-operator-${{ github.ref }}
    uses: './.github/workflows/deploy.yml'
    with:
      project: pulumi-operator
      stack: rosequartz
      verify: false
      uses-crds: true
    secrets: inherit

  metallb:
    name: MetalLB
    needs: [setup, rosequartz]
    if: fromJson(needs.setup.outputs.metallb) && !failure() && !cancelled()
    concurrency: metallb-${{ github.ref }}
    uses: './.github/workflows/deploy.yml'
    with:
      project: metallb
      stack: rosequartz
    secrets: inherit

  cloudflared:
    name: Cloudflared
    needs: [setup, rosequartz]
    if: fromJson(needs.setup.outputs.cloudflared) && !failure() && !cancelled()
    concurrency: cloudflared-${{ github.ref }}
    uses: './.github/workflows/deploy.yml'
    with:
      project: cloudflared
      stack: rosequartz
      verify: false
    secrets: inherit

  capi-templates:
    name: Cluster API Templates
    needs: [setup, rosequartz, crds]
    if: fromJson(needs.setup.outputs.capi-templates) && !failure() && !cancelled()
    concurrency: capi-templates-${{ github.ref }}
    uses: './.github/workflows/deploy.yml'
    with:
      project: capi-templates
      stack: rosequartz
      uses-crds: true
      verify: false
    secrets: inherit
