name: Main

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  CI: true

jobs:
  setup:
    name: Setup
    runs-on: thecluster
    container: pulumi/pulumi-nodejs:v3.97.0
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set modified stacks
      id: stacks
      uses: ./.github/actions/modified-stacks
    outputs:
      rosequartz: ${{ steps.stacks.outputs.rosequartz }}
      pinkdiamond: ${{ steps.stacks.outputs.pinkdiamond }}
      cert-manager: ${{ steps.stacks.outputs.cert-manager }}
      cloudflare-ingress: ${{ steps.stacks.outputs.cloudflare-ingress }}
      dashboard: ${{ steps.stacks.outputs.dashboard }}
      metrics-server: ${{ steps.stacks.outputs.metrics-server }}
      clusterapi: ${{ steps.stacks.outputs.clusterapi }}
      crds: ${{ steps.stacks.outputs.crds }}
      pulumi-operator: ${{ steps.stacks.outputs.pulumi-operator }}
      metallb: ${{ steps.stacks.outputs.metallb }}
      cloudflared: ${{ steps.stacks.outputs.cloudflared }}
      dns: ${{ steps.stacks.outputs.dns }}
      capi-templates: ${{ steps.stacks.outputs.capi-templates }}
      oauth2-proxy: ${{ steps.stacks.outputs.oauth2-proxy }}
      ceph-csi: ${{ steps.stacks.outputs.ceph-csi }}
      keycloak: ${{ steps.stacks.outputs.keycloak }}
      kube-vip: ${{ steps.stacks.outputs.kube-vip }}
      qemu-guest-agent-talos: ${{ steps.stacks.outputs.qemu-guest-agent-talos }}
      nginx-ingress: ${{ steps.stacks.outputs.nginx-ingress }}
      nginx-ingress-operator: ${{ steps.stacks.outputs.nginx-ingress-operator }}
      pihole: ${{ steps.stacks.outputs.pihole }}
      dex: ${{ steps.stacks.outputs.dex }}
      gateway-api: ${{ steps.stacks.outputs.gateway-api }}
      kong: ${{ steps.stacks.outputs.kong }}

  dns:
    name: DNS Infrastructure
    needs: [setup]
    if: fromJson(needs.setup.outputs.dns) && !failure() && !cancelled()
    uses: './.github/workflows/deploy.yml'
    with:
      kind: infra
      project: dns
      stack: prod
      verify: false
    secrets: inherit

  pinkdiamond:
    name: Pink Diamond
    runs-on: thecluster
    container: pulumi/pulumi-nodejs:v3.97.0
    needs: [setup]
    if: fromJson(needs.setup.outputs.pinkdiamond) && !failure() && !cancelled()
    defaults:
      run:
        working-directory: clusters/pinkdiamond
    env:
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup tools
      uses: ./.github/actions/setup-tools
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - id: setup-config
      uses: ./.github/actions/setup-config
      with:
        cluster: pinkdiamond

    - name: Health check
      if: false # Port-forwarding isn't setup for pinkdiamond
      run: talosctl health --nodes 192.168.1.104

  crds-pd:
    name: Pink Diamond CRDs
    needs: [setup, pinkdiamond]
    if: fromJson(needs.setup.outputs.crds) && !failure() && !cancelled()
    concurrency: pd-crds-${{ github.ref }}
    uses: ./.github/workflows/deploy.yml
    with:
      project: crds
      stack: pinkdiamond
      verify: false
      pre-deploy-script: ./gen/capi.sh
    secrets: inherit

  cert-manager-pd:
    name: Pink Diamond Cert Manager
    needs: [setup, pinkdiamond, crds-pd]
    if: fromJson(needs.setup.outputs.cert-manager) && !failure() && !cancelled()
    concurrency: pd-cert-manager-${{ github.ref }}
    uses: ./.github/workflows/deploy.yml
    with:
      project: cert-manager
      stack: pinkdiamond
      uses-crds: true
      uses-lib: true
    secrets: inherit

  metrics-server-pd:
    name: Pink Diamond Metrics Server
    needs: [setup, pinkdiamond]
    if: fromJson(needs.setup.outputs.metrics-server) && !failure() && !cancelled()
    concurrency: pd-metrics-server-${{ github.ref }}
    uses: ./.github/workflows/deploy.yml
    with:
      project: metrics-server
      stack: pinkdiamond
    secrets: inherit

  pulumi-operator-pd:
    name: Pink Diamond Pulumi Kubernetes Operator
    needs: [setup, pinkdiamond, crds-pd]
    if: fromJson(needs.setup.outputs.pulumi-operator) && !failure() && !cancelled()
    concurrency: pd-pulumi-operator-${{ github.ref }}
    uses: ./.github/workflows/deploy.yml
    with:
      project: pulumi-operator
      stack: pinkdiamond
      verify: false
      uses-crds: true
    secrets: inherit

  metallb-pd:
    name: MetalLB - Pink Diamond
    needs: [setup, pinkdiamond]
    if: fromJson(needs.setup.outputs.metallb) && !failure() && !cancelled()
    concurrency: pd-metallb-${{ github.ref }}
    uses: ./.github/workflows/deploy.yml
    with:
      project: metallb
      stack: pinkdiamond
    secrets: inherit

  cloudflare-ingress:
    name: Cloudflare Ingress Controller
    needs: [setup, pinkdiamond]
    if: fromJson(needs.setup.outputs.cloudflare-ingress) && !failure() && !cancelled()
    concurrency: cloudflare-ingress-${{ github.ref }}
    uses: ./.github/workflows/deploy.yml
    with:
      project: cloudflare-ingress
      stack: pinkdiamond
    secrets: inherit

  ceph-csi:
    name: Ceph CSI
    needs: [setup, pinkdiamond, crds-pd]
    if: fromJson(needs.setup.outputs.ceph-csi) && !failure() && !cancelled()
    concurrency: ceph-csi-${{ github.ref }}
    uses: ./.github/workflows/deploy.yml
    with:
      project: ceph-csi
      stack: pinkdiamond
      uses-crds: true
      uses-lib: true
    secrets: inherit

  keycloak:
    name: Keycloak
    needs: [setup, pinkdiamond, ceph-csi, cloudflare-ingress]
    if: fromJson(needs.setup.outputs.keycloak) && !failure() && !cancelled()
    concurrency: keycloak-${{ github.ref }}
    uses: ./.github/workflows/deploy.yml
    with:
      project: keycloak
      stack: pinkdiamond
      uses-lib: true
    secrets: inherit

  qemu-guest-agent-talos:
    name: Qemu Guest Agent Talos
    needs: [setup, pinkdiamond]
    if: fromJson(needs.setup.outputs.qemu-guest-agent-talos) && !failure() && !cancelled()
    concurrency: qemu-guest-agent-talos-${{ github.ref }}
    uses: ./.github/workflows/deploy.yml
    with:
      project: qemu-guest-agent-talos
      stack: pinkdiamond
      verify: false
    secrets: inherit

  nginx-ingress-operator:
    name: Nginx Ingress Operator
    needs: [setup, pinkdiamond, metallb-pd]
    if: fromJson(needs.setup.outputs.nginx-ingress-operator) && !failure() && !cancelled()
    concurrency: nginx-ingress-operator-${{ github.ref }}
    uses: ./.github/workflows/deploy.yml
    with:
      project: nginx-ingress-operator
      stack: pinkdiamond
      verify: false
    secrets: inherit

  nginx-ingress:
    name: Nginx Ingress
    needs: [setup, pinkdiamond, crds-pd, nginx-ingress-operator]
    if: fromJson(needs.setup.outputs.nginx-ingress) && !failure() && !cancelled()
    concurrency: nginx-ingress-${{ github.ref }}
    uses: ./.github/workflows/deploy.yml
    with:
      project: nginx-ingress
      stack: pinkdiamond
      verify: false
      uses-crds: true
    secrets: inherit

  # dashboard:
  #   name: Dashboard
  #   needs: [setup, pinkdiamond, nginx-ingress]
  #   if: fromJson(needs.setup.outputs.dashboard) && !failure() && !cancelled()
  #   concurrency: dashboard-${{ github.ref }}
  #   uses: ./.github/workflows/deploy.yml
  #   with:
  #     project: dashboard
  #     stack: pinkdiamond
  #     verify: false
  #   secrets: inherit

  # pihole:
  #   name: Pi-hole
  #   needs: [setup, pinkdiamond, metallb-pd]
  #   if: fromJson(needs.setup.outputs.pihole) && !failure() && !cancelled()
  #   concurrency: pihole-${{ github.ref }}
  #   uses: ./.github/workflows/deploy.yml
  #   with:
  #     project: pihole
  #     stack: pinkdiamond
  #     verify: false
  #   secrets: inherit

  # dex:
  #   name: Dex
  #   needs: [setup, pinkdiamond, cloudflare-ingress, keycloak]
  #   if: fromJson(needs.setup.outputs.dex) && !failure() && !cancelled()
  #   concurrency: dex-${{ github.ref }}
  #   uses: ./.github/workflows/deploy.yml
  #   with:
  #     project: dex
  #     stack: pinkdiamond
  #     verify: false
  #   secrets: inherit

  gateway-api:
    name: Gateway API
    needs: [setup, pinkdiamond]
    if: fromJson(needs.setup.outputs.gateway-api) && !failure() && !cancelled()
    concurrency: gateway-api-${{ github.ref }}
    uses: ./.github/workflows/deploy.yml
    with:
      project: gateway-api
      stack: pinkdiamond
      uses-lib: true
      verify: false
    secrets: inherit
