name: Pulumi Deploy
description: Deploy a Pulumi stack
inputs:
  project:
    description: |
      The name project to deploy. This should match both the name of
      a directory under `apps/` or `clusters/` and the name of the
      pulumi project stripped of the `thecluster-` prefix.
    required: true
  stack:
    description: |
      The name of the pulumi stack to deploy. For clusters this is typically
      `prod`, for apps this is the name of the cluster to deploy to.
    required: true
  endpoint:
    description: |
      The endpoint to use to connect to the cluster. Required when kind == 'apps'.
    required: false
  kind:
    description: |
      The kind of stack to deploy. Acceptable values are `apps`, `clusters`, or `infra`.
    required: false
    default: apps
  op:
    description: |
      The pulumi operation to perform. Acceptable values are `preview` or `up`.
    required: false
    default: 'preview'
  verify:
    description: Whether to run a verification script or not
    required: false
    default: 'true'
  verify-script:
    description: |
      The path to a verification script to run after deploying.
      This path should be relative to the project directory.
    required: false
    default: './spec/verify.sh'
  uses-crds:
    description: Whether the stack uses the CRDs library.
    required: false
    default: 'false'
  pre-deploy-script:
    description: The path to a script to run before deploying.
    required: false
runs:
  using: composite
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        case '${{ inputs.kind }}' in
          apps | clusters | infra);;
          *) echo "Invalid kind" && exit 1;;
        esac

        case "${{ inputs.op }}" in
          preview | up);;
          *) echo "Invalid operation" && exit 1;;
        esac

    - id: setup
      uses: ./.github/actions/setup-config
      if: inputs.kind == 'apps'
      with:
        cluster: ${{ inputs.stack }}
        endpoint: ${{ inputs.endpoint }}

    - shell: bash
      run: npm ci
      working-directory: ${{ inputs.kind }}/${{ inputs.project }}

    - if: inputs.uses-crds == 'true'
      shell: bash
      run: npm ci
      working-directory: lib/crds

    - shell: bash
      run: |
        if [ $(ls -1 Chart.{yml,yaml} 2>/dev/null | wc -l) -gt 0 ]; then
          helm dependency update
        fi
      working-directory: ${{ inputs.kind }}/${{ inputs.project }}

    - if: inputs.pre-deploy-script != 'true'
      shell: bash
      run: ${{ inputs.pre-deploy-script }}
      working-directory: ${{ inputs.kind }}/${{ inputs.project }}

    - name: Pulumi ${{ inputs.op }}
      uses: pulumi/actions@v4
      with:
        stack-name: UnstoppableMango/thecluster-${{ inputs.project }}/${{ inputs.stack }}
        command: ${{ inputs.op }}
        work-dir: ${{ inputs.kind }}/${{ inputs.project }}
        comment-on-pr: true
      env:
        KUBECONFIG: ${{ steps.setup.outputs.kubeconfig }}

    - name: Validate
      if: ${{ inputs.verify == 'true' }}
      shell: bash
      run: ${{ inputs.verify-script }}
      env:
        KUBECONFIG: ${{ steps.setup.outputs.kubeconfig }}
        TALOSCONFIG: ${{ steps.setup.outputs.talosconfig }}
      working-directory: ${{ inputs.kind }}/${{ inputs.project }}
