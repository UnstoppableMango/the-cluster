name: Pulumi Deploy
description: Deploy a Pulumi stack
inputs:
  project:
    description: |
      The name project to deploy. This should match both the name of
      a directory under `apps/` or `clusters/` and the name of the
      pulumi project stripped of the `thecluster-` prefix.
    required: true
  stack:
    description: |
      The name of the pulumi stack to deploy. For clusters this is typically
      `prod`, for apps this is the name of the cluster to deploy to.
    required: true
  kind:
    description: |
      The kind of stack to deploy. Acceptable values are `app` or `cluster`.
    required: false
    default: app
  op:
    description: |
      The pulumi operation to perform. Acceptable values are `preview` or `up`.
    required: false
    default: 'preview'
  verify:
    description: Whether to run a verification script or not
    required: false
    default: 'true'
  verify-script:
    description: |
      The path to a verification script to run after deploying.
      This path should be relative to the project directory.
    required: false
    default: './spec/verify.sh'
runs:
  using: composite
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        case "${{ inputs.kind }}" in
          app | cluster) ;;
          *) echo "Invalid kind" && exit 1;;
        esac

        case "${{ inputs.op }}" in
          preview | up);;
          *) echo "Invalid operation" && exit 1;;
        esac

    - uses: ./.github/actions/setup-config
      if: inputs.kind != 'cluster'
      with:
        cluster: ${{ inputs.stack }}

    - shell: bash
      run: npm ci

    - shell: bash
      run: |
        if [ $(ls -1 Chart.{yml,yaml} 2>/dev/null | wc -l) -gt 0 ]; then
          helm dependency update
        fi

    - name: Pulumi ${{ inputs.op }}
      uses: pulumi/actions@v4
      with:
        stack-name: UnstoppableMango/thecluster-${{ inputs.project }}/${{ inputs.stack }}
        command: ${{ inputs.op }}
        work-dir: ${{ inputs.kind }}s/${{ inputs.project }}
        comment-on-pr: true

    - name: Validate
      if: ${{ inputs.verify == 'true' }}
      shell: bash
      run: ${{ inputs.verify-script }}
