name: Pulumi Deploy
description: Deploy a Pulumi stack
inputs:
  project:
    description: |
      The name project to deploy. This should match both the name of
      a directory under `apps/` or `clusters/` and the name of the
      pulumi project stripped of the `thecluster-` prefix.
    required: true
  stack:
    description: |
      The name of the pulumi stack to deploy. For clusters this is typically
      `prod`, for apps this is the name of the cluster to deploy to.
    required: true
  kind:
    description: |
      The kind of stack to deploy. Acceptable values are `apps`, `clusters`, or `infra`.
    required: false
    default: apps
  op:
    description: |
      The pulumi operation to perform. Acceptable values are `preview` or `up`.
    required: false
    default: 'preview'
  verify:
    description: Whether to run a verification script or not
    required: false
    default: 'true'
  verify-script:
    description: |
      The path to a verification script to run after deploying.
      This path should be relative to the project directory.
    required: false
    default: './spec/verify.sh'
  uses-crds:
    description: Whether the stack uses the CRDs library.
    required: false
    default: 'false'
  uses-lib:
    description: Whether the stack uses the shared library.
    required: false
    default: 'true'
  pre-deploy-script:
    description: The path to a script to run before deploying.
    required: false
runs:
  using: composite
  steps:
  - name: Validate inputs
    shell: bash
    run: |
      case '${{ inputs.kind }}' in
        apps | clusters | infra);;
        *) echo "Invalid kind" && exit 1;;
      esac

      case "${{ inputs.op }}" in
        preview | up);;
        *) echo "Invalid operation" && exit 1;;
      esac

  - id: setup
    uses: ./.github/actions/setup-config
    if: inputs.kind == 'apps'
    with:
      cluster: ${{ inputs.stack }}

  - shell: bash
    run: npm ci
    working-directory: ${{ inputs.kind }}/${{ inputs.project }}

  - if: inputs.uses-crds == 'true'
    shell: bash
    run: npm ci
    working-directory: lib/crds/nodejs

  - if: inputs.uses-lib == 'true'
    shell: bash
    run: npm ci
    working-directory: lib/nodejs

  - if: inputs.uses-lib == 'true'
    shell: bash
    working-directory: components
    run: |
      pushd cloudflare-ingress && npm i && popd
      pushd oauth2-proxy && npm i && popd

  - shell: bash
    run: |
      if [ $(ls -1 Chart.{yml,yaml} 2>/dev/null | wc -l) -gt 0 ]; then
        helm dependency update
      fi
    working-directory: ${{ inputs.kind }}/${{ inputs.project }}

  - if: inputs.pre-deploy-script != 'true'
    shell: bash
    run: ${{ inputs.pre-deploy-script }}
    working-directory: ${{ inputs.kind }}/${{ inputs.project }}

  - name: Pulumi ${{ inputs.op }}
    uses: pulumi/actions@v5
    with:
      stack-name: UnstoppableMango/thecluster-${{ inputs.project }}/${{ inputs.stack }}
#      command: ${{ inputs.op }}
      command: preview
      work-dir: ${{ inputs.kind }}/${{ inputs.project }}
      comment-on-pr: true
      refresh: true
    env:
      KUBECONFIG: ${{ steps.setup.outputs.kubeconfig }}

  - name: Validate
    if: inputs.op == 'up'
    shell: bash
    run: |
      if [ -f "$SCRIPT" ]; then
        $SCRIPT
      else
        echo "No verification script found at $SCRIPT"
      fi
    env:
      KUBECONFIG: ${{ steps.setup.outputs.kubeconfig }}
      TALOSCONFIG: ${{ steps.setup.outputs.talosconfig }}
      SCRIPT: ${{ inputs.verify-script }}
    working-directory: ${{ inputs.kind }}/${{ inputs.project }}
