name: Setup Tools
description: Setup tools
inputs:
  token:
    description: A GitHub token to use for authenticating requests
    required: true
  pulumi:
    description: Install pulumi
    required: false
    default: 'true'
  talosctl:
    description: Install talosctl
    required: false
    default: 'false'
  kubectl:
    description: Install kubectl
    required: false
    default: 'true'
  kubectl-slice:
    description: Install kubectl-slice
    required: false
    default: 'false'
  crd2pulumi:
    description: Install crd2pulumi
    required: false
    default: 'false'
  clusterctl:
    description: Install clusterctl
    required: false
    default: 'false'
  helm:
    description: Install helm
    required: false
    default: 'false'
  minver:
    description: Install MinVer CLI
    required: false
    default: 'false'
  all:
    description: Install all tools
    required: false
    default: 'false'
runs:
  using: composite
  steps:
    - uses: actions/setup-dotnet@v4
      if: inputs.minver == 'true' || inputs.all == 'true'
      with:
        global-json-file: global.json

    - name: Setup pulumi
      if: inputs.pulumi == 'true' || inputs.all == 'true'
      uses: pulumi/actions@v5
      with:
        pulumi-version: 3.117.0 # renovate depName=pulumi/pulumi extractVersion=^v(?<version>.*)
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    # - name: Setup talosctl
    #   if: inputs.talosctl == 'true'
    #   uses: jaxxstorm/action-install-gh-release@v1
    #   with:
    #     repo: siderolabs/talos
    #     tag: v1.4.0 # renovate depName=pulumi/crd2pulumi
    #     extension-matching: disable
    #     rename-to: talosctl
    #     chmod: 0755
    #     cache: enable

    # TODO: Get a specfic version
    - name: Install talosctl
      if: inputs.talosctl == 'true' || inputs.all == 'true'
      run: curl -sL https://talos.dev/install | sh
      shell: bash

    - name: Setup kubectl
      if: inputs.kubectl == 'true' || inputs.all == 'true'
      uses: azure/setup-kubectl@v4
      with:
        version: v1.30.2 # renovate depName=kubernetes/kubernetes
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Setup helm
      if: inputs.helm == 'true' || inputs.all == 'true'
      uses: azure/setup-helm@v4
      with:
        version: '3.13.2' # renovate depName=helm/helm extractVersion=extractVersion=^v(?<version>.*)
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Setup kubectl-slice
      if: inputs.kubectl-slice == 'true' || inputs.all == 'true'
      uses: jaxxstorm/action-install-gh-release@v1
      with:
        repo: patrickdappollonio/kubectl-slice
        tag: v1.3.1 # renovate depName=patrickdappollonio/kubectl-slice
        cache: enable
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Setup crd2pulumi
      if: inputs.crd2pulumi == 'true' || inputs.all == 'true'
      uses: jaxxstorm/action-install-gh-release@v1
      with:
        repo: pulumi/crd2pulumi
        tag: v1.4.0 # renovate depName=pulumi/crd2pulumi
        cache: enable
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Setup clusterctl
      if: inputs.clusterctl == 'true' || inputs.all == 'true'
      uses: jaxxstorm/action-install-gh-release@v1
      with:
        repo: kubernetes-sigs/cluster-api
        tag: v1.6.3 # renovate depName=kubernetes-sigs/cluster-api
        extension-matching: disable
        rename-to: clusterctl
        chmod: 0755
        cache: enable
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Setup MinVer CLI
      if: inputs.minver == 'true' || inputs.all == 'true'
      shell: bash
      run: dotnet tool install -g minver-cli
