{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended"
  ],
  "ignorePaths": [
    "**/node_modules/**",
    "**/vendor/**",
    "**/test/**",
    "**/tests/**",
    "lib/**"
  ],
  "major": {
    "dependencyDashboardApproval": true
  },
  "git-submodules": {
    "enabled": true
  },
  "customManagers": [
    {
      "customType": "regex",
      "fileMatch": [
        "^\\.github\\/workflows\\/.*\\.(yml|yaml)$",
        "^\\.github\\/.*\\/action\\.(yml|yaml)$",
        "^.*Pulumi.*\\.(yml|yaml)$",
        ".*/versions/.*"
      ],
      "matchStrings": [
        ".+?: (?<currentValue>\\S+) # renovate depName=(?<depName>\\S+)(?: extractVersion=(?<extractVersion>\\S+))*",
        ".+?: (?<currentDigest>[a-f0-9]{40}) # renovate depName=(?<depName>[^/?#]+\\/[^/?#]+) tag=(?<currentValue>\\S+)(?: extractVersion=(?<extractVersion>\\S*))*"
      ],
      "datasourceTemplate": "github-tags"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^\\.github\\/workflows\\/.*\\.(yml|yaml)$",
        "^\\.github\\/.*\\/action\\.(yml|yaml)$",
        "^.*Pulumi.*\\.(yml|yaml)$",
        ".*/versions/.*"
      ],
      "matchStrings": [
        ".+?: (?<currentValue>\\S+) # renovate depName=(?<depName>\\S+) datasource=docker*"
      ],
      "datasourceTemplate": "docker"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "^Dockerfile$"
      ],
      "matchStrings": [
        "depName=(?<depName>\\S+)(?: extractVersion=(?<extractVersion>\\S+))?\\s(?:ARG|ENV) \\S+_?=(?<currentValue>[\\d\\.]+)"
      ],
      "datasourceTemplate": "github-tags"
    }
  ],
  "packageRules": [
    {
      "matchDepNames": [
        "cert-manager/cert-manager",
        "kubernetes/kubernetes",
        "kubernetes/kubectl",
        "kubernetes-sigs/cluster-api",
        "siderolabs/cluster-api-bootstrap-provider-talos",
        "siderolabs/cluster-api-control-plane-provider-talos",
        "siderolabs/sidero",
        "siderolabs/talos",
        "k8s-proxmox/cluster-api-provider-proxmox"
      ],
      "dependencyDashboardApproval": true
    },
    {
      "matchPackagePatterns": [
        "talos"
      ],
      "excludePackagePatterns": [
        "pulumi"
      ],
      "groupName": "talos"
    },
    {
      "matchPackagePatterns": [
        "kubernetes",
        "kubectl"
      ],
      "excludePackagePatterns": [
        "pulumi",
        "cluster-api",
        "gateway-api",
        "dashboard",
        "nginx",
        "sigs"
      ],
      "groupName": "kubernetes"
    },
    {
      "matchPackagePatterns": [
        "pulumi/pulumi"
      ],
      "groupName": "pulumi"
    },
    {
      "matchPackagePatterns": [
        "cert-manager"
      ],
      "groupName": "cert-manager"
    },
    {
      "matchPackagePatterns": [
        "ceph"
      ],
      "groupName": "ceph"
    },
    {
      "matchPackagePatterns": [
        "kubeops"
      ],
      "groupName": "KubeOps"
    },
    {
      "matchPackagePatterns": [
        "renovate",
        "^typescript$",
        "^yaml$",
        "@actions/core",
        "@actions/github",
        "@types/node",
        "@vercel/ncc",
        "@pulumi/pulumi",
        "sealed-secrets",
        "kube-rbac-proxy",
        "kube-vip",
        "haproxy",
        "@pulumi/libvirt",
        "drone"
      ],
      "matchUpdateTypes": [
        "minor",
        "patch"
      ],
      "matchCurrentVersion": "!/^0/",
      "automerge": true
    },
    {
      "matchPackagePatterns": [
        "@pulumi/cloudflare",
        "@pulumi/kubernetes",
        "external-dns",
        "filebrowser",
        "gha-runner-scale-set",
        "kong",
        "pgadmin",
        "pihole",
        "unifi"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "matchCurrentVersion": "!/^0/",
      "automerge": true
    }
  ]
}
