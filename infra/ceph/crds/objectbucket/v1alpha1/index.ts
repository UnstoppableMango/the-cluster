// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ObjectBucketArgs } from "./objectBucket";
export type ObjectBucket = import("./objectBucket").ObjectBucket;
export const ObjectBucket: typeof import("./objectBucket").ObjectBucket = null as any;
utilities.lazyLoad(exports, ["ObjectBucket"], () => require("./objectBucket"));

export { ObjectBucketClaimArgs } from "./objectBucketClaim";
export type ObjectBucketClaim = import("./objectBucketClaim").ObjectBucketClaim;
export const ObjectBucketClaim: typeof import("./objectBucketClaim").ObjectBucketClaim = null as any;
utilities.lazyLoad(exports, ["ObjectBucketClaim"], () => require("./objectBucketClaim"));

export { ObjectBucketClaimListArgs } from "./objectBucketClaimList";
export type ObjectBucketClaimList = import("./objectBucketClaimList").ObjectBucketClaimList;
export const ObjectBucketClaimList: typeof import("./objectBucketClaimList").ObjectBucketClaimList = null as any;
utilities.lazyLoad(exports, ["ObjectBucketClaimList"], () => require("./objectBucketClaimList"));

export { ObjectBucketClaimPatchArgs } from "./objectBucketClaimPatch";
export type ObjectBucketClaimPatch = import("./objectBucketClaimPatch").ObjectBucketClaimPatch;
export const ObjectBucketClaimPatch: typeof import("./objectBucketClaimPatch").ObjectBucketClaimPatch = null as any;
utilities.lazyLoad(exports, ["ObjectBucketClaimPatch"], () => require("./objectBucketClaimPatch"));

export { ObjectBucketListArgs } from "./objectBucketList";
export type ObjectBucketList = import("./objectBucketList").ObjectBucketList;
export const ObjectBucketList: typeof import("./objectBucketList").ObjectBucketList = null as any;
utilities.lazyLoad(exports, ["ObjectBucketList"], () => require("./objectBucketList"));

export { ObjectBucketPatchArgs } from "./objectBucketPatch";
export type ObjectBucketPatch = import("./objectBucketPatch").ObjectBucketPatch;
export const ObjectBucketPatch: typeof import("./objectBucketPatch").ObjectBucketPatch = null as any;
utilities.lazyLoad(exports, ["ObjectBucketPatch"], () => require("./objectBucketPatch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:objectbucket.io/v1alpha1:ObjectBucket":
                return new ObjectBucket(name, <any>undefined, { urn })
            case "kubernetes:objectbucket.io/v1alpha1:ObjectBucketClaim":
                return new ObjectBucketClaim(name, <any>undefined, { urn })
            case "kubernetes:objectbucket.io/v1alpha1:ObjectBucketClaimList":
                return new ObjectBucketClaimList(name, <any>undefined, { urn })
            case "kubernetes:objectbucket.io/v1alpha1:ObjectBucketClaimPatch":
                return new ObjectBucketClaimPatch(name, <any>undefined, { urn })
            case "kubernetes:objectbucket.io/v1alpha1:ObjectBucketList":
                return new ObjectBucketList(name, <any>undefined, { urn })
            case "kubernetes:objectbucket.io/v1alpha1:ObjectBucketPatch":
                return new ObjectBucketPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "objectbucket.io/v1alpha1", _module)
